(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    615948,      14588]
NotebookOptionsPosition[    595748,      13970]
NotebookOutlinePosition[    596307,      13992]
CellTagsIndexPosition[    596264,      13989]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Grade 100", "Text",
 CellChangeTimes->{{3.5772189925872593`*^9, 3.57721899713008*^9}}],

Cell[CellGroupData[{

Cell["Lesson 6 ", "Title",
 CellChangeTimes->{{3.560772893016096*^9, 3.560772912637313*^9}, {
   3.574876035420355*^9, 3.574876037223378*^9}, 3.5748833271663113`*^9, {
   3.5755847276523*^9, 3.5755847614640903`*^9}}],

Cell["Mario L Gutierrez", "Subtitle",
 CellChangeTimes->{{3.5755847658962517`*^9, 3.575584777711081*^9}, {
  3.663539340759794*^9, 3.663539341148526*^9}},
 FontColor->RGBColor[1, 0, 0]],

Cell["\<\
scoring: 8 problems each worth 12 points, plus 4 free points.\
\>", "Text",
 CellChangeTimes->{{3.574883210977415*^9, 3.574883265929749*^9}},
 Background->RGBColor[0.94, 0.88, 0.94]],

Cell[CellGroupData[{

Cell["Solving Equations in one and several variables", "Subtitle",
 CellChangeTimes->{{3.56077293025535*^9, 3.560772954782749*^9}}],

Cell["\<\
This lesson involves a lot of reading, particularly in Wolfram\
\[CloseCurlyQuote]s excellently written tutorials. It is essential that you \
do this reading in the order it is assigned. You won\[CloseCurlyQuote]t be \
able to do the problems without having done the problems beforehand. As usual \
the tutorials are Mathematics notebooks. You can do your own examples in them \
without altering the notebooks.It is essential that you experiment. \
\>", "Text",
 CellChangeTimes->{{3.561499498751329*^9, 3.5614996658836*^9}, {
   3.561499697108848*^9, 3.56149990815943*^9}, 3.574876080042892*^9, 
   3.574876950371229*^9}],

Cell[TextData[{
 "Read S 6.1\nQuery ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Eliminate",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.560773483939904*^9, 3.560773485281293*^9}, {
  3.5607735555639257`*^9, 3.560773563956086*^9}, {3.56077480859204*^9, 
  3.560774844768667*^9}}],

Cell[TextData[{
 "Read ",
 ButtonBox["SolvingEquations",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/SolvingEquations"],
 " up to Out 6.\nRead ",
 ButtonBox["EliminatingVariables",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EliminatingVariables"],
 "."
}], "Text",
 CellChangeTimes->{
  3.560773776230892*^9, {3.560773809952014*^9, 3.560773848230081*^9}, {
   3.560773979869912*^9, 3.560774001867086*^9}, {3.560774132810658*^9, 
   3.560774133959961*^9}, {3.5607742413676567`*^9, 3.5607742745010777`*^9}, {
   3.560774442171269*^9, 3.56077444217281*^9}, {3.560774567849455*^9, 
   3.560774585480105*^9}, {3.5607746953350773`*^9, 3.560774695337871*^9}, {
   3.560774730902388*^9, 3.560774797727371*^9}, {3.560774863065751*^9, 
   3.560774929564142*^9}, {3.560854218822631*^9, 3.560854241782584*^9}, 
   3.561071097608282*^9}],

Cell[TextData[{
 "\n\nThe following section is a typical example of how we might use the ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Eliminate",
  FontWeight->"Bold"],
 " commands."
}], "Text",
 CellChangeTimes->{
  3.560773776230892*^9, {3.560773809952014*^9, 3.560773848230081*^9}, {
   3.560773979869912*^9, 3.560774001867086*^9}, {3.560774132810658*^9, 
   3.560774133959961*^9}, {3.5607742413676567`*^9, 3.5607742745010777`*^9}, {
   3.560774442171269*^9, 3.56077444217281*^9}, {3.560774567849455*^9, 
   3.560774585480105*^9}, {3.5607746953350773`*^9, 3.560774695337871*^9}, {
   3.560774730902388*^9, 3.560774797727371*^9}, {3.560774863065751*^9, 
   3.560774929564142*^9}, {3.560854218822631*^9, 3.560854241782584*^9}, {
   3.561071097608282*^9, 3.561071102144109*^9}, 3.5614999392630587`*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5609825459383087`*^9, 3.560982567271891*^9}}],

Cell[CellGroupData[{

Cell["A Cartesian Treatment of the Cycloid", "Section",
 CellChangeTimes->{{3.560364207972398*^9, 3.560364228530551*^9}}],

Cell[CellGroupData[{

Cell["Cartesian implicit equations for the cycloid: Eliminate", "Subsection",
 CellChangeTimes->{{3.56035718854802*^9, 3.5603572233318043`*^9}, {
  3.560362621002317*^9, 3.560362630242866*^9}}],

Cell["Recall (lesson 4) the parametric equations of the cycloid", "Text",
 CellChangeTimes->{{3.560364259621112*^9, 3.560364287972835*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqx", "=", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"t", "-", 
    RowBox[{"Sin", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.560346488665983*^9, 3.560346508140697*^9}, {
  3.560355132860531*^9, 3.5603551410366898`*^9}, {3.560356091533955*^9, 
  3.560356096358284*^9}, {3.56035627130901*^9, 3.5603562987487297`*^9}, {
  3.560364305695719*^9, 3.560364331376185*^9}}],

Cell[BoxData[
 RowBox[{"x", "\[Equal]", 
  RowBox[{"t", "-", 
   RowBox[{"Sin", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.560346512293254*^9, 3.560349960960187*^9, 3.5603552351296*^9, 
   3.5603552928341923`*^9, 3.560355600134315*^9, 3.5603560987384377`*^9, 
   3.560356305711328*^9, {3.560364315312895*^9, 3.560364335110578*^9}, 
   3.5607749462700443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqy", "=", 
  RowBox[{"y", "\[Equal]", 
   RowBox[{"1", "-", 
    RowBox[{"Cos", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.560346513698048*^9, 3.560346551062711*^9}, {
  3.560355150861227*^9, 3.560355163132002*^9}, {3.560356076237864*^9, 
  3.560356082077631*^9}, {3.560356311526226*^9, 3.5603563260942087`*^9}}],

Cell[BoxData[
 RowBox[{"y", "\[Equal]", 
  RowBox[{"1", "-", 
   RowBox[{"Cos", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.560346553895756*^9, 3.560349960999501*^9, 
  3.5603552419020433`*^9, 3.560355302280682*^9, 3.5603556062864857`*^9, 
  3.560356084191958*^9, 3.560356350155897*^9, 3.5607749530224752`*^9}]
}, Open  ]],

Cell[TextData[{
 "We have two equations in three variables ",
 StyleBox["x,y",
  FontSlant->"Italic"],
 " and ",
 StyleBox["t",
  FontSlant->"Italic"],
 " we try to get Cartesian equations by eliminating ",
 StyleBox["t",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.560357260966701*^9, 3.560357339976068*^9}, {
  3.560362724790368*^9, 3.560362726278322*^9}, {3.5603643444147*^9, 
  3.5603643477271757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elim", "=", 
  RowBox[{"Eliminate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqx", ",", "eqy"}], "}"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560346560667222*^9, 3.560346584959765*^9}, {
  3.560355781762712*^9, 3.560355786074424*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Eliminate", "::", "ifun"}], "MessageName"], ":", 
  " ", "\<\"Inverse functions are being used by \[NoBreak]\\!\\(Eliminate\\)\
\[NoBreak], so some solutions may not be found; use Reduce for complete \
solution information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Eliminate/ifun\\\", ButtonNote -> \
\\\"Eliminate::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560346587691168*^9, 3.560346650694685*^9, 
  3.560349961047987*^9, 3.5603553084691067`*^9, 3.5603557137045116`*^9, 
  3.560355789667574*^9, 3.560355950678298*^9, 3.560356119657177*^9, 
  3.560356376625863*^9, 3.5603573531027393`*^9, 3.560774973319099*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "x", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "y"}], "]"}]}], "+", 
    SuperscriptBox[
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "y"}], "]"}], "2"]}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", "y"}], "-", 
    SuperscriptBox["y", "2"]}]}], "||", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", "x", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "y"}], "]"}]}], "+", 
    SuperscriptBox[
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "y"}], "]"}], "2"]}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", "y"}], "-", 
    SuperscriptBox["y", "2"]}]}]}]], "Output",
 CellChangeTimes->{3.560346650697484*^9, 3.560349961052738*^9, 
  3.560355308490888*^9, 3.5603557137129374`*^9, 3.560355789675807*^9, 
  3.5603559506863947`*^9, 3.560356119660612*^9, 3.560356376630411*^9, 
  3.560357353107204*^9, 3.560774973327599*^9}]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s disregard the warning. Then we get two possible \
implicit Cartesian equations. Let\[CloseCurlyQuote]s name them:\
\>", "Text",
 CellChangeTimes->{{3.56035738872082*^9, 3.560357469972245*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqelimneg", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "x", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "y"}], "]"}]}], "+", 
    SuperscriptBox[
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "y"}], "]"}], "2"]}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", "y"}], "-", 
    SuperscriptBox["y", "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.5603565625279083`*^9, 3.560356591156609*^9}, {
  3.560356622531039*^9, 3.560356623714966*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "x", " ", 
    RowBox[{"ArcCos", "[", 
     RowBox[{"1", "-", "y"}], "]"}]}], "+", 
   SuperscriptBox[
    RowBox[{"ArcCos", "[", 
     RowBox[{"1", "-", "y"}], "]"}], "2"]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"2", " ", "y"}], "-", 
   SuperscriptBox["y", "2"]}]}]], "Output",
 CellChangeTimes->{{3.560356598364097*^9, 3.560356626472398*^9}, 
   3.560774989798726*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqelimpos", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", "x", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "y"}], "]"}]}], "+", 
    SuperscriptBox[
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "y"}], "]"}], "2"]}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", "y"}], "-", 
    SuperscriptBox["y", "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.560356636301036*^9, 3.560356663742072*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", "x", " ", 
    RowBox[{"ArcCos", "[", 
     RowBox[{"1", "-", "y"}], "]"}]}], "+", 
   SuperscriptBox[
    RowBox[{"ArcCos", "[", 
     RowBox[{"1", "-", "y"}], "]"}], "2"]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"2", " ", "y"}], "-", 
   SuperscriptBox["y", "2"]}]}]], "Output",
 CellChangeTimes->{3.560775005326955*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Explicit Solutions: Solve", "Subsection",
 CellChangeTimes->{{3.560359545799369*^9, 3.5603595707424307`*^9}, {
  3.5603630741782923`*^9, 3.5603630804913607`*^9}}],

Cell[TextData[{
 "Now since we have a bias for trying to solve for y in terms of x lets try \
to solve the implicit equations for ",
 StyleBox["y ",
  FontSlant->"Italic"],
 " as an explicit expression in ",
 StyleBox["x",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.5603575153351583`*^9, 3.560357576504278*^9}, {
  3.5603595852872057`*^9, 3.560359598296*^9}, {3.560364410817415*^9, 
  3.5603644492107773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"eqelimpos", " ", ",", "y", ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.5603566952788353`*^9, 3.56035673662024*^9}, {
  3.5603576328132153`*^9, 3.560357698942925*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "nsmet"}], "MessageName"], ":", 
  " ", "\<\"This system cannot be solved with the methods available to Solve. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.56035768471743*^9, 3.5603577047955837`*^9}, 
   3.56077502852669*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "x", " ", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "y"}], "]"}]}], "+", 
     SuperscriptBox[
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "y"}], "]"}], "2"]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"2", " ", "y"}], "-", 
     SuperscriptBox["y", "2"]}]}], ",", "y", ",", "Reals"}], "]"}]], "Output",\

 CellChangeTimes->{{3.5603576847202272`*^9, 3.56035770479979*^9}, 
   3.560775028532251*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"eqelimneg", ",", "y", ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.560356751858519*^9, 3.5603568357761097`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "nsmet"}], "MessageName"], ":", 
  " ", "\<\"This system cannot be solved with the methods available to Solve. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560356837661228*^9, 3.560357714543593*^9, 
  3.560775047470586*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "x", " ", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "y"}], "]"}]}], "+", 
     SuperscriptBox[
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "y"}], "]"}], "2"]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"2", " ", "y"}], "-", 
     SuperscriptBox["y", "2"]}]}], ",", "y", ",", "Reals"}], "]"}]], "Output",\

 CellChangeTimes->{3.560356837663986*^9, 3.560357714546802*^9, 
  3.560775047479252*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Solve",
  FontWeight->"Bold"],
 " is meant primarily for polynomial equations, both of our equations involve \
the transcendental function ",
 StyleBox["ArcCos",
  FontWeight->"Bold"],
 " and so it is not surprising that ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " fails. We should have the same trouble trying to solve for ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "in terms of ",
 StyleBox["y",
  FontSlant->"Italic"],
 " but let\[CloseCurlyQuote]s try:"
}], "Text",
 CellChangeTimes->{{3.560357752366577*^9, 3.560358004575346*^9}, 
   3.5603644738275557`*^9, {3.56149998680726*^9, 3.561500000519389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"eqelimpos", ",", "x", ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.56035586659813*^9, 3.560355880317498*^9}, {
  3.5603560437475033`*^9, 3.560356049067819*^9}, {3.560356185801425*^9, 
  3.5603561896008053`*^9}, {3.5603565056272373`*^9, 3.560356510708397*^9}, {
  3.560356848352366*^9, 3.560356855296423*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          RowBox[{
           RowBox[{"2", " ", "y"}], "-", 
           SuperscriptBox["y", "2"]}]]}], "-", 
        RowBox[{"ArcCos", "[", 
         RowBox[{"1", "-", "y"}], "]"}]}], ",", 
       RowBox[{"0", "<", "y", "<", "2"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", "y"}], "-", 
          SuperscriptBox["y", "2"]}]], "-", 
        RowBox[{"ArcCos", "[", 
         RowBox[{"1", "-", "y"}], "]"}]}], ",", 
       RowBox[{"0", "<", "y", "<", "2"}]}], "]"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.5603558824578447`*^9, 3.560356053205649*^9, 
  3.560356247574027*^9, 3.560356478343656*^9, 3.560356514275095*^9, 
  3.560356862188817*^9, 3.560358022262517*^9}]
}, Open  ]],

Cell[TextData[{
 "Somewhat surprisingly we get two solutions. ",
 StyleBox["ConditionalExpression",
  FontWeight->"Bold"],
 " is telling us the solutions are only valid  when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "y", "<", "2"}], TraditionalForm]]],
 " or so ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is indicating. They actually work for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "2"}], 
   TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.5603580696576138`*^9, 3.560358109281597*^9}, {
   3.5603581893518887`*^9, 3.560358197733865*^9}, {3.560358231087781*^9, 
   3.5603583018919687`*^9}, {3.560359626152912*^9, 3.560359641993413*^9}, {
   3.560364485860578*^9, 3.560364581984124*^9}, 3.5603655132026443`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"eqelimneg", ",", "x", ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.560356891313916*^9, 3.560356915554256*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          RowBox[{
           RowBox[{"2", " ", "y"}], "-", 
           SuperscriptBox["y", "2"]}]]}], "+", 
        RowBox[{"ArcCos", "[", 
         RowBox[{"1", "-", "y"}], "]"}]}], ",", 
       RowBox[{"0", "<", "y", "<", "2"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", "y"}], "-", 
          SuperscriptBox["y", "2"]}]], "+", 
        RowBox[{"ArcCos", "[", 
         RowBox[{"1", "-", "y"}], "]"}]}], ",", 
       RowBox[{"0", "<", "y", "<", "2"}]}], "]"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.560356917950593*^9}]
}, Open  ]],

Cell[TextData[{
 "It is useful to notice that the solutions for ",
 StyleBox["eqelimneg",
  FontWeight->"Bold"],
 " are the negative of the solutions for ",
 StyleBox["eqelimpos",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.560358351523795*^9, 3.560358439646826*^9}}],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s plot the solutions for ",
 StyleBox["eqelimneg",
  FontWeight->"Bold"],
 " on the same graph. Since we are graphing expressions in y we will take the \
horizontal  axis to be ",
 StyleBox["y",
  FontSlant->"Italic"],
 " and vertical axis to be ",
 StyleBox["x",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.560358517623604*^9, 3.560358535547941*^9}, {
   3.560358567764298*^9, 3.560358741081665*^9}, {3.560363136764832*^9, 
   3.56036319273452*^9}, 3.560365553425232*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Tooltip", "[", 
    RowBox[{"{", 
     RowBox[{"\[Pi]", ",", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", "y"}], "-", 
          SuperscriptBox["y", "2"]}]]}], "+", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", "y"}], "]"}]}], ",", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"2", " ", "y"}], "-", 
         SuperscriptBox["y", "2"]}]], "+", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", "y"}], "]"}]}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<y\>\"", ",", "\"\<x\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", "Red", "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ",", 
      RowBox[{"7", "/", "2"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "2", "}"}], ",", "LightOrange"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQLZMnmnOj7ZWj0l2TPBD9yUG8GEQfqfpbAaJ9fP3r
QPTJErtuEH1mW9hsEN3cFjAXRL/5o7gQRKv1tYLpXbc6VoNoL1XWtSA6wcdk
I4i+FXkNTLssWrYXRLfsZtoHokX2NbvdBNL2lqc9QPSF0MM+ILqLd340iP4z
62QpiH4wIbMSRAdcY1l4C0hf87oBpu12N68C0SL27atB9Kc83Y1g8e50ML2C
e6f3bSB9097HF0QnTJ0TA6IbLhyPB9E6G67mgugrJy8XgejHdU9aQbSe65YO
EJ1ntrQXRFvpLu0D0QCNeq8p
  "]],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
9tiEy934Svpz5DG55KWCUTr/H3PVFOo=
   
   "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, 
     {RGBColor[1, 0.9, 0.8], EdgeForm[None], 
      GraphicsGroupBox[
       PolygonBox[{{53, 176, 155, 197, 137, 194, 173, 122, 191, 170, 152, 110,
         188, 167, 149, 134, 103, 183, 162, 144, 129, 117, 54, 177, 156, 138, 
        123, 111, 104, 184, 163, 145, 130, 118, 55, 178, 157, 139, 124, 112, 
        105, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 
        89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 179, 158, 140, 125, 113, 106, 
        99, 180, 159, 141, 126, 114, 107, 185, 164, 146, 131, 119, 100, 181, 
        160, 142, 127, 115, 108, 186, 165, 147, 132, 120, 101, 182, 161, 143, 
        128, 116, 189, 168, 150, 135, 109, 187, 166, 148, 133, 192, 171, 153, 
        121, 190, 169, 151, 195, 174, 136, 193, 172, 198, 154, 196, 175, 199, 
        102, 50, 52, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 
        35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 
        18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 
        1}}]]}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
     TagBox[
      TooltipBox[
       {Hue[0.67, 0.6, 0.6], 
        LineBox[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
         17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
         34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 
         50}]},
       "\[Pi]"],
      Annotation[#, Pi, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.9060679774997897, 0.6, 0.6], 
        LineBox[{53, 176, 155, 197, 137, 194, 173, 122, 191, 170, 152, 110, 
         188, 167, 149, 134, 103, 183, 162, 144, 129, 117, 54, 177, 156, 138, 
         123, 111, 104, 184, 163, 145, 130, 118, 55, 178, 157, 139, 124, 112, 
         105, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 
         72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 
         89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 179, 158, 140, 125, 113, 106,
          99, 180, 159, 141, 126, 114, 107, 185, 164, 146, 131, 119, 100, 181,
          160, 142, 127, 115, 108, 186, 165, 147, 132, 120, 101, 182, 161, 
         143, 128, 116, 189, 168, 150, 135, 109, 187, 166, 148, 133, 192, 171,
          153, 121, 190, 169, 151, 195, 174, 136, 193, 172, 198, 154, 196, 
         175, 199, 102}]},
       RowBox[{
         RowBox[{"-", 
           SqrtBox[
            RowBox[{
              RowBox[{"2", " ", "y"}], "-", 
              SuperscriptBox["y", "2"]}]]}], "+", 
         RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "y"}], "]"}]}]],
      Annotation[#, -(2 $CellContext`y - $CellContext`y^2)^Rational[1, 2] + 
       ArcCos[1 - $CellContext`y], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0Xc3F1AcB+CfkT0zShooRcOIEEVmgyKlJeN4AXo93pFZKUSpSGWPFE30
+OM5n+/93HPPvefczJ5nrb1BgUCgj35uWFykkxO0U088j6ghn2DaqOI8R/nj
fIss5wyHiGJAf1MWkUECIfzV35UV5HCYaAb1t2QxmSQSyj/9EI3mS2RxkAPs
6IcZ4TkveMkor3jNGONM8IZJpnjLO6Z5zwc+MsMsn5jjM1/4yjwLLLLEMius
ssY6G3xjk+/8YIsm7y3hJEmEsavf5ra5lFMkE86evlVeIZc0YvipvyPLyCaF
iP3P5B5XOcsRYvllq1le5jSpRPKAa1zgGEHcp5JzpPOYWgqI4yHV5PGUBo7z
hDq6KKSD63Tz2/3/AT0BRqI=
         "]]},
       RowBox[{
         SqrtBox[
          RowBox[{
            RowBox[{"2", " ", "y"}], "-", 
            SuperscriptBox["y", "2"]}]], "+", 
         RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "y"}], "]"}]}]],
      Annotation[#, (2 $CellContext`y - $CellContext`y^2)^Rational[1, 2] + 
       ArcCos[1 - $CellContext`y], "Tooltip"]& ]}}],
  Axes->True,
  AxesLabel->{
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"x\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  LabelStyle->{
    RGBColor[1, 0, 0]},
  Method->{"AxesInFront" -> True},
  PlotRange->NCache[{{0, 2}, {
      Rational[-1, 2], 
      Rational[7, 2]}}, {{0, 2}, {-0.5, 3.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.5603590154960117`*^9, 3.560359150314982*^9, 3.560359185495945*^9, 
   3.560359313346552*^9, 3.560359413554357*^9, 3.560360680893656*^9, 
   3.560360938644253*^9, 3.5603632830512*^9, {3.5603633846667128`*^9, 
   3.560363406891934*^9}, 3.5603646558445787`*^9, 3.560364802606373*^9, 
   3.560364953911662*^9, 3.560365128833037*^9, 3.560365176228891*^9}]
}, Open  ]],

Cell[TextData[{
 "Note the ",
 StyleBox["Filling",
  FontWeight->"Bold"],
 " option ( S 106-107). I fiddled around with the color of the filling until \
I could see the curves clearly. ",
 StyleBox["Tooltip",
  FontWeight->"Bold"],
 " (R p122) comes in handy."
}], "Text",
 CellChangeTimes->{{3.560363489954864*^9, 3.560363605284902*^9}, {
  3.5603636944078836`*^9, 3.5603637316334677`*^9}}],

Cell[TextData[{
 "View the curves as lying to the right of the ",
 StyleBox["x",
  FontSlant->"Italic"],
 "-axis (remember this axis is vertical) and comparing with the ",
 StyleBox["ParametricPlot ",
  FontWeight->"Bold"],
 "of the cycloid which we saw in the beginning of lesson 4, the plot of"
}], "Text",
 CellChangeTimes->{{3.5603597449488*^9, 3.560359777941959*^9}, {
   3.56035989989133*^9, 3.560359980677237*^9}, {3.560360257910986*^9, 
   3.5603603843397083`*^9}, 3.560362534809387*^9, {3.560365337972452*^9, 
   3.5603653409700823`*^9}, {3.561502501536634*^9, 3.561502504494445*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SqrtBox[
    RowBox[{
     RowBox[{"2", " ", "y"}], "-", 
     SuperscriptBox["y", "2"]}]]}], "+", 
  RowBox[{"ArcCos", "[", 
   RowBox[{"1", "-", "y"}], "]"}]}]], "DisplayFormula",
 CellChangeTimes->{3.560359873502873*^9, 3.5603602169201317`*^9}],

Cell["\<\
yields half a hump of the cycloid ( to the right of the x-axis).\
\>", "Text",
 CellChangeTimes->{{3.560360033192287*^9, 3.5603600739922323`*^9}, {
  3.5603610966602697`*^9, 3.5603611347252893`*^9}, {3.5603611944878197`*^9, 
  3.560361206520273*^9}, {3.574876292922236*^9, 3.574876316291173*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Areas and Arc-length of the Cycloid", "Subsection",
 CellChangeTimes->{{3.5603601240739193`*^9, 3.5603601509389753`*^9}}],

Cell[CellGroupData[{

Cell["Area", "Subsubsection",
 CellChangeTimes->{{3.560361675458857*^9, 3.560361677361115*^9}}],

Cell[TextData[{
 "Let's find the area of this half-hump. The ",
 StyleBox["Filling",
  FontWeight->"Bold"],
 " option (S p106) shades the area that we want. We get this area by \
integrating  top function minus bottom function with respect to ",
 StyleBox["y",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{
  3.560360433053815*^9, {3.560360985667179*^9, 3.560360992385901*^9}, {
   3.5603610232762613`*^9, 3.560361084532133*^9}, {3.5603612144241743`*^9, 
   3.560361329909205*^9}, {3.5603637741483803`*^9, 3.56036390434403*^9}, 
   3.5603653932437963`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"\[Pi]", "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"2", " ", "y"}], "-", 
         SuperscriptBox["y", "2"]}]]}], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "y"}], "]"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.560347971605144*^9, 3.560347979176876*^9}, {
   3.560348393660128*^9, 3.5603484140493717`*^9}, {3.560361346793988*^9, 
   3.560361357783445*^9}, 3.5603613966534033`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[Pi]"}], "2"]], "Output",
 CellChangeTimes->{3.560347432686899*^9, 3.560347491328335*^9, 
  3.5603478015049562`*^9, 3.560348420499475*^9, 3.560349963518347*^9, 
  3.5603614218494587`*^9}]
}, Open  ]],

Cell[TextData[{
 "The area of a half-hump is ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"3", "\[Pi]"}], "2"], TraditionalForm]]],
 ". Thus the area of one hump of the cycloid is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "\[Pi]"}], TraditionalForm]]],
 ". This is consistent with the result we got at the beginning of lesson 4."
}], "Text",
 CellChangeTimes->{{3.5603614306287613`*^9, 3.560361587501898*^9}, {
  3.560775553333283*^9, 3.560775554546323*^9}, {3.560775996556478*^9, 
  3.560776052691675*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arc-length", "Subsubsection",
 CellChangeTimes->{{3.560361756907917*^9, 3.5603617621078176`*^9}}],

Cell[TextData[{
 "Remember from first year calculus that the arc-length of the plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "=", 
    RowBox[{"f", "(", "z", ")"}]}], TraditionalForm]]],
 " as ",
 StyleBox["z",
  FontSlant->"Italic"],
 " goes from ",
 StyleBox["a",
  FontSlant->"Italic"],
 " to ",
 StyleBox["b",
  FontSlant->"Italic"],
 " is"
}], "Text",
 CellChangeTimes->{{3.56036187425782*^9, 3.5603620251573563`*^9}, 
   3.56133315873884*^9}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "a", "b"], 
  RowBox[{
   SqrtBox[
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"f", "'"}], "\[NegativeThinSpace]\[NegativeThinSpace]", 
      SuperscriptBox[
       RowBox[{"(", "z", ")"}], "2"]}]}]], 
   RowBox[{"\[DifferentialD]", "z"}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.5603620773712177`*^9, 3.5603621616382627`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dx", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        RowBox[{"2", " ", "y"}], "-", 
        SuperscriptBox["y", "2"]}]]}], "+", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "y"}], "]"}]}], ",", "y"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560348526895648*^9, 3.56034856648671*^9}, {
   3.5603616029051943`*^9, 3.5603616131719913`*^9}, 3.560362175574835*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "y"}], ")"}], "2"]}]]], "-", 
  FractionBox[
   RowBox[{"2", "-", 
    RowBox[{"2", " ", "y"}]}], 
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"2", " ", "y"}], "-", 
      SuperscriptBox["y", "2"]}]]}]]}]], "Output",
 CellChangeTimes->{3.560348573136737*^9, 3.5603499637114677`*^9, 
  3.560361849309256*^9, 3.560362205166954*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["dx", "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.560348590836932*^9, 3.560348634264675*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.5603486516294737`*^9, 3.560349963859456*^9, 
  3.560362235123601*^9}]
}, Open  ]],

Cell["\<\
Thus the arc-length of one whole hump of the cycloid is 8. This is the same \
answer we got in the beginning of lesson 4.\
\>", "Text",
 CellChangeTimes->{{3.560362349474185*^9, 3.5603624259873857`*^9}}],

Cell["", "Text",
 CellChangeTimes->{{3.56036226643007*^9, 3.5603622899866333`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.574877328139811*^9, 3.574877363377643*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving Equations in One Variable:", "Section",
 CellChangeTimes->{{3.560775685111912*^9, 3.5607757404879723`*^9}}],

Cell[TextData[{
 "Read the tutorial ",
 ButtonBox["ApplyingTransformationRules",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/ApplyingTransformationRules"],
 " down to In[14]. From our reading (",
 ButtonBox["SolvingEquations",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/SolvingEquations"],
 ") we have seen that the output from the Solve command is given in terms of \
replacement rules. This is actually what we should prefer because most often \
we want to substitute our solution into other expressions. If we want the \
solutions we just substitute into our variable"
}], "Text",
 CellChangeTimes->{{3.560776119037738*^9, 3.560776177055586*^9}, {
   3.560776260181801*^9, 3.560776261930525*^9}, {3.5607762960437517`*^9, 
   3.56077630876407*^9}, {3.560776363220154*^9, 3.5607763958553257`*^9}, {
   3.5607765043012247`*^9, 3.560776549788454*^9}, {3.560776596606353*^9, 
   3.560776609334877*^9}, {3.560776671105434*^9, 3.560776694275955*^9}, {
   3.5607768109606247`*^9, 3.560776828246496*^9}, {3.5607768817449293`*^9, 
   3.560776881746723*^9}, {3.560776978709626*^9, 3.560777003460621*^9}, {
   3.560777073100021*^9, 3.5607771314729958`*^9}, {3.560777190754943*^9, 
   3.560777342432173*^9}, {3.5748764018565073`*^9, 3.574876411650751*^9}, 
   3.5748773914021482`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"3", "x"}], "+", "1"}], "\[Equal]", "2"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.560777349668221*^9, 3.560777378587604*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        SqrtBox["13"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        SqrtBox["13"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.560777381257842*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      RowBox[{"3", "x"}], "+", "1"}], "\[Equal]", "2"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.560777391002262*^9, 3.5607774240949078`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      SqrtBox["13"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      SqrtBox["13"]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.560777433025551*^9}]
}, Open  ]],

Cell[TextData[{
 "A peculiarity: If we ",
 StyleBox["Solve ",
  FontWeight->"Bold"],
 " an equation with one solution and substitute we get a one element list"
}], "Text",
 CellChangeTimes->{{3.560777468189239*^9, 3.560777580440839*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"3", "x"}], "+", "1"}], "\[Equal]", "2"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5607775879603157`*^9, 3.560777618123639*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox["1", "3"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.560777620901452*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"3", "x"}], "+", "1"}], "\[Equal]", "2"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5607775879603157`*^9, 3.560777635918599*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox["1", "3"], "}"}]], "Output",
 CellChangeTimes->{3.560777638055896*^9}]
}, Open  ]],

Cell["\<\
If we want to get the actual solution we have to do it with something like\
\>", "Text",
 CellChangeTimes->{{3.56077764260354*^9, 3.560777720981814*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"3", "x"}], "+", "1"}], "\[Equal]", "2"}], ",", "x"}], "]"}], 
   "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5607775879603157`*^9, 3.560777635918599*^9}, {
  3.560777729703306*^9, 3.5607777363204813`*^9}}],

Cell[BoxData[
 FractionBox["1", "3"]], "Output",
 CellChangeTimes->{3.560777739236578*^9}]
}, Open  ]],

Cell["or", "Text",
 CellChangeTimes->{{3.574876441464735*^9, 3.574876442719616*^9}, {
  3.5748764978271093`*^9, 3.57487649856144*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"3", "x"}], "+", "1"}], "\[Equal]", "2"}], ",", "x"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.574876450251629*^9, 3.574876485035243*^9}}],

Cell[BoxData[
 FractionBox["1", "3"]], "Output",
 CellChangeTimes->{3.574876487809434*^9}]
}, Open  ]],

Cell["\<\
In any Solve  the output { } mean no solutions and {{ }} means an infinite \
number of solutions .  \
\>", "Text",
 CellChangeTimes->{{3.57487900844044*^9, 3.5748790260923634`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "2"], "==", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"2", "x"}], "+", "1"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.57487904099533*^9, 3.574879060582245*^9}, {
  3.5748790923112383`*^9, 3.574879148490993*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.574879140694631*^9, 3.5748791498508167`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "2"], "==", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"2", "x"}], "+", "2"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.57487904099533*^9, 3.574879060582245*^9}, {
  3.5748790923112383`*^9, 3.5748791598180733`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.57487916234346*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distance Between a Point and a Line", "Subsubsection",
 CellChangeTimes->{{3.50584251533286*^9, 3.505842570638451*^9}, {
  3.560779383104946*^9, 3.560779428145805*^9}}],

Cell[TextData[{
 "  The equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "x"}], "+", 
     RowBox[{"b", " ", "y"}], "+", "c"}], "=", "0"}], TraditionalForm]]],
 " is the most general form of the equation of a straight-line in the plane \
(one of a,b must be non-zero). Recall that multiplying a,b,c by the same \
non-zero constant gives an equivalent equation and hence the same line. Let \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", 
    RowBox[{"{", 
     RowBox[{"x0", ",", "y0"}], "}"}], " "}], TraditionalForm]]],
 " be a point in the plane. Let ",
 StyleBox["L0",
  FontSlant->"Italic"],
 "     be the line with equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "x"}], "+", 
     RowBox[{"b", " ", "y"}], "+", "c"}], "=", "0"}], TraditionalForm]]],
 ". Let ",
 StyleBox["L1",
  FontSlant->"Italic"],
 " be the line through p and perpendicular to ",
 StyleBox["L0",
  FontSlant->"Italic"],
 ". Let q be the intersection of ",
 StyleBox["L0",
  FontSlant->"Italic"],
 " and ",
 StyleBox["L1.",
  FontSlant->"Italic"],
 " The distance between p and ",
 StyleBox["L0 ",
  FontSlant->"Italic"],
 "is by definition the distance between p and q."
}], "Text",
 CellChangeTimes->{{3.456251171450869*^9, 3.456251180903701*^9}, {
   3.505842586079624*^9, 3.505842609993746*^9}, {3.505842654332673*^9, 
   3.5058426668978987`*^9}, {3.5058432455598993`*^9, 3.505843311655794*^9}, 
   3.5607779604993677`*^9, 3.561333175232353*^9},
 FontWeight->"Plain"],

Cell[TextData[{
 StyleBox["Problem1 ",
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "a: Write down an equation for ",
 StyleBox["L1.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.456255620642995*^9, 3.456255624354938*^9}, {
  3.506663230063856*^9, 3.5066632315998383`*^9}, {3.506663436631467*^9, 
  3.506663437390727*^9}, {3.56133203846622*^9, 3.5613320405226*^9}},
 FontWeight->"Plain",
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 FormBox[
  RowBox[{"L1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"b", " ", 
      SubscriptBox["x", "0"]}], "-", 
     RowBox[{"b", " ", "x"}], "+", 
     RowBox[{"a", " ", "y"}], "-", 
     RowBox[{"a", " ", 
      SubscriptBox["y", "0"]}]}], "==", "0"}]}], 
  TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{
  3.5750284518260393`*^9, {3.57545780190728*^9, 3.5754578084354258`*^9}, {
   3.5754579629576*^9, 3.5754579665099173`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "b: Set up and then solve exactly equations for ",
 StyleBox["{x1,y1}",
  FontSlant->"Italic"],
 ". The rule(s) you get should only have a,b,c,x0,y0 on the right hand \
side(s)  .  You will be using the lists of rules later so assign the list to ",
 StyleBox["pointrule1",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.560777995383521*^9, 3.5607779993032923`*^9}, {
  3.5748774643636627`*^9, 3.5748774946930513`*^9}, {3.574877533254047*^9, 
  3.574877542526505*^9}},
 FontWeight->"Plain",
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x1", ",", "y1"}], "}"}], "=", " ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"a", " ", "x"}], "+", 
         RowBox[{"b", " ", "y"}], "+", "c"}], "\[Equal]", "0"}], ",", 
       FormBox[
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "b"}], " ", "x"}], "+", 
          RowBox[{"a", " ", "y"}], "-", 
          RowBox[{"a", " ", "y0"}], "+", 
          RowBox[{"b", " ", "x0"}]}], "\[Equal]", "0"}],
        TraditionalForm]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.575458133421273*^9, 3.5754581421351013`*^9}, {
  3.5754582983641577`*^9, 3.575458302608076*^9}, {3.575458378091606*^9, 
  3.575458382212986*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"a", " ", "c"}], "-", 
       RowBox[{
        SuperscriptBox["b", "2"], " ", "x0"}], "+", 
       RowBox[{"a", " ", "b", " ", "y0"}]}], 
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["b", "2"]}]]}]}], ",", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"b", " ", "c"}], "+", 
       RowBox[{"a", " ", "b", " ", "x0"}], "-", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "y0"}]}], 
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["b", "2"]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.575028629824079*^9, 3.5754581078030148`*^9, 
  3.57545814400723*^9, 3.575458387607389*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pointrule1", "=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "y1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.575458110695199*^9, 3.575458120742537*^9}, {
  3.5754584208580713`*^9, 3.575458430379925*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "c: Use the result of b: to substitute into the expression for the distance \
between ",
 StyleBox["p ",
  FontSlant->"Italic"],
 "and ",
 StyleBox["q. ",
  FontSlant->"Italic"],
 "You should get an expressions which only involves   ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ",", "b", ",", "c", ",", "x0", ",", "y0"}], TraditionalForm]]],
 " . "
}], "Text",
 CellChangeTimes->{{3.456254202482807*^9, 3.456254239626286*^9}, {
  3.456254473184308*^9, 3.4562544766640863`*^9}, {3.5058427217724657`*^9, 
  3.505842726228187*^9}, {3.505843493076748*^9, 3.505843497323502*^9}, {
  3.5062411389113703`*^9, 3.5062411395675707`*^9}},
 FontWeight->"Plain",
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"a", " ", "c"}], "-", 
           RowBox[{
            SuperscriptBox["b", "2"], " ", "x0"}], "+", 
           RowBox[{"a", " ", "b", " ", "y0"}]}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["b", "2"]}]]}], "-", "x0"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"b", " ", "c"}], "+", 
           RowBox[{"a", " ", "b", " ", "x0"}], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", "y0"}]}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["b", "2"]}]]}], "-", "y0"}], ")"}], "2"]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.575458212134543*^9, 3.575458220182858*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "y0"}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"b", " ", "c"}], "+", 
        RowBox[{"a", " ", "b", " ", "x0"}], "-", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", "y0"}]}], 
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["b", "2"]}]]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "x0"}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"a", " ", "c"}], "-", 
        RowBox[{
         SuperscriptBox["b", "2"], " ", "x0"}], "+", 
        RowBox[{"a", " ", "b", " ", "y0"}]}], 
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["b", "2"]}]]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.575028646568293*^9, 3.5754582210642147`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "d:  Apply ",
 StyleBox["Simplify",
  FontWeight->"Bold"],
 " to this result"
}], "Text",
 CellChangeTimes->{{3.5066636963758583`*^9, 3.506663710232033*^9}, {
  3.50666377220408*^9, 3.506663776490632*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"a", " ", "c"}], "-", 
           RowBox[{
            SuperscriptBox["b", "2"], " ", "x0"}], "+", 
           RowBox[{"a", " ", "b", " ", "y0"}]}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["b", "2"]}]]}], "-", "x0"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"b", " ", "c"}], "+", 
           RowBox[{"a", " ", "b", " ", "x0"}], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", "y0"}]}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["b", "2"]}]]}], "-", "y0"}], ")"}], "2"]}], ")"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.575458246113772*^9, 3.575458252646736*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"c", "+", 
      RowBox[{"a", " ", "x0"}], "+", 
      RowBox[{"b", " ", "y0"}]}], ")"}], "2"], 
   RowBox[{
    SuperscriptBox["a", "2"], "+", 
    SuperscriptBox["b", "2"]}]]]], "Output",
 CellChangeTimes->{3.575028680684243*^9, 3.575458254316128*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["12 points", "Text",
 CellChangeTimes->{{3.577218425895093*^9, 3.57721843042162*^9}},
 Background->RGBColor[1, 0.9, 0.8]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Root objects", "Subsection",
 CellChangeTimes->{{3.5607797545670853`*^9, 3.560779761548815*^9}}],

Cell[TextData[{
 "Query ",
 StyleBox["Root",
  FontWeight->"Bold"],
 ". Read",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{" ", 
     RowBox[{"Equations", " ", "In", " ", "One", " ", "Variable"}]}],
    BaseStyle->"Link",
    ButtonData->"paclet:tutorial/EquationsInOneVariable"], 
   TraditionalForm]]],
 StyleBox[ButtonBox[".\n",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EquationsInOneVariable"],
  FontColor->GrayLevel[0]],
 StyleBox[ButtonBox["Root",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EquationsInOneVariable"],
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[ButtonBox[" objects are symbolic representations of the roots of \
pure functions. The syntax of ",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EquationsInOneVariable"],
  FontColor->GrayLevel[0]],
 StyleBox[ButtonBox["Root",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EquationsInOneVariable"],
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[ButtonBox[" is ",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EquationsInOneVariable"],
  FontColor->GrayLevel[0]],
 StyleBox[ButtonBox["Root[purefunction,number]",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EquationsInOneVariable"],
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[ButtonBox[". If the pure function is polynomial of degree ",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EquationsInOneVariable"],
  FontColor->GrayLevel[0]],
 StyleBox[ButtonBox["n",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EquationsInOneVariable"],
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[ButtonBox[" the numbers will run from 1 to n. The real roots come \
first in numerical order and then the complex roots in conjugate pairs.",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EquationsInOneVariable"],
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.560779779269902*^9, 3.560779833751553*^9}, {
   3.560779892223757*^9, 3.5607798922253*^9}, 3.5607799625983562`*^9, {
   3.560780075914603*^9, 3.560780090888556*^9}, {3.560780136704228*^9, 
   3.560780136706497*^9}, {3.560780177829739*^9, 3.5607802075250883`*^9}, {
   3.5607802464893503`*^9, 3.560780460749325*^9}, {3.560780492265026*^9, 
   3.560780541888262*^9}, {3.560780585465767*^9, 3.560780785696763*^9}, {
   3.560780878019862*^9, 3.5607809247577877`*^9}, 3.560780998852099*^9, 
   3.563153749173175*^9, {3.574877679691674*^9, 3.574877684755999*^9}, 
   3.574883414231153*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sols", "=", 
  RowBox[{"x", "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "7"], "+", 
       SuperscriptBox["x", "4"], "+", 
       RowBox[{"2", "x"}], "+", "1"}], "\[Equal]", "0"}], ",", "x"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5607810080983763`*^9, 3.5607811525692253`*^9}, {
  3.5607821773901377`*^9, 3.560782282563251*^9}, {3.5607823180681553`*^9, 
  3.560782321120819*^9}, {3.5754587619567327`*^9, 3.575458777814888*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "#1"}], "+", 
       SuperscriptBox["#1", "4"], "+", 
       SuperscriptBox["#1", "7"]}], "&"}], ",", "1"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "#1"}], "+", 
       SuperscriptBox["#1", "4"], "+", 
       SuperscriptBox["#1", "7"]}], "&"}], ",", "2"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "#1"}], "+", 
       SuperscriptBox["#1", "4"], "+", 
       SuperscriptBox["#1", "7"]}], "&"}], ",", "3"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "#1"}], "+", 
       SuperscriptBox["#1", "4"], "+", 
       SuperscriptBox["#1", "7"]}], "&"}], ",", "4"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "#1"}], "+", 
       SuperscriptBox["#1", "4"], "+", 
       SuperscriptBox["#1", "7"]}], "&"}], ",", "5"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "#1"}], "+", 
       SuperscriptBox["#1", "4"], "+", 
       SuperscriptBox["#1", "7"]}], "&"}], ",", "6"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "#1"}], "+", 
       SuperscriptBox["#1", "4"], "+", 
       SuperscriptBox["#1", "7"]}], "&"}], ",", "7"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.560781140375639*^9, 3.560781155919324*^9}, 
   3.560782285458837*^9, 3.560782322444964*^9, {3.575458767167696*^9, 
   3.575458778472821*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "sols", "]"}]], "Input",
 CellChangeTimes->{{3.56078230424828*^9, 3.560782309560895*^9}, {
  3.560782375158327*^9, 3.5607823782592688`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.5346002311131773`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.9037961023598498`"}], "-", 
    RowBox[{"0.41209509540433203`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9037961023598498`"}], "+", 
    RowBox[{"0.41209509540433203`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.2007123922065346`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.1569131072856746`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.2007123922065346`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.1569131072856746`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9703838257099039`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.6583358005706098`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9703838257099039`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.6583358005706098`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.560782381485561*^9}]
}, Open  ]],

Cell[TextData[{
 "In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 9 the pure function can be transcendental in which case ",
 StyleBox["number",
  FontWeight->"Bold"],
 " will be a high precision decimal and the root object is a symbolic \
representation of the (exact) root of the transcendental function near to the \
high precision number. "
}], "Text",
 CellChangeTimes->{
  3.560782419424357*^9, {3.5607824685728483`*^9, 3.560782656930282*^9}, {
   3.574877709100449*^9, 3.574877736621071*^9}}],

Cell[CellGroupData[{

Cell["Three Points Determine a Circle", "Subsubsection",
 CellChangeTimes->{{3.5608537596259193`*^9, 3.560853779661828*^9}}],

Cell[TextData[{
 "Remember the general form of a straight line which passes through ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["y", "1"]}], ")"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["y", "2"]}], ")"}], TraditionalForm]]],
 " for distinct points  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["y", "1"]}], ")"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["y", "2"]}], ")"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.522863646813939*^9, 3.522863664967538*^9}, {
   3.522863700699849*^9, 3.522863789547388*^9}, {3.5228638220708*^9, 
   3.522863915703639*^9}, {3.5228639646495037`*^9, 3.522864011722437*^9}, {
   3.522864105494659*^9, 3.522864117582715*^9}, 3.5228641611524076`*^9, {
   3.522864280911729*^9, 3.5228643453061647`*^9}, {3.523729358615073*^9, 
   3.523729505585616*^9}, {3.5237296648243523`*^9, 3.523729702368526*^9}, 
   3.523729746797291*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["y", "2"], "-", 
      SubscriptBox["y", "1"]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"x", "-", 
      SubscriptBox["x", "1"]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["x", "2"], "-", 
      SubscriptBox["x", "1"]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"y", "-", 
      SubscriptBox["y", "1"]}], ")"}]}]}], "=", "0"}]], "DisplayFormula",
 CellChangeTimes->{
  3.5228640247264557`*^9, {3.522864184105871*^9, 3.522864270205134*^9}, {
   3.52286435333595*^9, 3.52286443321278*^9}, {3.523729515428938*^9, 
   3.523729559332342*^9}, {3.523729985838629*^9, 3.523729998719438*^9}}],

Cell[TextData[{
 "Thus if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "3"], ",", 
     SubscriptBox["y", "3"]}], ")"}], TraditionalForm]]],
 " does not lie on the line through  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["y", "1"]}], ")"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["y", "2"]}], ")"}], TraditionalForm]]],
 " we must have"
}], "Text",
 CellChangeTimes->{{3.523729587103448*^9, 3.523729655695374*^9}, {
  3.523729753169282*^9, 3.523729777323247*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["y", "2"], "-", 
      SubscriptBox["y", "1"]}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["x", "3"], "-", 
      SubscriptBox["x", "1"]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["x", "2"], "-", 
      SubscriptBox["x", "1"]}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["y", "3"], "-", 
      SubscriptBox["y", "1"]}], ")"}]}]}], "\[NotEqual]", 
  "0"}]], "DisplayFormula",
 CellChangeTimes->{
  3.5228640247264557`*^9, {3.522864184105871*^9, 3.522864270205134*^9}, {
   3.52286435333595*^9, 3.52286443321278*^9}, {3.523729515428938*^9, 
   3.523729559332342*^9}, {3.523729985838629*^9, 3.523729998719438*^9}, {
   3.523730137801947*^9, 3.523730167783133*^9}}],

Cell[TextData[{
 "Using ",
 StyleBox["Expand ",
  FontWeight->"Bold"],
 "on the left hand side"
}], "Text",
 CellChangeTimes->{{3.5228644540902567`*^9, 3.522864485835019*^9}, {
  3.523729871191778*^9, 3.52372987446268*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["y", "2"], "-", 
       SubscriptBox["y", "1"]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "3"], "-", 
       SubscriptBox["x", "1"]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "2"], "-", 
       SubscriptBox["x", "1"]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["y", "3"], "-", 
       SubscriptBox["y", "1"]}], ")"}]}]}], "]"}], "\[NotEqual]", 
  "0"}]], "Input",
 CellChangeTimes->{
  3.5228640247264557`*^9, {3.522864184105871*^9, 3.522864270205134*^9}, {
   3.52286435333595*^9, 3.52286443321278*^9}, 3.522864577566614*^9, {
   3.5228646331231613`*^9, 3.5228646439883137`*^9}, {3.523729890035774*^9, 
   3.52372989387396*^9}, {3.523730181487788*^9, 3.523730202166793*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["x", "2"], " ", 
    SubscriptBox["y", "1"]}], "-", 
   RowBox[{
    SubscriptBox["x", "3"], " ", 
    SubscriptBox["y", "1"]}], "-", 
   RowBox[{
    SubscriptBox["x", "1"], " ", 
    SubscriptBox["y", "2"]}], "+", 
   RowBox[{
    SubscriptBox["x", "3"], " ", 
    SubscriptBox["y", "2"]}], "+", 
   RowBox[{
    SubscriptBox["x", "1"], " ", 
    SubscriptBox["y", "3"]}], "-", 
   RowBox[{
    SubscriptBox["x", "2"], " ", 
    SubscriptBox["y", "3"]}]}], "\[NotEqual]", "0"}]], "Output",
 CellChangeTimes->{3.522864646786709*^9, 3.5237302070355797`*^9}]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.522863534009852*^9, 3.522863553402297*^9}, {
  3.522863614220708*^9, 3.5228636221326*^9}, {3.522864525580471*^9, 
  3.522864570942472*^9}}],

Cell[TextData[{
 StyleBox["Problem2",
  FontWeight->"Bold",
  Background->RGBColor[0.87, 0.94, 1]],
 StyleBox[" It is a theorem in geometry that any three non-collinear points \
determine a circle. Given  the three points ",
  Background->RGBColor[0.87, 0.94, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["y", "1"]}]}], TraditionalForm]],
  Background->RGBColor[0.87, 0.94, 1]],
 StyleBox["},{",
  Background->RGBColor[0.87, 0.94, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], ",", 
      SubscriptBox["y", "2"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "3"], ",", 
      SubscriptBox["y", "3"]}], "}"}]}], TraditionalForm]],
  Background->RGBColor[0.87, 0.94, 1]],
 StyleBox[" find a,b,and ",
  Background->RGBColor[0.87, 0.94, 1]],
 "R",
 StyleBox[" for the circle ",
  Background->RGBColor[0.87, 0.94, 1]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", "a"}], ")"}], "2"], TraditionalForm]],
  Background->RGBColor[0.87, 0.94, 1]],
 StyleBox[" ",
  Background->RGBColor[0.87, 0.94, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y", " ", "-", " ", "b"}], ")"}], "2"]}], "=", "R", " "}], 
   TraditionalForm]],
  Background->RGBColor[0.87, 0.94, 1]],
 StyleBox["that passes through them. Making a table of equations will save a \
lot of typing. \[LineSeparator] If you do this right you will notice that the \
solutions have the same denominator or its square. What does the equation \
denominator=0 signify for the three points.?",
  Background->RGBColor[0.87, 0.94, 1]]
}], "Text",
 CellChangeTimes->{{3.456248332804495*^9, 3.4562485401966047`*^9}, {
   3.4562486027749*^9, 3.4562492721416388`*^9}, {3.456250269693397*^9, 
   3.456250374527668*^9}, {3.456250405428562*^9, 3.4562505191532097`*^9}, {
   3.456250551585896*^9, 3.4562505912091084`*^9}, {3.456250622073975*^9, 
   3.4562506514180593`*^9}, {3.456250785269277*^9, 3.4562508554868*^9}, {
   3.4562509061874313`*^9, 3.456250907603635*^9}, {3.4563343884971457`*^9, 
   3.456334392764929*^9}, 3.505829038387895*^9, {3.505829699884591*^9, 
   3.505829704618279*^9}, {3.5062303191248293`*^9, 3.506230323604919*^9}, {
   3.50666341973633*^9, 3.5066634208722963`*^9}, {3.519257808733048*^9, 
   3.5192578901405573`*^9}, {3.5607831113999043`*^9, 
   3.5607831766648684`*^9}, {3.5613320589817*^9, 3.561332060909561*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["x", "i"], "-", "a"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["y", "i"], "-", "b"}], ")"}], "2"]}], "\[Equal]", 
      "R"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{"list", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "R"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5750288413005733`*^9, 3.57502891443262*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["x", "2", "2"], " ", 
         SubscriptBox["y", "1"]}], "-", 
        RowBox[{
         SubsuperscriptBox["x", "3", "2"], " ", 
         SubscriptBox["y", "1"]}], "-", 
        RowBox[{
         SubsuperscriptBox["x", "1", "2"], " ", 
         SubscriptBox["y", "2"]}], "+", 
        RowBox[{
         SubsuperscriptBox["x", "3", "2"], " ", 
         SubscriptBox["y", "2"]}], "-", 
        RowBox[{
         SubsuperscriptBox["y", "1", "2"], " ", 
         SubscriptBox["y", "2"]}], "+", 
        RowBox[{
         SubscriptBox["y", "1"], " ", 
         SubsuperscriptBox["y", "2", "2"]}], "+", 
        RowBox[{
         SubsuperscriptBox["x", "1", "2"], " ", 
         SubscriptBox["y", "3"]}], "-", 
        RowBox[{
         SubsuperscriptBox["x", "2", "2"], " ", 
         SubscriptBox["y", "3"]}], "+", 
        RowBox[{
         SubsuperscriptBox["y", "1", "2"], " ", 
         SubscriptBox["y", "3"]}], "-", 
        RowBox[{
         SubsuperscriptBox["y", "2", "2"], " ", 
         SubscriptBox["y", "3"]}], "-", 
        RowBox[{
         SubscriptBox["y", "1"], " ", 
         SubsuperscriptBox["y", "3", "2"]}], "+", 
        RowBox[{
         SubscriptBox["y", "2"], " ", 
         SubsuperscriptBox["y", "3", "2"]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           SubscriptBox["y", "1"]}], "-", 
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           SubscriptBox["y", "1"]}], "-", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           SubscriptBox["y", "2"]}], "+", 
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           SubscriptBox["y", "2"]}], "+", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           SubscriptBox["y", "3"]}], "-", 
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           SubscriptBox["y", "3"]}]}], ")"}]}], ")"}]}]}], ",", 
    RowBox[{"b", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["x", "1", "2"], " ", 
         SubscriptBox["x", "2"]}], "-", 
        RowBox[{
         SubscriptBox["x", "1"], " ", 
         SubsuperscriptBox["x", "2", "2"]}], "-", 
        RowBox[{
         SubsuperscriptBox["x", "1", "2"], " ", 
         SubscriptBox["x", "3"]}], "+", 
        RowBox[{
         SubsuperscriptBox["x", "2", "2"], " ", 
         SubscriptBox["x", "3"]}], "+", 
        RowBox[{
         SubscriptBox["x", "1"], " ", 
         SubsuperscriptBox["x", "3", "2"]}], "-", 
        RowBox[{
         SubscriptBox["x", "2"], " ", 
         SubsuperscriptBox["x", "3", "2"]}], "+", 
        RowBox[{
         SubscriptBox["x", "2"], " ", 
         SubsuperscriptBox["y", "1", "2"]}], "-", 
        RowBox[{
         SubscriptBox["x", "3"], " ", 
         SubsuperscriptBox["y", "1", "2"]}], "-", 
        RowBox[{
         SubscriptBox["x", "1"], " ", 
         SubsuperscriptBox["y", "2", "2"]}], "+", 
        RowBox[{
         SubscriptBox["x", "3"], " ", 
         SubsuperscriptBox["y", "2", "2"]}], "+", 
        RowBox[{
         SubscriptBox["x", "1"], " ", 
         SubsuperscriptBox["y", "3", "2"]}], "-", 
        RowBox[{
         SubscriptBox["x", "2"], " ", 
         SubsuperscriptBox["y", "3", "2"]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           SubscriptBox["y", "1"]}], "-", 
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           SubscriptBox["y", "1"]}], "-", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           SubscriptBox["y", "2"]}], "+", 
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           SubscriptBox["y", "2"]}], "+", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           SubscriptBox["y", "3"]}], "-", 
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           SubscriptBox["y", "3"]}]}], ")"}]}], ")"}]}]}], ",", 
    RowBox[{"R", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["x", "2", "2"], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["x", "2"], " ", 
           SubscriptBox["x", "3"]}], "+", 
          SubsuperscriptBox["x", "3", "2"], "+", 
          SubsuperscriptBox["y", "2", "2"], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["y", "2"], " ", 
           SubscriptBox["y", "3"]}], "+", 
          SubsuperscriptBox["y", "3", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["x", "1", "4"], "-", 
          RowBox[{"2", " ", 
           SubsuperscriptBox["x", "1", "3"], " ", 
           SubscriptBox["x", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["x", "1", "2"], " ", 
           SubsuperscriptBox["x", "2", "2"]}], "-", 
          RowBox[{"2", " ", 
           SubsuperscriptBox["x", "1", "3"], " ", 
           SubscriptBox["x", "3"]}], "+", 
          RowBox[{"4", " ", 
           SubsuperscriptBox["x", "1", "2"], " ", 
           SubscriptBox["x", "2"], " ", 
           SubscriptBox["x", "3"]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["x", "1"], " ", 
           SubsuperscriptBox["x", "2", "2"], " ", 
           SubscriptBox["x", "3"]}], "+", 
          RowBox[{
           SubsuperscriptBox["x", "1", "2"], " ", 
           SubsuperscriptBox["x", "3", "2"]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["x", "1"], " ", 
           SubscriptBox["x", "2"], " ", 
           SubsuperscriptBox["x", "3", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["x", "2", "2"], " ", 
           SubsuperscriptBox["x", "3", "2"]}], "+", 
          RowBox[{"2", " ", 
           SubsuperscriptBox["x", "1", "2"], " ", 
           SubsuperscriptBox["y", "1", "2"]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["x", "1"], " ", 
           SubscriptBox["x", "2"], " ", 
           SubsuperscriptBox["y", "1", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["x", "2", "2"], " ", 
           SubsuperscriptBox["y", "1", "2"]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["x", "1"], " ", 
           SubscriptBox["x", "3"], " ", 
           SubsuperscriptBox["y", "1", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["x", "3", "2"], " ", 
           SubsuperscriptBox["y", "1", "2"]}], "+", 
          SubsuperscriptBox["y", "1", "4"], "-", 
          RowBox[{"2", " ", 
           SubsuperscriptBox["x", "1", "2"], " ", 
           SubscriptBox["y", "1"], " ", 
           SubscriptBox["y", "2"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["x", "1"], " ", 
           SubscriptBox["x", "3"], " ", 
           SubscriptBox["y", "1"], " ", 
           SubscriptBox["y", "2"]}], "-", 
          RowBox[{"2", " ", 
           SubsuperscriptBox["x", "3", "2"], " ", 
           SubscriptBox["y", "1"], " ", 
           SubscriptBox["y", "2"]}], "-", 
          RowBox[{"2", " ", 
           SubsuperscriptBox["y", "1", "3"], " ", 
           SubscriptBox["y", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["x", "1", "2"], " ", 
           SubsuperscriptBox["y", "2", "2"]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["x", "1"], " ", 
           SubscriptBox["x", "3"], " ", 
           SubsuperscriptBox["y", "2", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["x", "3", "2"], " ", 
           SubsuperscriptBox["y", "2", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["y", "1", "2"], " ", 
           SubsuperscriptBox["y", "2", "2"]}], "-", 
          RowBox[{"2", " ", 
           SubsuperscriptBox["x", "1", "2"], " ", 
           SubscriptBox["y", "1"], " ", 
           SubscriptBox["y", "3"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["x", "1"], " ", 
           SubscriptBox["x", "2"], " ", 
           SubscriptBox["y", "1"], " ", 
           SubscriptBox["y", "3"]}], "-", 
          RowBox[{"2", " ", 
           SubsuperscriptBox["x", "2", "2"], " ", 
           SubscriptBox["y", "1"], " ", 
           SubscriptBox["y", "3"]}], "-", 
          RowBox[{"2", " ", 
           SubsuperscriptBox["y", "1", "3"], " ", 
           SubscriptBox["y", "3"]}], "+", 
          RowBox[{"4", " ", 
           SubsuperscriptBox["y", "1", "2"], " ", 
           SubscriptBox["y", "2"], " ", 
           SubscriptBox["y", "3"]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["y", "1"], " ", 
           SubsuperscriptBox["y", "2", "2"], " ", 
           SubscriptBox["y", "3"]}], "+", 
          RowBox[{
           SubsuperscriptBox["x", "1", "2"], " ", 
           SubsuperscriptBox["y", "3", "2"]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["x", "1"], " ", 
           SubscriptBox["x", "2"], " ", 
           SubsuperscriptBox["y", "3", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["x", "2", "2"], " ", 
           SubsuperscriptBox["y", "3", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["y", "1", "2"], " ", 
           SubsuperscriptBox["y", "3", "2"]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["y", "1"], " ", 
           SubscriptBox["y", "2"], " ", 
           SubsuperscriptBox["y", "3", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["y", "2", "2"], " ", 
           SubsuperscriptBox["y", "3", "2"]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], " ", 
            SubscriptBox["y", "1"]}], "-", 
           RowBox[{
            SubscriptBox["x", "3"], " ", 
            SubscriptBox["y", "1"]}], "-", 
           RowBox[{
            SubscriptBox["x", "1"], " ", 
            SubscriptBox["y", "2"]}], "+", 
           RowBox[{
            SubscriptBox["x", "3"], " ", 
            SubscriptBox["y", "2"]}], "+", 
           RowBox[{
            SubscriptBox["x", "1"], " ", 
            SubscriptBox["y", "3"]}], "-", 
           RowBox[{
            SubscriptBox["x", "2"], " ", 
            SubscriptBox["y", "3"]}]}], ")"}], "2"]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.5750289231651573`*^9, 3.575459185384704*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Denominator", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["x", "2", "2"], " ", 
      SubscriptBox["y", "1"]}], "-", 
     RowBox[{
      SubsuperscriptBox["x", "3", "2"], " ", 
      SubscriptBox["y", "1"]}], "-", 
     RowBox[{
      SubsuperscriptBox["x", "1", "2"], " ", 
      SubscriptBox["y", "2"]}], "+", 
     RowBox[{
      SubsuperscriptBox["x", "3", "2"], " ", 
      SubscriptBox["y", "2"]}], "-", 
     RowBox[{
      SubsuperscriptBox["y", "1", "2"], " ", 
      SubscriptBox["y", "2"]}], "+", 
     RowBox[{
      SubscriptBox["y", "1"], " ", 
      SubsuperscriptBox["y", "2", "2"]}], "+", 
     RowBox[{
      SubsuperscriptBox["x", "1", "2"], " ", 
      SubscriptBox["y", "3"]}], "-", 
     RowBox[{
      SubsuperscriptBox["x", "2", "2"], " ", 
      SubscriptBox["y", "3"]}], "+", 
     RowBox[{
      SubsuperscriptBox["y", "1", "2"], " ", 
      SubscriptBox["y", "3"]}], "-", 
     RowBox[{
      SubsuperscriptBox["y", "2", "2"], " ", 
      SubscriptBox["y", "3"]}], "-", 
     RowBox[{
      SubscriptBox["y", "1"], " ", 
      SubsuperscriptBox["y", "3", "2"]}], "+", 
     RowBox[{
      SubscriptBox["y", "2"], " ", 
      SubsuperscriptBox["y", "3", "2"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "2"], " ", 
        SubscriptBox["y", "1"]}], "-", 
       RowBox[{
        SubscriptBox["x", "3"], " ", 
        SubscriptBox["y", "1"]}], "-", 
       RowBox[{
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["y", "2"]}], "+", 
       RowBox[{
        SubscriptBox["x", "3"], " ", 
        SubscriptBox["y", "2"]}], "+", 
       RowBox[{
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["y", "3"]}], "-", 
       RowBox[{
        SubscriptBox["x", "2"], " ", 
        SubscriptBox["y", "3"]}]}], ")"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.575028945355217*^9, 3.575028982074233*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], " ", 
     SubscriptBox["y", "1"]}], "-", 
    RowBox[{
     SubscriptBox["x", "3"], " ", 
     SubscriptBox["y", "1"]}], "-", 
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubscriptBox["y", "2"]}], "+", 
    RowBox[{
     SubscriptBox["x", "3"], " ", 
     SubscriptBox["y", "2"]}], "+", 
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubscriptBox["y", "3"]}], "-", 
    RowBox[{
     SubscriptBox["x", "2"], " ", 
     SubscriptBox["y", "3"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.5750289505500803`*^9, 3.575028983308735*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Denominator", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["x", "1", "2"], " ", 
      SubscriptBox["x", "2"]}], "-", 
     RowBox[{
      SubscriptBox["x", "1"], " ", 
      SubsuperscriptBox["x", "2", "2"]}], "-", 
     RowBox[{
      SubsuperscriptBox["x", "1", "2"], " ", 
      SubscriptBox["x", "3"]}], "+", 
     RowBox[{
      SubsuperscriptBox["x", "2", "2"], " ", 
      SubscriptBox["x", "3"]}], "+", 
     RowBox[{
      SubscriptBox["x", "1"], " ", 
      SubsuperscriptBox["x", "3", "2"]}], "-", 
     RowBox[{
      SubscriptBox["x", "2"], " ", 
      SubsuperscriptBox["x", "3", "2"]}], "+", 
     RowBox[{
      SubscriptBox["x", "2"], " ", 
      SubsuperscriptBox["y", "1", "2"]}], "-", 
     RowBox[{
      SubscriptBox["x", "3"], " ", 
      SubsuperscriptBox["y", "1", "2"]}], "-", 
     RowBox[{
      SubscriptBox["x", "1"], " ", 
      SubsuperscriptBox["y", "2", "2"]}], "+", 
     RowBox[{
      SubscriptBox["x", "3"], " ", 
      SubsuperscriptBox["y", "2", "2"]}], "+", 
     RowBox[{
      SubscriptBox["x", "1"], " ", 
      SubsuperscriptBox["y", "3", "2"]}], "-", 
     RowBox[{
      SubscriptBox["x", "2"], " ", 
      SubsuperscriptBox["y", "3", "2"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "2"], " ", 
        SubscriptBox["y", "1"]}], "-", 
       RowBox[{
        SubscriptBox["x", "3"], " ", 
        SubscriptBox["y", "1"]}], "-", 
       RowBox[{
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["y", "2"]}], "+", 
       RowBox[{
        SubscriptBox["x", "3"], " ", 
        SubscriptBox["y", "2"]}], "+", 
       RowBox[{
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["y", "3"]}], "-", 
       RowBox[{
        SubscriptBox["x", "2"], " ", 
        SubscriptBox["y", "3"]}]}], ")"}]}], ")"}]}], "]"}]], "Input",
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], " ", 
     SubscriptBox["y", "1"]}], "-", 
    RowBox[{
     SubscriptBox["x", "3"], " ", 
     SubscriptBox["y", "1"]}], "-", 
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubscriptBox["y", "2"]}], "+", 
    RowBox[{
     SubscriptBox["x", "3"], " ", 
     SubscriptBox["y", "2"]}], "+", 
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubscriptBox["y", "3"]}], "-", 
    RowBox[{
     SubscriptBox["x", "2"], " ", 
     SubscriptBox["y", "3"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.5750289988551292`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Denominator", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["x", "2", "2"], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["x", "2"], " ", 
        SubscriptBox["x", "3"]}], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["y", "2", "2"], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["y", "2"], " ", 
        SubscriptBox["y", "3"]}], "+", 
       SubsuperscriptBox["y", "3", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["x", "1", "4"], "-", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["x", "1", "3"], " ", 
        SubscriptBox["x", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["x", "1", "2"], " ", 
        SubsuperscriptBox["x", "2", "2"]}], "-", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["x", "1", "3"], " ", 
        SubscriptBox["x", "3"]}], "+", 
       RowBox[{"4", " ", 
        SubsuperscriptBox["x", "1", "2"], " ", 
        SubscriptBox["x", "2"], " ", 
        SubscriptBox["x", "3"]}], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["x", "1"], " ", 
        SubsuperscriptBox["x", "2", "2"], " ", 
        SubscriptBox["x", "3"]}], "+", 
       RowBox[{
        SubsuperscriptBox["x", "1", "2"], " ", 
        SubsuperscriptBox["x", "3", "2"]}], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["x", "2"], " ", 
        SubsuperscriptBox["x", "3", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["x", "2", "2"], " ", 
        SubsuperscriptBox["x", "3", "2"]}], "+", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["x", "1", "2"], " ", 
        SubsuperscriptBox["y", "1", "2"]}], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["x", "2"], " ", 
        SubsuperscriptBox["y", "1", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["x", "2", "2"], " ", 
        SubsuperscriptBox["y", "1", "2"]}], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["x", "3"], " ", 
        SubsuperscriptBox["y", "1", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["x", "3", "2"], " ", 
        SubsuperscriptBox["y", "1", "2"]}], "+", 
       SubsuperscriptBox["y", "1", "4"], "-", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["x", "1", "2"], " ", 
        SubscriptBox["y", "1"], " ", 
        SubscriptBox["y", "2"]}], "+", 
       RowBox[{"4", " ", 
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["x", "3"], " ", 
        SubscriptBox["y", "1"], " ", 
        SubscriptBox["y", "2"]}], "-", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["x", "3", "2"], " ", 
        SubscriptBox["y", "1"], " ", 
        SubscriptBox["y", "2"]}], "-", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["y", "1", "3"], " ", 
        SubscriptBox["y", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["x", "1", "2"], " ", 
        SubsuperscriptBox["y", "2", "2"]}], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["x", "3"], " ", 
        SubsuperscriptBox["y", "2", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["x", "3", "2"], " ", 
        SubsuperscriptBox["y", "2", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["y", "1", "2"], " ", 
        SubsuperscriptBox["y", "2", "2"]}], "-", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["x", "1", "2"], " ", 
        SubscriptBox["y", "1"], " ", 
        SubscriptBox["y", "3"]}], "+", 
       RowBox[{"4", " ", 
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["x", "2"], " ", 
        SubscriptBox["y", "1"], " ", 
        SubscriptBox["y", "3"]}], "-", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["x", "2", "2"], " ", 
        SubscriptBox["y", "1"], " ", 
        SubscriptBox["y", "3"]}], "-", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["y", "1", "3"], " ", 
        SubscriptBox["y", "3"]}], "+", 
       RowBox[{"4", " ", 
        SubsuperscriptBox["y", "1", "2"], " ", 
        SubscriptBox["y", "2"], " ", 
        SubscriptBox["y", "3"]}], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["y", "1"], " ", 
        SubsuperscriptBox["y", "2", "2"], " ", 
        SubscriptBox["y", "3"]}], "+", 
       RowBox[{
        SubsuperscriptBox["x", "1", "2"], " ", 
        SubsuperscriptBox["y", "3", "2"]}], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["x", "2"], " ", 
        SubsuperscriptBox["y", "3", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["x", "2", "2"], " ", 
        SubsuperscriptBox["y", "3", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["y", "1", "2"], " ", 
        SubsuperscriptBox["y", "3", "2"]}], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["y", "1"], " ", 
        SubscriptBox["y", "2"], " ", 
        SubsuperscriptBox["y", "3", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["y", "2", "2"], " ", 
        SubsuperscriptBox["y", "3", "2"]}]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "2"], " ", 
         SubscriptBox["y", "1"]}], "-", 
        RowBox[{
         SubscriptBox["x", "3"], " ", 
         SubscriptBox["y", "1"]}], "-", 
        RowBox[{
         SubscriptBox["x", "1"], " ", 
         SubscriptBox["y", "2"]}], "+", 
        RowBox[{
         SubscriptBox["x", "3"], " ", 
         SubscriptBox["y", "2"]}], "+", 
        RowBox[{
         SubscriptBox["x", "1"], " ", 
         SubscriptBox["y", "3"]}], "-", 
        RowBox[{
         SubscriptBox["x", "2"], " ", 
         SubscriptBox["y", "3"]}]}], ")"}], "2"]}], ")"}]}], "]"}]], "Input",
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], " ", 
      SubscriptBox["y", "1"]}], "-", 
     RowBox[{
      SubscriptBox["x", "3"], " ", 
      SubscriptBox["y", "1"]}], "-", 
     RowBox[{
      SubscriptBox["x", "1"], " ", 
      SubscriptBox["y", "2"]}], "+", 
     RowBox[{
      SubscriptBox["x", "3"], " ", 
      SubscriptBox["y", "2"]}], "+", 
     RowBox[{
      SubscriptBox["x", "1"], " ", 
      SubscriptBox["y", "3"]}], "-", 
     RowBox[{
      SubscriptBox["x", "2"], " ", 
      SubscriptBox["y", "3"]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.575029015918066*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["\<\
The denominator of a and b is same, and the denominator of R is a\
\[CloseCurlyQuote]s times b\[CloseCurlyQuote]s. So the three points are not \
on the same line. Had the denominator of these points been equal to zero, it \
would signify that these points are not solutions of the equation, therefore \
they would be collinear.\
\>", "Text",
 CellChangeTimes->{
  3.57502902524611*^9, {3.575029112860779*^9, 3.5750291135606413`*^9}, {
   3.575459382458955*^9, 3.575459444038471*^9}, {3.5754594914213877`*^9, 
   3.575459492423442*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["12 points", "Text",
 CellChangeTimes->{{3.577218425895093*^9, 3.57721843042162*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.560977167613287*^9, 3.5609771946784782`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Osculating Circles and Evolutes", "Subsection",
 CellChangeTimes->{{3.560982654753812*^9, 3.5609826718573523`*^9}}],

Cell[TextData[{
 "Query ",
 StyleBox["Dt",
  FontWeight->"Bold"],
 " and read ",
 ButtonBox["Total Derivatives",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/TotalDerivatives"],
 "."
}], "Text",
 CellChangeTimes->{{3.560982870676512*^9, 3.560982961003725*^9}, {
  3.560983058788191*^9, 3.560983080304599*^9}}],

Cell[TextData[{
 " We have seen that three non-collinear points determine a circle.   We can \
also determine a circle ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"u", "-", "a"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"v", "-", "b"}], ")"}], "2"]}], "=", "R"}], 
   TraditionalForm]]],
 " by giving a point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["u", "0"], ",", 
     SubscriptBox["v", "0"]}], ")"}], TraditionalForm]]],
 " on the circle, the slope of the tangent line ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dv", "du"], "=", "d1"}], TraditionalForm]]],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["u", "0"], ",", 
      SubscriptBox["v", "0"]}], ")"}], " "}], TraditionalForm]]],
 " and the second derivative ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["d", "2"], "\[ThinSpace]\[MediumSpace]\[NegativeThinSpace]\[NegativeThinSpace]\[NegativeVeryThinSpace]",
       "u"}], 
     RowBox[{"d", " ", 
      SuperscriptBox["v", "2"], " "}]], "=", 
    RowBox[{"d2", "\[NotEqual]", "0"}]}], TraditionalForm]]],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["u", "0"], ",", 
     SubscriptBox["v", "0"]}], ")"}], TraditionalForm]]],
 ".   "
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQvU/H4Hl2+yvHc8s6foHoXQq1LDlAes60swIg+k2e
vxiIlpgmpwWiv83psQLRnvMgtFXOOTsQ/TllYgCIfsd8OgpEN815nAGi99yI
rALRVzre14DFg1mMeoB06lYlGxD9gDfaAUTf260SDqKDgttZJwDpWeKivCBa
rVB/zTkgPeEA0zoQnfPwQ9x5IG2TIRMPohVm39dl63jlGOhnbA6i7+154wai
tebd9QbRISte+INoDi+DEBCdzHM8AkTH9JdFgehCneB6EO0lxtcEohn670ea
AOmw6yYxIFpRMdNmC5AWOHUZTAMA+RyTSQ==
  "]],

Cell["Start with the equation of the circle: ", "Text",
 CellChangeTimes->{{3.560661851346176*^9, 3.560661872826358*^9}, {
  3.560976858583*^9, 3.560976868543109*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqcirc", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"u", "-", "a"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"v", "-", "b"}], ")"}], "2"]}], "\[Equal]", "R"}]}]], "Input",
 CellChangeTimes->{{3.560661891872754*^9, 3.5606619441836853`*^9}, {
   3.5606619993076878`*^9, 3.560662002251533*^9}, 3.560662207249062*^9, {
   3.5606654945638514`*^9, 3.560665495718235*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "+", "u"}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", "v"}], ")"}], "2"]}], "\[Equal]", 
  "R"}]], "Output",
 CellChangeTimes->{{3.560665470645483*^9, 3.560665497698645*^9}, 
   3.560727297528387*^9, 3.56086315396695*^9, 3.5609772080283813`*^9, 
   3.560977446167714*^9}]
}, Open  ]],

Cell[TextData[{
 "Where ",
 StyleBox["u",
  FontSlant->"Italic"],
 " and",
 StyleBox[" v",
  FontSlant->"Italic"],
 " are variables and ",
 StyleBox["a",
  FontSlant->"Italic"],
 ",",
 StyleBox["b",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["R",
  FontSlant->"Italic"],
 " are the constants that determine the circle."
}], "Text",
 CellChangeTimes->{{3.560662172902768*^9, 3.560662318730159*^9}, {
  3.560727326681882*^9, 3.5607273346317596`*^9}}],

Cell[TextData[{
 "Now get the equation ",
 StyleBox["eq0",
  FontWeight->"Bold"],
 " that expresses the fact that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["u", "0"], ",", 
     SubscriptBox["v", "0"]}], ")"}], TraditionalForm]]],
 " lies on the circle."
}], "Text",
 CellChangeTimes->{{3.560662064476768*^9, 3.560662073476183*^9}, {
  3.560666860891324*^9, 3.560666967732731*^9}, {3.56066722993854*^9, 
  3.560667241615295*^9}, {3.560734857450169*^9, 3.560734865447216*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq0", "=", 
  RowBox[{"eqcirc", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "\[Rule]", 
      SubscriptBox["u", "0"]}], ",", 
     RowBox[{"v", "\[Rule]", 
      SubscriptBox["v", "0"]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.5606620785463257`*^9, 3.560662141975621*^9}, {
  3.5606625586551037`*^9, 3.560662565028738*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "+", 
      SubscriptBox["u", "0"]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", 
      SubscriptBox["v", "0"]}], ")"}], "2"]}], "\[Equal]", "R"}]], "Output",
 CellChangeTimes->{
  3.560662567550439*^9, {3.560665484858617*^9, 3.560665509390476*^9}, 
   3.560727304502925*^9, 3.560863169364564*^9, 3.560977216789908*^9, 
   3.5609773364612007`*^9, 3.560977458992055*^9}]
}, Open  ]],

Cell["", "Text"],

Cell[TextData[{
 "Take the total derivative ",
 StyleBox["Dt[eqcirc,u,Constants\[Rule]{a,b,R}]",
  FontWeight->"Bold"],
 " of the equation ",
 StyleBox["eqcirc",
  FontWeight->"Bold"],
 " with respect to ",
 StyleBox["u",
  FontSlant->"Italic"],
 " with ",
 StyleBox["a,b",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["R",
  FontSlant->"Italic"],
 " taken to be constants and get an equation ",
 StyleBox["eq1 ",
  FontWeight->"Bold"],
 " that expresses the facts that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["u", "0"], ",", 
      SubscriptBox["v", "0"]}], ")"}], " "}], TraditionalForm]]],
 "lie on the circle and that  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dv", "du"], "=", 
    SubscriptBox["d", "1"]}], TraditionalForm]]],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["u", "o"], ",", 
      SubscriptBox["v", "0"]}], ")"}], " "}], TraditionalForm]]],
 " by making  the substitutions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "\[Rule]", 
     SubscriptBox["u", "0"]}], ",", 
    RowBox[{"v", "\[Rule]", 
     SubscriptBox["v", "0"], " "}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Dt", "[", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{"Constants", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "R"}], "}"}]}]}], "]"}], "\[Rule]", 
    SubscriptBox["d", "1"]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{
  3.56066073180029*^9, {3.5606623423152027`*^9, 3.5606623654757032`*^9}, {
   3.560662405597427*^9, 3.5606624946324253`*^9}, {3.560662596173074*^9, 
   3.560662976289825*^9}, {3.560663032519743*^9, 3.560663034763027*^9}, {
   3.5606667063556232`*^9, 3.5606667479041147`*^9}, {3.560667002952977*^9, 
   3.5606670857451*^9}, {3.5606671415494947`*^9, 3.560667154156972*^9}, 
   3.5606671843278418`*^9, 3.560667815689066*^9, {3.56066789615904*^9, 
   3.560668018371962*^9}, {3.5607348889850883`*^9, 3.560734889505081*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq1", "=", 
  RowBox[{
   RowBox[{"Dt", "[", 
    RowBox[{"eqcirc", ",", "u", ",", 
     RowBox[{"Constants", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "R"}], "}"}]}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "\[Rule]", 
      SubscriptBox["u", "0"]}], ",", 
     RowBox[{"v", "\[Rule]", 
      SubscriptBox["v", "0"]}], ",", 
     RowBox[{
      RowBox[{"Dt", "[", 
       RowBox[{"v", ",", "u", ",", 
        RowBox[{"Constants", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "R"}], "}"}]}]}], "]"}], "\[Rule]", 
      "d1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.560662506187254*^9, 3.560662543742322*^9}, {
  3.560663056597876*^9, 3.560663200677636*^9}, {3.5606652779023733`*^9, 
  3.560665306695648*^9}, {3.560665604077403*^9, 3.560665626237055*^9}, {
  3.5609774791790323`*^9, 3.560977481893387*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "+", 
      SubscriptBox["u", "0"]}], ")"}]}], "+", 
   RowBox[{"2", " ", "d1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", 
      SubscriptBox["v", "0"]}], ")"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.560663207487342*^9, {3.560665292138031*^9, 3.560665316396442*^9}, 
   3.5606655215939503`*^9, 3.560665630434095*^9, 3.560666027458048*^9, 
   3.560727262170515*^9, 3.560727316510593*^9, 3.5607273593472013`*^9, 
   3.560728105390088*^9, 3.560863235713216*^9, 3.56097715034272*^9, 
   3.560977228516774*^9, {3.5609774691481237`*^9, 3.5609774905630302`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Now take the second total derivative ",
 StyleBox["Dt[eqcirc,{u,2},Constants\[Rule]{a,b,R}]",
  FontWeight->"Bold"],
 " of the equation ",
 StyleBox["eqcirc",
  FontWeight->"Bold"],
 " with respect to ",
 StyleBox["u",
  FontSlant->"Italic"],
 " with ",
 StyleBox["a,b",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["R",
  FontSlant->"Italic"],
 " taken to be constants and get an equation ",
 StyleBox["eq2 ",
  FontWeight->"Bold"],
 " that expresses the facts that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["u", "0"], ",", 
      SubscriptBox["v", "o"]}], ")"}], " "}], TraditionalForm]]],
 "lie on the circle, that  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dv", "du"], "=", "d1"}], TraditionalForm]]],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["u", "o"], ",", 
      SubscriptBox["v", "0"]}], ")"}], " "}], TraditionalForm]]],
 ", and that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["d", "2"], "\[ThinSpace]\[MediumSpace]\[NegativeThinSpace]\[NegativeThinSpace]\[NegativeVeryThinSpace]",
       "u"}], 
     RowBox[{"d", " ", 
      SuperscriptBox["v", "2"], " "}]], "=", "d1", " "}], TraditionalForm]]],
 "by making  the substitutions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{"u", "\[Rule]", 
      SubscriptBox["u", "0"]}],
     FontWeight->"Bold"], ",", 
    RowBox[{
     StyleBox["v",
      FontWeight->"Bold"], 
     StyleBox["\[Rule]",
      FontWeight->"Bold"], 
     StyleBox[
      SubscriptBox["v", "0"],
      FontWeight->"Bold"], " "}]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"Dt", "[", 
      RowBox[{"u", ",", "v", ",", 
       RowBox[{"Constants", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "R"}], "}"}]}]}], "]"}], "\[Rule]", 
     SubscriptBox["d", "1"]}],
    FontWeight->"Bold"], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"Dt", "[", 
      RowBox[{"u", ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "2"}], "}"}], ",", 
       RowBox[{"Constants", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "R"}], "}"}]}]}], "]"}], "\[Rule]", 
     SubscriptBox["d", "2"]}],
    FontWeight->"Bold"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.560668079526538*^9, 3.560668112948677*^9}, 
   3.560668159282859*^9, {3.5606681940109777`*^9, 3.560668245458507*^9}, {
   3.560668308265663*^9, 3.5606684255837717`*^9}, {3.5606685303713903`*^9, 
   3.5606685441425962`*^9}, {3.560668577481002*^9, 3.560668599049863*^9}, {
   3.560727285850421*^9, 3.560727286518814*^9}, {3.560727374221951*^9, 
   3.56072737483829*^9}, {3.5609775128067083`*^9, 3.560977534477983*^9}, {
   3.561071390934688*^9, 3.5610713920567207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq2", "=", 
  RowBox[{
   RowBox[{"Dt", "[", 
    RowBox[{"eqcirc", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "2"}], "}"}], ",", 
     RowBox[{"Constants", "->", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "R"}], "}"}]}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "\[Rule]", 
      SubscriptBox["u", "0"]}], ",", 
     RowBox[{"v", "\[Rule]", 
      SubscriptBox["v", "0"]}], ",", 
     RowBox[{
      RowBox[{"Dt", "[", 
       RowBox[{"v", ",", "u", ",", 
        RowBox[{"Constants", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "R"}], "}"}]}]}], "]"}], "\[Rule]", 
      "d1"}], ",", 
     RowBox[{
      RowBox[{"Dt", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}], ",", 
        RowBox[{"Constants", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "R"}], "}"}]}]}], "]"}], "\[Rule]", 
      "d2"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.5606635067416363`*^9, 3.560663704987254*^9}, {
  3.56066374486172*^9, 3.560663772206561*^9}, {3.5606638076121492`*^9, 
  3.560663832159886*^9}, {3.5606639803344193`*^9, 3.5606639964546957`*^9}, {
  3.5606653682551003`*^9, 3.560665376964417*^9}, {3.560665993427059*^9, 
  3.5606660212870407`*^9}, {3.560977660028212*^9, 3.560977673250928*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["d1", "2"]}], "+", 
   RowBox[{"2", " ", "d2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", 
      SubscriptBox["v", "0"]}], ")"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.560663777358886*^9, 3.5606638683452473`*^9, 
  3.5606640053824883`*^9, 3.560665333746553*^9, 3.5606653906369543`*^9, 
  3.560665541743881*^9, 3.5606656390641727`*^9, 3.560666037139248*^9, 
  3.5607273990743628`*^9, 3.5607281251875*^9, 3.5608632816796503`*^9, 
  3.5609772428080873`*^9, 3.560977690600257*^9}]
}, Open  ]],

Cell[TextData[{
 "Now we solve these equations for ",
 StyleBox["a",
  FontSlant->"Italic"],
 ",",
 StyleBox["b",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["R",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.560727428763447*^9, 3.560727464307807*^9}, {
  3.560727518917767*^9, 3.560727562455233*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sols", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eq0", ",", "eq1", ",", "eq2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "R"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5606644594197893`*^9, 3.5606644909058647`*^9}, {
  3.560727784115058*^9, 3.560727787787565*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "d1"}], "-", 
       SuperscriptBox["d1", "3"], "+", 
       RowBox[{"d2", " ", 
        SubscriptBox["u", "0"]}]}], "d2"]}], ",", 
    RowBox[{"b", "\[Rule]", 
     FractionBox[
      RowBox[{"1", "+", 
       SuperscriptBox["d1", "2"], "+", 
       RowBox[{"d2", " ", 
        SubscriptBox["v", "0"]}]}], "d2"]}], ",", 
    RowBox[{"R", "\[Rule]", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["d1", "2"]}], ")"}], "3"], 
      SuperscriptBox["d2", "2"]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.56066449674606*^9, 3.5606654094108677`*^9, 
  3.560665580920059*^9, 3.560665649061657*^9, 3.560666054627201*^9, 
  3.5607277897833633`*^9, 3.560728139552279*^9, 3.560863295133387*^9, 
  3.560977263628441*^9, 3.5609777025968533`*^9}]
}, Open  ]],

Cell[TextData[{
 "Since we are dealing with a circle and its tangent line we expect that the \
line from (a,b) to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["u", "0"], ",", 
      SubscriptBox["v", "0"]}], ")"}], " "}], TraditionalForm]]],
 " should be perpendicular to the tangent line i.e. their slopes should be \
negative reciprocal"
}], "Text",
 CellChangeTimes->{{3.5607282569991207`*^9, 3.56072838143579*^9}, {
   3.560734964717244*^9, 3.5607349694913893`*^9}, {3.56086331244904*^9, 
   3.56086331542323*^9}, 3.5613332437429733`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"b", "-", 
    SubscriptBox["v", "0"]}], 
   RowBox[{"a", "-", 
    SubscriptBox["u", "0"]}]], "/.", "sols"}]], "Input",
 CellChangeTimes->{{3.56072780825799*^9, 3.560727878493643*^9}, {
  3.5607281878231707`*^9, 3.560728200506119*^9}, {3.5607283895122766`*^9, 
  3.56072839766226*^9}, {3.560734981916884*^9, 3.560735033376293*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["v", "0"]}], "+", 
    FractionBox[
     RowBox[{"1", "+", 
      SuperscriptBox["d1", "2"], "+", 
      RowBox[{"d2", " ", 
       SubscriptBox["v", "0"]}]}], "d2"]}], 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["u", "0"]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "d1"}], "-", 
      SuperscriptBox["d1", "3"], "+", 
      RowBox[{"d2", " ", 
       SubscriptBox["u", "0"]}]}], "d2"]}]], "}"}]], "Output",
 CellChangeTimes->{{3.5607278598390207`*^9, 3.560727880628581*^9}, 
   3.560728161940295*^9, 3.5607282026082783`*^9, 3.5607284004342422`*^9, 
   3.560863323667717*^9, 3.560977725010557*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.560727897046112*^9, 3.560727908765286*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", 
   FractionBox["1", "d1"]}], "}"}]], "Output",
 CellChangeTimes->{3.5607284181236362`*^9, 3.560863347276272*^9, 
  3.5609777332695427`*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["curvature ",
  FontSlant->"Italic"],
 "of a circle of radius ",
 StyleBox["r",
  FontSlant->"Italic"],
 " is ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "r"], TraditionalForm]]],
 "  . In this case the curvature is "
}], "Text",
 CellChangeTimes->{{3.560668674872505*^9, 3.56066867788008*^9}, {
  3.560668735266494*^9, 3.560668799137107*^9}, {3.560668876833493*^9, 
  3.560668900384301*^9}, {3.560977751473545*^9, 3.560977772455833*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SubsuperscriptBox["d", "1", "2"]}], ")"}], "3"], 
    SubsuperscriptBox["d", "2", "2"]]]]], "DisplayFormula",
 CellChangeTimes->{{3.560668943058332*^9, 3.560668962195222*^9}, {
  3.560669007057692*^9, 3.560669113123827*^9}}],

Cell[TextData[{
 "The point ",
 StyleBox["(a,b)",
  FontSlant->"Italic"],
 " is called the ",
 StyleBox["center of curvature. \n\n",
  FontSlant->"Italic"],
 "Now suppose that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["u", "0"], ",", 
      SubscriptBox["v", "0"]}], ")"}], "=", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}]}], TraditionalForm]]],
 " and that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]],
 " lies on a curve ",
 StyleBox["C",
  FontSlant->"Italic"],
 ". Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d1", "=", 
    FractionBox["dy", "dx"]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d2", "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["d", "2"], "\[NegativeThinSpace]", "y"}], 
     SuperscriptBox["dx", "2"]]}], TraditionalForm]]],
 "then  the circle is called the ",
 StyleBox["osculating circle",
  FontSlant->"Italic"],
 " to ",
 StyleBox["C",
  FontSlant->"Italic"],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]],
 ". Osculate is the Latin verb for kiss.  As ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y"}]}], TraditionalForm]]],
 ") varies along ",
 StyleBox["C",
  FontSlant->"Italic"],
 " the center of curvature varies along another curve called the ",
 StyleBox["evolute",
  FontSlant->"Italic"],
 " of ",
 StyleBox["C. ",
  FontSlant->"Italic"],
 "We examine two cases:"
}], "Text",
 CellChangeTimes->{{3.5606867593324203`*^9, 3.5606868047878428`*^9}, {
   3.5606868953628063`*^9, 3.560687042795836*^9}, {3.560687116198896*^9, 
   3.560687211017839*^9}, {3.56072761944163*^9, 3.560727652769013*^9}, 
   3.560728436079145*^9, {3.560728993393446*^9, 3.5607292873472137`*^9}, {
   3.56072934886765*^9, 3.5607296394875402`*^9}, {3.560730132553356*^9, 
   3.560730226335503*^9}, {3.560730274222335*^9, 3.5607303035832148`*^9}, {
   3.560735086575376*^9, 3.5607351540777082`*^9}, {3.5609777920575333`*^9, 
   3.56097779288412*^9}, {3.560977870259241*^9, 3.5609779464710827`*^9}, {
   3.560977979738936*^9, 3.560978163242509*^9}, {3.560978194960875*^9, 
   3.560978388421217*^9}, 3.561071431488256*^9, {3.561333255906172*^9, 
   3.5613332712287903`*^9}, {3.561500340382031*^9, 3.561500365812566*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]]],
 " (explicit case)"
}], "Item",
 CellChangeTimes->{{3.5606872691503363`*^9, 3.5606873044693213`*^9}, {
  3.560979797118906*^9, 3.560979801383717*^9}}],

Cell["More generally:", "Text",
 CellChangeTimes->{{3.56072967520371*^9, 3.560729683793036*^9}}],

Cell["x=x(t),y=y(t) (parametrized case)", "Item",
 CellChangeTimes->{{3.560687341551647*^9, 3.5606873904802732`*^9}, {
  3.5609798196865673`*^9, 3.560979854639936*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "The explicit Case:",
 StyleBox[" y=f(x). ",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellChangeTimes->{{3.560687624859867*^9, 3.560687640424913*^9}, {
   3.5606877092993917`*^9, 3.5606879433178053`*^9}, {3.560687981109611*^9, 
   3.560688025169442*^9}, {3.560688093921826*^9, 3.560688157483253*^9}, {
   3.5607297891334543`*^9, 3.5607297993250313`*^9}, {3.5609797417913094`*^9, 
   3.560979776321679*^9}, {3.560979864648855*^9, 3.560979873865281*^9}, {
   3.561071461926663*^9, 3.5610714722145147`*^9}, 3.574870346894451*^9}],

Cell[TextData[{
 StyleBox["Then we have ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"d1", "=", 
     RowBox[{
      RowBox[{"f", "'"}], 
      RowBox[{"(", "x", ")"}]}]}],
    FontWeight->"Plain"], TraditionalForm]]],
 " ",
 StyleBox["and ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["d2",
     FontWeight->"Plain"], "=", 
    StyleBox[
     RowBox[{
      RowBox[{"f", "''"}], 
      RowBox[{"(", "x", ")"}]}],
     FontWeight->"Plain"]}], TraditionalForm]]],
 ". ",
 StyleBox["At a general point (x,f(x)) on the curve we have",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.560687624859867*^9, 3.560687640424913*^9}, {
   3.5606877092993917`*^9, 3.5606879433178053`*^9}, {3.560687981109611*^9, 
   3.560688025169442*^9}, {3.560688093921826*^9, 3.560688157483253*^9}, {
   3.5607297891334543`*^9, 3.5607297993250313`*^9}, {3.5609797417913094`*^9, 
   3.560979776321679*^9}, {3.560979864648855*^9, 3.560979873865281*^9}, {
   3.561071461926663*^9, 3.5610714722145147`*^9}, 3.574870346894451*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.560979571347075*^9, 3.560979575546273*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}]}], "-", 
    SuperscriptBox[
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], "3"], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}], " ", "x"}]}], 
   RowBox[{
    RowBox[{"f", "''"}], "[", "x", "]"}]]}]], "Input",
 CellChangeTimes->{{3.560688195361587*^9, 3.560688208887972*^9}, {
  3.560688471435453*^9, 3.560688571922337*^9}, {3.560728607841114*^9, 
  3.560728618838517*^9}, {3.560978587652257*^9, 3.56097863574695*^9}, {
  3.5609787682083273`*^9, 3.560978778499866*^9}, {3.5609799244835157`*^9, 
  3.560979969226057*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], "2"], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}], " ", 
     RowBox[{"f", "[", "x", "]"}]}]}], 
   RowBox[{
    RowBox[{"f", "''"}], "[", "x", "]"}]]}]], "Input",
 CellChangeTimes->{{3.560688678882821*^9, 3.560688687904359*^9}, {
   3.5606887353254557`*^9, 3.5606888061166286`*^9}, {3.56068981259746*^9, 
   3.560689829644588*^9}, 3.560728726809773*^9, {3.560978660549296*^9, 
   3.560978669852643*^9}, {3.5609788129552603`*^9, 3.560978834096541*^9}, {
   3.560979992637331*^9, 3.560979993305394*^9}, {3.560980054599393*^9, 
   3.5609800697788277`*^9}, {3.560980106047687*^9, 3.560980123166397*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "[", "x_", "]"}], ":=", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{
        RowBox[{"f", "'"}], "[", "x", "]"}], "2"]}], ")"}], "3"], 
   SuperscriptBox[
    RowBox[{
     RowBox[{"f", "''"}], "[", "x", "]"}], "2"]]}]], "Input",
 CellChangeTimes->{{3.560728831635127*^9, 3.560728845115718*^9}, {
  3.5609787010236273`*^9, 3.560978730693235*^9}, {3.5609788612003613`*^9, 
  3.560978886842861*^9}, {3.56098015688511*^9, 3.560980188543139*^9}, {
  3.5609802310582*^9, 3.5609802476276283`*^9}}],

Cell[TextData[{
 "We denote the curvature at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"f", "(", "x", ")"}]}], ")"}], TraditionalForm]]],
 " by \[Kappa](x)."
}], "Text",
 CellChangeTimes->{{3.5607289134709387`*^9, 3.560728925550632*^9}, {
  3.560729908531128*^9, 3.560729941322184*^9}, {3.560978914631212*^9, 
  3.560978956176906*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]", "[", "x_", "]"}], ":=", 
  FractionBox["1", 
   SqrtBox[
    RowBox[{"R", "[", "x", "]"}]]]}]], "Input",
 CellChangeTimes->{{3.560729953615049*^9, 3.5607299979589777`*^9}, {
  3.5609789658443613`*^9, 3.56097897945441*^9}, {3.560980306069935*^9, 
  3.560980311383987*^9}}],

Cell[TextData[{
 "Just as we can think of the graph of a function, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]]],
 " as a parametrized curve parametrized by x, the evolute, which in general \
is not the graph of a function is a parametrized curve with parameter x, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["ev",
      FontSlant->"Italic"], "(", "x", ")"}], "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", "(", "x", ")"}], ",", 
      RowBox[{"b", "(", "x", ")"}]}], ")"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.560689583503591*^9, 3.560689611853736*^9}, {
  3.560730430781567*^9, 3.5607304467796917`*^9}, {3.560730499785269*^9, 
  3.5607305679830627`*^9}, {3.560979017969349*^9, 3.560979254687557*^9}, {
  3.5610715244747*^9, 3.561071558457938*^9}, {3.574876695216275*^9, 
  3.574876712825371*^9}}],

Cell[TextData[{
 StyleBox["Example: ",
  FontWeight->"Bold"],
 "The upper half of the ellipse ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["x", "2"], 
       SuperscriptBox["5", "2"]], "+", 
      FractionBox[
       SuperscriptBox["y", "2"], 
       SuperscriptBox["2", "2"]]}], "=", "1"}], ",", " ", 
    RowBox[{"y", "=", 
     RowBox[{"2", 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         SuperscriptBox["x", "2"], 
         SuperscriptBox["5", "2"]]}]]}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.560690011654945*^9, 3.560690011659129*^9}, {
  3.5606900509571333`*^9, 3.560690203159669*^9}, {3.560690242368373*^9, 
  3.560690252383999*^9}, {3.560690290527575*^9, 3.560690316935671*^9}, {
  3.560690414638804*^9, 3.560690415599691*^9}, {3.560730610354417*^9, 
  3.5607306109712954`*^9}, {3.560979267181075*^9, 3.560979290082168*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"2", 
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      SuperscriptBox["5", "2"]]}]]}]}]], "Input",
 CellChangeTimes->{{3.560690349045944*^9, 3.560690400844729*^9}, {
   3.56069045687558*^9, 3.5606904988806877`*^9}, {3.560690539661969*^9, 
   3.5606905407531223`*^9}, 3.5606905859805117`*^9, 3.560690935578209*^9, {
   3.5606910286660748`*^9, 3.5606910312918262`*^9}, {3.560730634767277*^9, 
   3.560730648142137*^9}, {3.560730793637925*^9, 3.560730794346715*^9}, {
   3.560979302537388*^9, 3.5609793105446978`*^9}}],

Cell["Let\[CloseCurlyQuote]s see the upper half of the ellipse and its \
evolute.", "Text",
 CellChangeTimes->{{3.560690680965521*^9, 3.56069073174063*^9}, {
  3.560730956918149*^9, 3.5607309577260523`*^9}, {3.56086366011539*^9, 
  3.560863662313806*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"above", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"f", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], ",", 
         RowBox[{"b", "[", "t", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560689999558963*^9, 3.560689999562546*^9}, 
   3.560690609462529*^9, {3.560690795011208*^9, 3.560690917704399*^9}, {
   3.5606910968425198`*^9, 3.560691106604836*^9}, {3.560730676104767*^9, 
   3.560730701954814*^9}, {3.560979355660363*^9, 3.5609793871661787`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\^\\(3/2\\)\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560980402388219*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560980402393217*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(ComplexInfinity + \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560980402455328*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560980402461151*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560980402506341*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
v2CJkg==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
/A86OD8A
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-5., 5.}, {-10.499999627012192`, 1.9999999763182341`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.560690882540819*^9, 3.560690920548074*^9, 
  3.56069096186502*^9, 3.560691041933016*^9, 3.5606911117358217`*^9, 
  3.5607307090231256`*^9, 3.5607308215304937`*^9, 3.560863674710022*^9, 
  3.5609794011082697`*^9, 3.560980402579548*^9}]
}, Open  ]],

Cell["\<\
The orange warnings are because of what happens at the points (-5,0) and \
(5,0) where the tangents are vertical\
\>", "Text",
 CellChangeTimes->{{3.560731033120123*^9, 3.560731112066888*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s see the lower half of the ellipse and it\
\[CloseCurlyQuote]s evolute for -5<u<5\
\>", "Text",
 CellChangeTimes->{{3.560691171670232*^9, 3.560691228709901*^9}, {
  3.560730727631402*^9, 3.5607307290459967`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "u_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "2"}], 
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox[
      SuperscriptBox["u", "2"], 
      SuperscriptBox["5", "2"]]}]]}]}]], "Input",
 CellChangeTimes->{
  3.56069129605628*^9, {3.56073077267763*^9, 3.560730783451659*^9}, {
   3.5607308585434303`*^9, 3.5607308594846573`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"below", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"f", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], ",", 
         RowBox[{"b", "[", "t", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5606913116256437`*^9, 3.560691320466606*^9}, 
   3.56069136317929*^9, {3.560730846816392*^9, 3.560730884374591*^9}, {
   3.560980462467723*^9, 3.56098048720296*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\^\\(3/2\\)\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560730890443172*^9, 3.560731001403966*^9, 
  3.5608637026338167`*^9, 3.560980421959786*^9, 3.56098050165833*^9, 
  3.560980539826247*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560730890443172*^9, 3.560731001403966*^9, 
  3.5608637026338167`*^9, 3.560980421959786*^9, 3.56098050165833*^9, 
  3.5609805398301983`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(ComplexInfinity + \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560730890443172*^9, 3.560731001403966*^9, 
  3.5608637026338167`*^9, 3.560980421959786*^9, 3.56098050165833*^9, 
  3.5609805398333473`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560730890443172*^9, 3.560731001403966*^9, 
  3.5608637026338167`*^9, 3.560980421959786*^9, 3.56098050165833*^9, 
  3.5609805398363047`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560730890443172*^9, 3.560731001403966*^9, 
  3.5608637026338167`*^9, 3.560980421959786*^9, 3.56098050165833*^9, 
  3.560980539839422*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
yughnKx9FriIzFFgcjRy0124FLEBW0EmpDM5VYrd4bS2eO0q8kT2+VnLKGu4
z3z5nUL2Srx/77n6MXw+8tXCXyvei1dPUXPBD9j+Y/PXHfwGMg3rvHCffXLc
f4833Jli6njAF7/Mkta3hJxHl9nidDsA1372ZnkemX8/3TXv3HO8Lfsf/Vlk
XDCkPs8jBE/bur1pAtmVeUYjPzQMT3ocFzWCnJhHi8p/F4kbPg8L70Ou969b
zq+KwVuK1lZ1IK85H2z1cSQe74lY2d+ELC4id9HCNwHPDnIcqEL+wOof3EZL
wrF1xpXlyCdHBkstEl7hTjYF/Z//xkdRqsz5ohTcLHv8R/Lf+EnlNm3Xe4Pf
5SVDI5Fzguz9z7em4V+5uMOfIPfayI6en8/A59cv6V5F9j75aHOHXxY+vfHV
3AXkteJu/2QFZOPb48mOU8ivOOtNlURzcEsfA3NF5KuL911dunLw7rMwLoa8
f1w1ICslF3+WFVvIjdzYHPJZSf0Dbq/5krMLxTvXW8MtyoYf8UMSwUceIKee
NTI3VSjAvbX2+jkgH2U3jvBh/4RHsku0nUQOOGdCq839jDNZYyuFkfl4zNZc
Ewb8qZdYzgs0P9++N9OJGgV8aZdr0nVkGeWdxEVrEg9znkg7hfytdae3/75i
PM7Wapnr73xXVfrTMlyCs/m8TnVE+aH5Udb6MZNS3Fp04vhB5NQOpd1spaU4
57pj7CLIxwKUXeWjy/AF9015JMpHAd0qI54nvuKW9JptXMh8z3d3ir2twAPU
5sTsUf5r63u/oiRSiV99arJZGfmtppr4Id9K3K723u4/8xToD6iZOVn8wDPv
KLy6hxyorUH/wvcLT0tVehSI8u2juRhmpnoNrup9xtIT5e+rku1TH51qcIJa
LFBFNtXbzFaaWIMnkhsVRmdQ/5AYu7VpXS1ufvKF/jnkCv2481R/Ld6ydzxY
AdUD3uT4JoNwOs5+4ZRo4gSa/3ofPhdW0PHyxrv3zyCzTFfGKyzT8ZU9wpJs
yHPE3GWui/V4yWOdOctxVM/b9OaL5BtwMkSCW2CMgi/CiyKKRY141VbVsqOo
fuV/FliJnmjEBRu8Lo4Oo/iylu7m2daEsz4FlWfIb7JPvel72IRbD2KOdUMU
hOml7I093YzzrCgRBqgeuvganePra8HncLgiheqpg4KDtudGBv7s2w6Ngl5U
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
f2E5OaE=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
yP8DjrqN8Q==
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-5., 5.}, {-1.9999999763182341`, 10.499999627012192`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.560691368029386*^9, 3.560730745178788*^9, 
  3.5607308905197287`*^9, 3.5607310014871883`*^9, 3.5608637027179003`*^9, 
  3.5609804220394793`*^9, 3.560980501741255*^9, 3.560980539900923*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ellipseevolute", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"above", ",", "below", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "11"}], ",", "11"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560691385997488*^9, 3.560691397918806*^9}, {
   3.56069170294838*^9, 3.560691729938581*^9}, {3.560731147886972*^9, 
   3.560731181392796*^9}, 3.560731218848624*^9, {3.560731946930825*^9, 
   3.5607319599401293`*^9}, {3.560863755569112*^9, 3.5608637595045156`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
v2CJkg==
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
/A86OD8A
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
yughnKx9FriIzFFgcjRy0124FLEBW0EmpDM5VYrd4bS2eO0q8kT2+VnLKGu4
z3z5nUL2Srx/77n6MXw+8tXCXyvei1dPUXPBD9j+Y/PXHfwGMg3rvHCffXLc
f4833Jli6njAF7/Mkta3hJxHl9nidDsA1372ZnkemX8/3TXv3HO8Lfsf/Vlk
XDCkPs8jBE/bur1pAtmVeUYjPzQMT3ocFzWCnJhHi8p/F4kbPg8L70Ou969b
zq+KwVuK1lZ1IK85H2z1cSQe74lY2d+ELC4id9HCNwHPDnIcqEL+wOof3EZL
wrF1xpXlyCdHBkstEl7hTjYF/Z//xkdRqsz5ohTcLHv8R/Lf+EnlNm3Xe4Pf
5SVDI5Fzguz9z7em4V+5uMOfIPfayI6en8/A59cv6V5F9j75aHOHXxY+vfHV
3AXkteJu/2QFZOPb48mOU8ivOOtNlURzcEsfA3NF5KuL911dunLw7rMwLoa8
f1w1ICslF3+WFVvIjdzYHPJZSf0Dbq/5krMLxTvXW8MtyoYf8UMSwUceIKee
NTI3VSjAvbX2+jkgH2U3jvBh/4RHsku0nUQOOGdCq839jDNZYyuFkfl4zNZc
Ewb8qZdYzgs0P9++N9OJGgV8aZdr0nVkGeWdxEVrEg9znkg7hfytdae3/75i
PM7Wapnr73xXVfrTMlyCs/m8TnVE+aH5Udb6MZNS3Fp04vhB5NQOpd1spaU4
57pj7CLIxwKUXeWjy/AF9015JMpHAd0qI54nvuKW9JptXMh8z3d3ir2twAPU
5sTsUf5r63u/oiRSiV99arJZGfmtppr4Id9K3K723u4/8xToD6iZOVn8wDPv
KLy6hxyorUH/wvcLT0tVehSI8u2juRhmpnoNrup9xtIT5e+rku1TH51qcIJa
LFBFNtXbzFaaWIMnkhsVRmdQ/5AYu7VpXS1ufvKF/jnkCv2481R/Ld6ydzxY
AdUD3uT4JoNwOs5+4ZRo4gSa/3ofPhdW0PHyxrv3zyCzTFfGKyzT8ZU9wpJs
yHPE3GWui/V4yWOdOctxVM/b9OaL5BtwMkSCW2CMgi/CiyKKRY141VbVsqOo
fuV/FliJnmjEBRu8Lo4Oo/iylu7m2daEsz4FlWfIb7JPvel72IRbD2KOdUMU
hOml7I093YzzrCgRBqgeuvganePra8HncLgiheqpg4KDtudGBv7s2w6Ngl5U
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
f2E5OaE=
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
yP8DjrqN8Q==
      "]]}}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{-11, 11},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.560691400083171*^9, 3.560691734970335*^9, {3.560731125561419*^9, 
   3.560731150541103*^9}, 3.560731227627121*^9, 3.5607319633670473`*^9, 
   3.5608637674477158`*^9, 3.560980436608779*^9, 3.560980553222393*^9}]
}, Open  ]],

Cell[TextData[{
 "Another Example: The evolute of the parabola ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    SuperscriptBox["y", "2"]}], TraditionalForm]]],
 ", "
}], "Text",
 CellChangeTimes->{{3.5606917986583138`*^9, 3.560691906114518*^9}, {
  3.560731267042555*^9, 3.560731271319249*^9}, {3.5609805668037767`*^9, 
  3.560980570498108*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], ":=", 
  SuperscriptBox["z", "2"]}]], "Input",
 CellChangeTimes->{{3.5606919216754513`*^9, 3.560691937328417*^9}, {
  3.560731273292379*^9, 3.560731283259184*^9}, {3.560980587670813*^9, 
  3.560980609052696*^9}, {3.560980640695732*^9, 3.5609806451587877`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "[", "x", "]"}], ",", 
        RowBox[{"b", "[", "x", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.560692347929358*^9, 3.5606923615458612`*^9}, {
  3.560731294992622*^9, 3.560731347726383*^9}, {3.5609806672975492`*^9, 
  3.5609807032595654`*^9}, {3.560980743692068*^9, 3.560980746669508*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-7.235553746832042, 7.154343585896635}, {0., 12.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.560692005648795*^9, {3.560692363716967*^9, 3.560692402244749*^9}, 
   3.560731350843004*^9, 3.560980629016623*^9, 3.5609807548627653`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "z_", "]"}], ":=", 
  SuperscriptBox["z", "3"]}]], "Input",
 CellChangeTimes->{{3.5606921346513042`*^9, 3.56069215416893*^9}, {
  3.560692220778091*^9, 3.560692225771405*^9}, {3.560695563221198*^9, 
  3.5606955661600018`*^9}, {3.560731384942771*^9, 3.560731390327506*^9}, {
  3.560980785142247*^9, 3.560980800251095*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "[", "x", "]"}], ",", 
        RowBox[{"b", "[", "x", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5606922450508137`*^9, 3.560692249324708*^9}, {
   3.560731396776157*^9, 3.56073142161941*^9}, 3.5608638275743647`*^9, {
   3.560980822359748*^9, 3.560980847561154*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
//UpqLywM/hDhrCACzf4/6v7v3+8/8//ATMHSe8=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
zsF0hoD93zwU/795KPY/4w7ndw==
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-2.164947905330717, 
   2.1214588140378026`}, {-3.1776814243206215`, 3.1666293613007435`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.560692190801261*^9, 3.560692252253923*^9, 
  3.560863836199451*^9, 3.5609808501723337`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.560731730152438*^9, 3.5607317362182417`*^9}}],

Cell[TextData[{
 "Notice here that as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Rule]", "0"}], TraditionalForm]]],
 " the second derivative goes to 0 and the radius of the osculating circle \
goes to \[Infinity] and we get the vertical asymptotes on the evolute"
}], "Text",
 CellChangeTimes->{{3.560731509256909*^9, 3.560731647581558*^9}, {
   3.574878066632846*^9, 3.5748781146671047`*^9}, 3.5748796303379593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The general parametrized case:", "Subsubsection",
 CellChangeTimes->{{3.560692591568911*^9, 3.5606926272709723`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "=", 
    RowBox[{"u", "(", "t", ")"}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "=", 
    RowBox[{
     RowBox[{"v", "(", "t", ")"}], "."}]}], TraditionalForm]]],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"u", "(", "t", ")"}], ",", 
     RowBox[{"v", "(", "t", ")"}]}], ")"}], TraditionalForm]]],
 " we have\n"
}], "Text",
 CellChangeTimes->{{3.5606926534804153`*^9, 3.5606927116149282`*^9}, {
   3.560692834163054*^9, 3.56069283871176*^9}, {3.560692869049625*^9, 
   3.560692909577958*^9}, {3.560692949356225*^9, 3.560693069728179*^9}, {
   3.560693105340063*^9, 3.560693122454382*^9}, {3.560693170203723*^9, 
   3.56069321559089*^9}, 3.5608640463452873`*^9}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   FormBox[
    RowBox[{
     RowBox[{
      StyleBox["d1",
       FontSlant->"Plain"], "[", "t", "]"}], "=", 
     RowBox[{
      FractionBox["dv", "du"], "=", 
      FractionBox[
       FractionBox["dv", "dt"], 
       FractionBox["du", "dt"]]}]}],
    TraditionalForm], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"v", "'"}], "[", "t", "]"}], 
    RowBox[{
     RowBox[{"u", "'"}], "[", "t", "]"}]]}]}]], "DisplayFormula",
 CellChangeTimes->{
  3.560693235751005*^9, {3.560695882015617*^9, 3.560695924279242*^9}, {
   3.560696096966062*^9, 3.560696098372158*^9}, {3.560700456540882*^9, 
   3.560700459878216*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2", "[", "t", "]"}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["d", "2"], "\[NegativeThinSpace]", "v"}], 
    RowBox[{"d", "\[InvisibleComma]", "\[NegativeThinSpace]", 
     SuperscriptBox["u", "2"]}]], "=", 
   RowBox[{
    FractionBox[
     FractionBox[
      RowBox[{"d", "\[NegativeThinSpace]", 
       FractionBox["dv", "du"]}], "dt"], 
     FractionBox["du", "dt"]], "=", 
    RowBox[{
     FractionBox[
      FractionBox[
       RowBox[{"d", "\[NegativeThinSpace]", 
        FractionBox[
         FractionBox["dv", "dt"], 
         FractionBox["du", "dt"]]}], "dt"], 
      FractionBox["du", "dt"]], "=", 
     RowBox[{
      FractionBox[
       FractionBox[
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["d", "2"], "\[NegativeThinSpace]", "v"}], 
           SuperscriptBox["dt", "2"]], 
          FractionBox["du", "dt"]}], "-", 
         RowBox[{
          FractionBox["dv", "dt"], 
          FractionBox[
           RowBox[{
            SuperscriptBox["d", "2"], "\[NegativeThinSpace]", "u"}], 
           SuperscriptBox["dt", "2"]]}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["du", "dt"], ")"}], "2"]], 
       FractionBox["du", "dt"]], "=", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"v", "''"}], "[", "t", "]"}], 
         RowBox[{
          RowBox[{"u", "'"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "'"}], "[", "t", "]"}], 
         RowBox[{
          RowBox[{"u", "''"}], "[", "t", "]"}]}]}], 
       SuperscriptBox[
        RowBox[{
         RowBox[{"u", "'"}], "[", "t", "]"}], 
        "3"]]}]}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.560693274450191*^9, 3.560693283663577*^9}, 
   3.560693351101261*^9, {3.560693451664875*^9, 3.560693643293497*^9}, 
   3.560693684330336*^9, {3.560693748888069*^9, 3.5606937546276093`*^9}, 
   3.560693795927552*^9, {3.5606938347848053`*^9, 3.560693845925139*^9}, {
   3.560693890445488*^9, 3.5606939306418047`*^9}, {3.560693968347962*^9, 
   3.560693988026908*^9}, {3.560694023575757*^9, 3.56069403044272*^9}, {
   3.560694133330132*^9, 3.560694233084105*^9}, {3.5606942881803207`*^9, 
   3.560694306925396*^9}, 3.560694491349111*^9, {3.5606945384830503`*^9, 
   3.560694575806303*^9}, 3.5606946147599382`*^9, {3.56069465637033*^9, 
   3.560694705678609*^9}, 3.5606947704967813`*^9, {3.560694825153737*^9, 
   3.5606952201525507`*^9}, {3.56069612344097*^9, 3.560696213737349*^9}, {
   3.560696257539955*^9, 3.560696293243932*^9}, {3.5607004773585653`*^9, 
   3.56070048385328*^9}, {3.560731679929181*^9, 3.56073169727381*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d1", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"v", "'"}], "[", "t", "]"}], 
   RowBox[{
    RowBox[{"u", "'"}], "[", "t", "]"}]]}]], "Input",
 CellChangeTimes->{{3.560696597670794*^9, 3.560696651199316*^9}, {
  3.56069766911656*^9, 3.560697687086692*^9}, {3.56069988217986*^9, 
  3.560699906347269*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"v", "''"}], "[", "t", "]"}], 
     RowBox[{
      RowBox[{"u", "'"}], "[", "t", "]"}]}], "-", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "'"}], "[", "t", "]"}], 
     RowBox[{
      RowBox[{"u", "''"}], "[", "t", "]"}]}]}], 
   SuperscriptBox[
    RowBox[{
     RowBox[{"u", "'"}], "[", "t", "]"}], "3"]]}]], "Input",
 CellChangeTimes->{{3.560696440903407*^9, 3.560696567180257*^9}, {
  3.560697701933393*^9, 3.5606977236261168`*^9}, {3.560699927284871*^9, 
  3.5606999301972523`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"d1", "[", "t", "]"}]}], "-", 
    SuperscriptBox[
     RowBox[{"d1", "[", "t", "]"}], "3"], "+", 
    RowBox[{
     RowBox[{"d2", "[", "t", "]"}], 
     RowBox[{"u", "[", "t", "]"}]}]}], 
   RowBox[{"d2", "[", "t", "]"}]]}]], "Input",
 CellChangeTimes->{{3.5606976237003403`*^9, 3.560697628952572*^9}, {
  3.560697736623836*^9, 3.560697740212294*^9}, {3.5606978853178596`*^9, 
  3.5606979393814898`*^9}, {3.560697973165135*^9, 3.560697984430716*^9}, {
  3.560698034586872*^9, 3.560698071169219*^9}, {3.5606999438202763`*^9, 
  3.560699964124971*^9}, {3.560700066585081*^9, 3.560700069526956*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"d1", "[", "t", "]"}], "2"], "+", 
    RowBox[{
     RowBox[{"d2", "[", "t", "]"}], 
     RowBox[{"v", "[", "t", "]"}]}]}], 
   RowBox[{"d2", "[", "t", "]"}]]}]], "Input",
 CellChangeTimes->{{3.560698085769883*^9, 3.5606980950091248`*^9}, {
  3.56069815399788*^9, 3.560698210048661*^9}, {3.5606982626738853`*^9, 
  3.5606982714356833`*^9}, {3.560700024859394*^9, 3.560700053512257*^9}, {
  3.560731909018531*^9, 3.560731910181971*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "[", "t_", "]"}], ":=", 
  FractionBox["1", 
   SqrtBox[
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"d1", "[", "t", "]"}], "2"]}], ")"}], "3"], 
     SuperscriptBox[
      RowBox[{"d2", "[", "t", "]"}], "2"]]]]}]], "Input",
 CellChangeTimes->{{3.560864170083334*^9, 3.560864178874354*^9}, {
  3.560864324831815*^9, 3.5608643477592297`*^9}}],

Cell["As for curvature we have", "Text",
 CellChangeTimes->{{3.560698324608245*^9, 3.5606983382865877`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5608643628933372`*^9, 3.56086436561265*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]", "[", "t_", "]"}], ":=", 
  FractionBox["1", 
   SqrtBox[
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"d1", "[", "t", "]"}], "2"]}], ")"}], "3"], 
     SuperscriptBox[
      RowBox[{"d2", "[", "t", "]"}], "2"]]]]}]], "Input",
 CellChangeTimes->{{3.560698412715601*^9, 3.560698526987084*^9}, {
   3.560698562176098*^9, 3.560698596756062*^9}, 3.56069913512921*^9, {
   3.560700083121131*^9, 3.560700104948584*^9}, {3.560731884335204*^9, 
   3.5607318863064117`*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s see that we get results consistent with those we got \
for the ellipse\
\>", "Text",
 CellChangeTimes->{{3.560698644887952*^9, 3.5606986520931873`*^9}, {
  3.560698863621388*^9, 3.560698906442683*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    SuperscriptBox["u", "2"], 
    SuperscriptBox["5", "2"]], "+", 
   FractionBox[
    SuperscriptBox["v", "2"], 
    SuperscriptBox["2", "2"]]}], "=", "1"}]], "DisplayFormula",
 CellChangeTimes->{{3.5606989294727783`*^9, 3.560698997880805*^9}, {
  3.560699046085826*^9, 3.56069907908221*^9}}],

Cell["We parametrize this ellipse by", "Text",
 CellChangeTimes->{{3.560699097049015*^9, 3.560699120602292*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", "t_", "]"}], ":=", 
  RowBox[{"5", " ", 
   RowBox[{"Cos", "[", "t", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.560699151369369*^9, 3.5606991725193367`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", "t_", "]"}], ":=", 
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", "t", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.560699178306706*^9, 3.5606992199689903`*^9}}],

Cell[TextData[{
 "Now we look at the ",
 StyleBox["ParametricPlot",
  FontWeight->"Bold"],
 " of the ellipse and its evolute."
}], "Text",
 CellChangeTimes->{{3.5606992625623817`*^9, 3.56069933582546*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", "t", "]"}], ",", 
        RowBox[{"v", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "[", "t", "]"}], ",", 
        RowBox[{"b", "[", "t", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.560699350182366*^9, 3.560699466162735*^9}, 
   3.5607001756679583`*^9, {3.560864257034477*^9, 3.5608642775698977`*^9}, {
   3.560864397730751*^9, 3.560864422987632*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(ComplexInfinity + \
ComplexInfinity + ComplexInfinity\\)\[NoBreak] encountered. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/indet\\\", \
ButtonNote -> \\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560981256709859*^9, 3.574878484607648*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(1 + ComplexInfinity + \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560981256709859*^9, 3.5748784846616096`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
eZ0mXE7YUEOhifuMq1p93f8+JLjn/z//B4GP5Wo=
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-4.999999415675864, 5.}, {-10.499996165646857`, 
   10.499995567358573`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.560699469007369*^9, 3.560700186153916*^9, 
  3.560731863607935*^9, 3.560731924101729*^9, 3.560864281835948*^9, 
  3.5608644305919237`*^9, 3.5609810611562643`*^9, 3.560981256718289*^9, 
  3.5748784846953077`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Problem3:\n\n",
  FontWeight->"Bold"],
 "Go back to problem set 4 and get the parametrizations of the cardioid as a \
hypotrochoid and as an epitrochoid. "
}], "Text",
 CellChangeTimes->{{3.560732107878461*^9, 3.560732271299943*^9}, {
   3.560981402876218*^9, 3.560981415079067*^9}, {3.560983135324326*^9, 
   3.560983136122717*^9}, {3.560983170411339*^9, 3.560983273668975*^9}, 
   3.560983843420022*^9, {3.5613321994476852`*^9, 3.561332199911518*^9}, 
   3.561333274915757*^9},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d1hypo", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"vhypo", "'"}], "[", "t", "]"}], 
   RowBox[{
    RowBox[{"uhypo", "'"}], "[", "t", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2hypo", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vhypo", "''"}], "[", "t", "]"}], 
     RowBox[{
      RowBox[{"uhypo", "'"}], "[", "t", "]"}]}], "-", 
    RowBox[{
     RowBox[{
      RowBox[{"vhypo", "'"}], "[", "t", "]"}], 
     RowBox[{
      RowBox[{"uhypo", "''"}], "[", "t", "]"}]}]}], 
   SuperscriptBox[
    RowBox[{
     RowBox[{"uhypo", "'"}], "[", "t", "]"}], 
    "3"]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ahypo", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"d1hypo", "[", "t", "]"}]}], "-", 
    SuperscriptBox[
     RowBox[{"d1hypo", "[", "t", "]"}], "3"], "+", 
    RowBox[{
     RowBox[{"d2hypo", "[", "t", "]"}], 
     RowBox[{"uhypo", "[", "t", "]"}]}]}], 
   RowBox[{"d2hypo", "[", "t", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bhypo", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"d1hypo", "[", "t", "]"}], "2"], "+", 
    RowBox[{
     RowBox[{"d2hypo", "[", "t", "]"}], 
     RowBox[{"vhypo", "[", "t", "]"}]}]}], 
   RowBox[{"d2hypo", "[", "t", "]"}]]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.5750292842220697`*^9, 3.5750293066771793`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "\n",
 StyleBox[" a:",
  FontWeight->"Bold"],
 "Plot the cardioid and its evolute using the hypotrochoid parametrization. "
}], "Text",
 CellChangeTimes->{{3.560732107878461*^9, 3.560732271299943*^9}, {
  3.560981402876218*^9, 3.560981415079067*^9}, {3.560983135324326*^9, 
  3.560983136122717*^9}, {3.560983170411339*^9, 3.5609832814315367`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"uhypo", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "2"}], ")"}], " \[NegativeThinSpace]", 
    RowBox[{"Cos", "\[NegativeThinSpace]", "[", "t", "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], "-", "1"}], ")"}], "t"}], 
     "]"}]}]}]}], "\[LineSeparator]", 
 RowBox[{
  RowBox[{"vhypo", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "2"}], ")"}], 
    RowBox[{"Sin", "\[NegativeThinSpace]", "[", "t", "]"}]}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], "-", "1"}], ")"}], "t"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"uhypo", "[", "t", "]"}], ",", 
        RowBox[{"vhypo", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ahypo", "[", "t", "]"}], ",", 
        RowBox[{"bhypo", "[", "t", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"4", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.575029364799728*^9, 3.575029365581944*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
QmtB
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
h/Xv/+ZOGvfBuqP2YLmFgteGpZbCjvRBnKOfJO9xCr7WYs/eXEUGd02RZyvO
FJSJTEy9/rcXPu/QXDzqTkG68sBSI7UX3KkWY6ovKWhoc+joxapeKLegXJUN
oaBS+N04hQ+9IBMdqLeWQ0FLc5PLNyR64Wyf8OQxBgVVUnyDz5r1QEuBG2fz
PAW3J95wNVXtgTWffYLXVyiYc/v56zfHeuBC7LUDB9mpGGfD4TzxrxsOhVsL
lIlQ0bz8cg85vBt6dJ6UZYpTceaEt46YZzdI3eH9+laCikFSrNFO1t3QrPzC
6t9pKrI0a//ZJdsNz+84t/RfoeLU7R+zXzu6YNe5C9/26lARUF9CsLgLZG6t
HdW8Tjxv+H3vh4QuwNeGorbmVLR1tBt6f78L/OYdFOKcqWhkod7Syt0F52eT
OoVDqRh8foPLI41OyPZ2onFHUpHr/u6z6qc7YW9w1bWZGCoGblxO3yvcCe9P
8LvaJVHR/sGXmXFGB4gfygKn71TcmmtHq/LrgLr6TyEl+VQUFm4/0+zSAS8+
bv+2VEjF17tft/Qbd0CKKcnqeDkVJePMd+841gE7HkprZDZS8YF2icRAMwnO
FgqcM26h4rXGhe/7iTmj2pXtxt82Ko5dq955P5YEQ/ohN2e7qCiYFZC934kE
ffWSBpq9VHR567fV5wYJyIolFRF9VMy1PPTurxIJjFRcNv4doGLFXtdTUzwk
SPottMI+TMX8jniPeyvtUFBYEcA6SsXHHDqnmUfaIa2ijFwzQcWet7f2yn5v
h4+m+1N96FTcq/LFdSCqHf59Dbt2boqKybJnPAJetoO5kYerxQyxPlOeynm9
HU6wy12v+EVFNp2rt63Pt8PrPEoZ928qtp5ifP9JzDnOW6ys3eapuO0Ibegr
czv4O6SXhC9QsftbEnn/VBuonYppS/pDRYpaUduXzjZ4419lEvCXipNGPL+r
U9rgy7Gi33eXqOjtfkHaPKQN7MT778stU/EXNSt1o0cb5I2nzvwheMEy1TLL
tg0MqjLuxa9Qke/1k7uW+m3Q3O+2SXGViv/OXWsVVWoDKn9B6U+CBeetoseO
tMGtZa7Pav+oOPGmYTCbvw1af8hW5BIsI+/z5Q1zG/QJrBzgXaNiZ/zndVZT
rbByU3zAjODa2E3zV7taYepkyN8YgrOvf/wA5a1wuPi4exPBYwdEJmTSWsHA
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
x0Ff/kX1lmG75tbfp2oomChrm35vrQIt1NX7vX9SsI1ps88N4UrcZKz+oKGV
gmoa977cVKxEr7FqrXN9FDTia3NJ8azEm1GdTCm/iPl1WIbnJXsVqu/5a5+2
g4pRUd6XeAWq8ReljWEiSMU78dW2YWersfivxCZ2USrKuxczyRpXI7dFfr3s
YYItvmqWxVejF9Rn7DpHxabEV4ssUjUoT1N/02pExa0/xEylr9RiLW3XdIcZ
FWVSLCbVnWoxUcN8uMmSiirHBZcfBdfi+duHL0bfpSK/cqSpELUWs4537cl6
SsVv5n7PfR3r8Ojhu1evP6eiHv+ZaxbBdXg8rsl/zotYL/3vsO6POnzJ9GkD
qw8VRY/Mej3ZUI/fBFoXQkOpWHzvGcd4WD1qU/onqRFULIih9zwtqcefRq33
dsZQccRx447Do/XobfhnzvIzFcdkJ/3rpRpQZkxqk3UWFXWdeexE6xow7sim
n2o5VJzNfh/mONOArXaVn/bkUfH21VuRnXw/sVrb7b/oIiom6Mi0j5n/xD2B
6+qYa6j4uuVUJ9/aT/zwRUXkbh0V9x0rC9EVa0T3B8lBDQ1UFHx3IP2LeiNe
Os4RYdZCxaeJBwLffySuD7j7/Oom4s/ykMPoRBM2kfpl53qp+KpK5prKjSZs
P5P8fqKPihdOk28qPm/CVaNC1pQBKmY9cj3l0kRcL/zm8W6c2P8Fs3kb6Wb8
2vDrzz4aFZ982a0jpdaMefc3JabSqcg1p1+wzqgZezcecw2apuLZ70ediryb
8br6C685BhUHmbjTkkOb8dyqqr/KLyoemN5QFZvajK8deB4W/Sb0Ia83SiU1
o3176unhOSrajfVWl040Y+omasXKPBUx++YAdbUZNWzYuVj/UNGQcj6albsF
rVhD2VkWqTidrrxwen8LrstnSZwheFhyrefemRYcPl7b3fSX2M+BDUp5V1pQ
cDSw1myZ2G/u9B1DlxYMv9pgw7dCxbcbk7cVv21BdaZSux8E+2ibcB6IacFN
nfvK/v/9836FvnZ4dgvyDn+7+f/vo/seV7fz17ZgrMdJCa1/VIwJ7XwR2deC
L81dDhYSPKoba3hktgXLI/XP868R+188erliYyuuFhXYmRN8ecpV1WJXKwp2
+If//3uxQ839C1zHWjHepx0bCX6r/UemTLkVjx95+3OK4J6g1m1u11uxJ6si
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
AADn6ucz
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-2.9999992988110646`, 
   1.4999987413861882`}, {-2.598074284699196, 2.598073890356724}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5750293766996403`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 StyleBox["b: ",
  FontWeight->"Bold"],
 "Plot the cardioid and its evolute",
 StyleBox[" ",
  FontWeight->"Bold"],
 "using the epitrochoid parametrization. Do you get the same pairs of \
curves?"
}], "Text",
 CellChangeTimes->{{3.560983316848028*^9, 3.560983403619254*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"uepi", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "1"}], ")"}], "\[NegativeThinSpace] ", 
    RowBox[{"Cos", "\[NegativeThinSpace]", "[", "t", "]"}]}], "-", 
   RowBox[{"1", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "1"], "+", "1"}], ")"}], "t"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vepi", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "1"}], ")"}], " \[NegativeThinSpace]", 
    RowBox[{"Sin", "[", "t", "]"}]}], "-", 
   RowBox[{"1", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "1"], "+", "1"}], ")"}], "t"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d1epi", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"vepi", "'"}], "[", "t", "]"}], 
   RowBox[{
    RowBox[{"uepi", "'"}], "[", "t", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2epi", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vepi", "''"}], "[", "t", "]"}], 
     RowBox[{
      RowBox[{"uepi", "'"}], "[", "t", "]"}]}], "-", 
    RowBox[{
     RowBox[{
      RowBox[{"vepi", "'"}], "[", "t", "]"}], 
     RowBox[{
      RowBox[{"uepi", "''"}], "[", "t", "]"}]}]}], 
   SuperscriptBox[
    RowBox[{
     RowBox[{"uepi", "'"}], "[", "t", "]"}], "3"]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aepi", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"d1epi", "[", "t", "]"}]}], "-", 
    SuperscriptBox[
     RowBox[{"d1epi", "[", "t", "]"}], "3"], "+", 
    RowBox[{
     RowBox[{"d2epi", "[", "t", "]"}], 
     RowBox[{"uepi", "[", "t", "]"}]}]}], 
   RowBox[{"d2epi", "[", "t", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bepi", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"d1epi", "[", "t", "]"}], "2"], "+", 
    RowBox[{
     RowBox[{"d2epi", "[", "t", "]"}], 
     RowBox[{"vepi", "[", "t", "]"}]}]}], 
   RowBox[{"d2epi", "[", "t", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"uepi", "[", "t", "]"}], ",", 
        RowBox[{"vepi", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"aepi", "[", "t", "]"}], ",", 
        RowBox[{"bepi", "[", "t", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"4", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5750304012170773`*^9, 3.575030443209494*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
3DVxLQxHnqVeRyonUN6d8KdVG6nxNmPK9nxMVOvHdD8ujuED24vlr2kxkQT/
NCd1JYbrqQ3f80hhouizL/u7uDF82dePpj33WEjj+8ADo046zpvI7aWRz0KH
D22+hurpuOYr8VK/BRbyXWP/eqGMjp/dNireeoWN3O+31vZn0/E4Jls/wXoS
tdL0LS88oeNzPLFF56In0Xbhq8v0/en4rnf9n/nrJlHXlV9qc5503PSpJ/9K
Aw6yCdPES8/S8Zny1MfMXSTaVH30qIQSHW9KGA3pv0iirpRjxz2k6fjQiSwT
IpFEb/K+7Hu5ho4brOqUEV83hQZfv5I4Nc+Nz3az91vQptF6ywv19wu58fRu
77orv2ZQEu+94Joj3Dg4EbeM52aQT8bZAGmcG//d9CcS2z2LOvOb8w8qcuN4
ookJK34W8R8wvzstzI2vaI+/VO8zhz425pptKePCv+dXn5PavoB+lV8SKdTi
wiUF2vQUzy2gF+fyeOS3cuF7ZLYkCUYuIJpagqH1Wi48/PByue1ci+jrc6er
2iwabtX18yGrchHtzGS9GH9Dw/P1p84sfKQRN2S9xkYWF2FPZ1OaTAmNiOD8
7KA1LEJF9jX3nZ00gqlKMIvTFuF+3n29WSEuQvad42dvq0X4vfTyqgMOXITo
mYXEi1kLwOQ/0ecuxk18LmWNFFnNg68zc3XNNm6CsPLef3znPFxvFv4mcoCb
OCjO2fSSZx5q7ze7qV/kJqr5ExZPv58DpciWQWGCmyjpEfiSypqFBI3rG+LO
0An//mLb7mszkBac82rOnU5c+CkTp6s7A3HO4gPKAXTCp4HMchadgX0rRJh4
Cp3IO5ewdfbTNKzYmtj7kUMniPxl25RHpsDyEPNMvT9GuEvGXfI1IeFCaAOd
E44RpZ0RLZvXk+C7N2jDeAJGCN3iPhhOnSd9t2yYcv2NEac+7pn448MBqT1L
mxKW8hAnpW1FUpMmQTX9iAzhz0OIkQ9zPjJZIHloq/nmUB7irvmr1wq5LOiM
Cs84H8dDuJ+5qH31Lgv6djrtcP3OQ/TIcV7cWcMCOVPtlcksHoJ+/dOJu2pM
sB8jxGtpvETAd5+k51xMmDkauKJekJf4tWPtK7/iCThosbDHVpaXkH4oc6vp
5ARYKqh4RJzkJaKC3yrFezBgVDqT5mPLS0g4bau9pMEAl6VTZ9TdqO/dTNu6
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
/wD0KcE5
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
cdvEMqB5AvzXxz0J58PQIbMTP409CfDO7J7Buv1rVMQUGaHuQADW2cfs5uGB
SM3/Yb/OQwJIL7Qwy30LQHS2uMV2NQLUznsNrXH6ozn2T8fVuAhw3m6cgX6/
DzqcO/dUjp0AFHtOJklDbyTKbJN7dwcPmqFHzUp1XiFRtdQHC7N40KlNdw8q
9kRfe7eMer9j+umdLx/JroiSyeUx+wUPixGn2HrrniMueWFXwUw8FGqw88zk
uSDxS5pW+8LxcJB3i1s52QkFSe15X2GJh57wpjn0wwEVR3p1557Aw5PD1xVZ
2h8hAx2iV/8RPLiKNYmitIdIQrDoBd9+PMRnapxW8nuAeAz8hP+jw0O+c3tK
QL8Jyiwt4WGdwoFY2JtrPs76CBkFj5iRcFByKMAe36OL8ci/V2Q8DiaftFZy
KOogus5AAe02HHhedw40M9JCpnXk2IMlONiJscuTHFBDvb50Ypn5OLh/sHho
vvAa2nUjYMPsMw5i/wTGDuaroMj1uQqtFBwwmNjwRzIooqiA0D+B8TgY/lYk
N1IujyKEhX5OvcdBg3HAKb20KyhZTD6b9x0OBhUecvRwSqNvWR4ff7/Gwevg
+veLiRIoUYpncNUPB/5uKrwsOhfRx98WFq6eONgH3QMtKWeRgX/+8p8XOBAV
f8X14vhpJLo7mC/FBQe20/4LL5YE0RmU2GbrgIMiIbWfVrRjiEvo6tMIOxzI
r6+xHbtzFN16fevguDUO3vKI0xalOJFtY1qtoSUOEpXyMlfjDqCy8tmwbXMc
kPipQbETbCjEOTOs4yEOWFo4LuyyZ0R9vy51N5rhIFiXHK7RSIciBgj3Z01w
oGuZxCWWuy5/TyBMVdIYB7zxBgVbgivydziUo3ONcJDZJapplEWVL+ov0Ltl
iIPCfxtWhIuT8g9MzaO4DXDAMWNoaaU7KB91q+PugXs46Ftg1P6u0i3/vFD4
w0V9HDx8k4AWouvkZX8HeLzUw8EeZgvZS/JF8nKNxMUVXRy0n7tFkWdOlD/x
h7z+HtN33W/9MfLwkFd3lkg3w7Tlk03NOUcFeWM5xbn/3S+wvPKpE93frF7T
vNXhiml/TT43+VmLGoOSZ7caMJ01lf+LWTqsJsI9xVoWW6+9BOYLNT/VuLbE
Hx/C9HvDFcW/tIoahokd80wsvq86xcQK05aaSQXly4lY/Gb6l01OBAzUuObm
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

     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-2.9999970785883785`, 
   1.4999987569870137`}, {-2.598066958409383, 2.5980685009085818`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5750304489490347`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["We do get the same pair of curves.", "Text",
 CellChangeTimes->{{3.575030625054722*^9, 3.575030635823185*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 StyleBox["c:",
  FontWeight->"Bold"],
 " Plot the cycloid and its evolute over the interval (0,6\[Pi])"
}], "Text",
 CellChangeTimes->{{3.560981445287827*^9, 3.560981547234734*^9}, {
  3.560981995874037*^9, 3.560982026867271*^9}, {3.560983549492565*^9, 
  3.5609835538246737`*^9}},
 FontWeight->"Plain",
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d1cyc", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"vcyc", "'"}], "[", "t", "]"}], 
   RowBox[{
    RowBox[{"ucyc", "'"}], "[", "t", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2cyc", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vcyc", "''"}], "[", "t", "]"}], 
     RowBox[{
      RowBox[{"ucyc", "'"}], "[", "t", "]"}]}], "-", 
    RowBox[{
     RowBox[{
      RowBox[{"vcyc", "'"}], "[", "t", "]"}], 
     RowBox[{
      RowBox[{"ucyc", "''"}], "[", "t", "]"}]}]}], 
   SuperscriptBox[
    RowBox[{
     RowBox[{"ucyc", "'"}], "[", "t", "]"}], "3"]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"acyc", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"d1cyc", "[", "t", "]"}]}], "-", 
    SuperscriptBox[
     RowBox[{"d1cyc", "[", "t", "]"}], "3"], "+", 
    RowBox[{
     RowBox[{"d2cyc", "[", "t", "]"}], 
     RowBox[{"ucyc", "[", "t", "]"}]}]}], 
   RowBox[{"d2cyc", "[", "t", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcyc", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"d1cyc", "[", "t", "]"}], "2"], "+", 
    RowBox[{
     RowBox[{"d2cyc", "[", "t", "]"}], 
     RowBox[{"vcyc", "[", "t", "]"}]}]}], 
   RowBox[{"d2cyc", "[", "t", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ucyc", "[", "t_", "]"}], ":=", 
  RowBox[{"t", "-", " ", 
   RowBox[{"Sin", "[", "t", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vcyc", "[", "t_", "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{"Cos", "[", "t", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ucyc", "[", "t", "]"}], ",", 
        RowBox[{"vcyc", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"acyc", "[", "t", "]"}], ",", 
        RowBox[{"bcyc", "[", "t", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"6", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.575030661653474*^9, 3.57503069766217*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
pbhYKtCh+AueWtu4R/nz3i8epUP93ncf9eFuNEn4/cCeDq2+v8wdh/voz7R2
6Rt0SKe66rMkbvMUHvsv9+mQ7neHp0/xfATETW46ZdGhYZXwZzN4vrTcsRTb
7+nQ08WCNl7cj3WlphK76JDfcpqMBD5fp9HLDAr/6BDtgts7ZrwelL2Z5g3k
9Gjk6q1b3Xi9eH7JZdvz0iOfUm/vm3g9GTusZ5aV6dGRHqOsdbzeLe7kv/nP
4g6lrXmIr88Tkf3Ob3zpkdp708JsfP3mDwZ6oFh6VMFi/id1HgPX3aE6+4/0
6IRRAgj+w/Nj/dL9t5ceXa5MdsmfwiC2/gLj9Tl6NCUzucD5BwO9xqS7IfsY
ENFYTCJ0BIOYPoFYanUGpEF5YDT8Jwaq3sg20pABFeX2slzC92fhCffG0FsM
aK1GZ/wjvn95HyaoY/EMSIIh9LEGvr8nh8N3fF4zoKZR44EYfP8HvDdQdPjB
gGz2F6p2f8bPh0i7y18XGFCWF4fNp1r8fjNpTzxIy4i84vJVYqvx9sG0c7QH
GBG9wgnBT6UY0LPbsNxOZES8Wm82YjLw/bH4UOh7HiO6ablW6/oUg3uiD2yF
PzGio8er70vh97P/y5zpskVGZCo6Z6d5DwO/2Z/F+UZMKLVdSbXJG4NDMg8t
fzkzIQ3aN5ef4Od0UGmkLdNtJrSn15/q6CW8fn4nZW3zmNCSiGW+lg1+fy/w
SL6nYUbm/bd1k3QwEHp5/0GFEDM6MS0YWrMfg/OrXqkFB5kRh7Xa9w8KGMyp
CR0Iv8qM/GuYRwwEMKjestz53c6MNjQ/SNzfJkJnh5Fu/iQzmlq5wnV7CT+f
Q8MPXiWwoFQqo3qDv0TQZ75W16nMgkJG3F669BKB0zF8/EgiC1KI1z71t5AI
toQzjl/zWdC0ocS711lEuE33K/nUFxaEJqNe6acQwbr7dJfaGguS4YnxYA4j
Qk+gxr2vsqyoXJqifsSKCKNNTDGn77Oi4w1libmbu5D3oqHbNIkVicT5OQnN
7sLG+fusx7JY0YXggrveI7swdOG0gng1Kzo9Fm/2pmEXTnW63cz4x4o4fc6X
BcXtgrd7NevD43vQqbigrzlCuxBBv5dH1XIPqqALY1jdswvBIawHvzvtQUdt
pDsFKfD+rknR2zf3IEOt+Lg9v3fg2nIWGc2rPejuiDaHS/YOYFdTRmcJbGhy
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
2FA=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
6vcroqJOjv1bbI5V/wP+I2JY
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0., 18.84955592153876}, {-1.9999989482167198`, 
   1.9999989482167198`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.575030699291037*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["12 points", "Text",
 CellChangeTimes->{{3.577218425895093*^9, 3.57721843042162*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell["\<\
A good student would experiment in their sketch file with the evolutes of \
various hypotrochoids and epitrochoids. It turns out that the epitrochoids \
and hypotrochoids are similar ( in the geometric sense) to their evolutes.\
\>", "Text",
 CellChangeTimes->{{3.560983618122751*^9, 3.560983679908782*^9}, 
   3.5610717007749662`*^9, {3.561333310894306*^9, 3.56133331342901*^9}, {
   3.574879791902485*^9, 3.574879892514062*^9}, {3.574879969036191*^9, 
   3.574879971012396*^9}, {3.574880001941758*^9, 3.574880011125895*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["General Systems of Equations and Inequalities", "Section",
 CellChangeTimes->{{3.560783890041788*^9, 3.560783914766382*^9}}],

Cell[TextData[{
 "Read: ",
 ButtonBox["Logical Combinations of Equalities.",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/SolvingLogicalCombinationsOfEquations"]
}], "Text",
 CellChangeTimes->{{3.5607853237199163`*^9, 3.5607853600971327`*^9}, {
  3.560785392511322*^9, 3.560785392513187*^9}}],

Cell[TextData[{
 "A ",
 StyleBox["general system",
  FontSlant->"Italic"],
 " of equations and inequalities is a sequence of equalities and inequalities \
with connectives ",
 StyleBox["&&",
  FontWeight->"Bold"],
 " (and) or ",
 StyleBox["|| ",
  FontWeight->"Bold"],
 "(or). In versions of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " prior to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8 only ",
 StyleBox["Reduce ",
  FontWeight->"Bold"],
 "could handle general systems. In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 9 both ",
 StyleBox["Reduce",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " can handle such systems.\n\n"
}], "Text",
 CellChangeTimes->{{3.560785111851687*^9, 3.560785124248934*^9}, {
   3.560785278078271*^9, 3.560785282030508*^9}, {3.560785407037303*^9, 
   3.560785627602838*^9}, {3.560785660491612*^9, 3.56078578378407*^9}, 
   3.5607868378094893`*^9, {3.5607871188012466`*^9, 3.5607871238873*^9}, {
   3.560983931670033*^9, 3.560983945087442*^9}, {3.560983983016427*^9, 
   3.560984222599784*^9}, {3.560984255018105*^9, 3.560984312106984*^9}, 
   3.561333354443707*^9, {3.5615025728167048`*^9, 3.561502579444806*^9}, {
   3.5748800459512577`*^9, 3.5748800815767393`*^9}}],

Cell[CellGroupData[{

Cell["Solve and non-polynomial systems of equations:", "Subsubsection",
 CellChangeTimes->{{3.5610668452051907`*^9, 3.561066874157259*^9}}],

Cell["", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exptrig", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], 
    RowBox[{"Cos", "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], 
    RowBox[{"Sin", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.560787275752737*^9, 3.560787360298645*^9}, {
  3.560787451936738*^9, 3.560787453791607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"exptrig", "[", "x", "]"}], "\[Equal]", "2"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.560787130313621*^9, 3.560787218329494*^9}, {
  3.560787374830183*^9, 3.560787390915275*^9}, {3.56078746531138*^9, 
  3.5607874832471437`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "nsmet"}], "MessageName"], ":", 
  " ", "\<\"This system cannot be solved with the methods available to Solve. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560787221304381*^9, 3.560787394888782*^9, 
  3.56078747207267*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], "\[Equal]", "2"}], ",", "x"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.560787472076435*^9}]
}, Open  ]],

Cell[TextData[{
 "This is not surprising because ",
 StyleBox["exptrig ",
  FontWeight->"Bold"],
 " is transcendental"
}], "Text",
 CellChangeTimes->{{3.5607875907456617`*^9, 3.560787614696597*^9}, {
   3.560787690716537*^9, 3.56078776178157*^9}, 3.5613333643986187`*^9}],

Cell[TextData[{
 "Many transcendental equations for which ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " fails, can be successfully done with ",
 StyleBox["Solve ",
  FontWeight->"Bold"],
 "when restricted to an interval."
}], "Text",
 CellChangeTimes->{{3.5607883105687532`*^9, 3.560788462966309*^9}, 
   3.561333369843956*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"x", "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"exptrig", "[", "x", "]"}], "\[Equal]", "2"}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], "/", "4"}], "<", "x", "<", 
       RowBox[{"9", "/", "4"}]}]}], ",", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.560787226273737*^9, 3.560787244741728*^9}, {
  3.5607876199762707`*^9, 3.5607876629502993`*^9}, {3.560787797954939*^9, 
  3.560787817852219*^9}, {3.5754681407261257`*^9, 3.575468179329933*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Root", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "#1"], " ", 
         RowBox[{"Cos", "[", "#1", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "#1"], " ", 
         RowBox[{"Sin", "[", "#1", "]"}]}]}], "&"}], ",", 
      "0.416296802471156494818448074805160382374347600425726379807`20.\
602059874009306"}], "}"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "#1"], " ", 
         RowBox[{"Cos", "[", "#1", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "#1"], " ", 
         RowBox[{"Sin", "[", "#1", "]"}]}]}], "&"}], ",", 
      "2.198629013159279305497127436261860233823739463332458399236`20.\
30030829880314"}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.56078766767502*^9, {3.560787804646646*^9, 3.560787820946896*^9}, {
   3.575468141969243*^9, 3.575468180029462*^9}}]
}, Open  ]],

Cell["The general system does have solutions and they are exact:", "Text",
 CellChangeTimes->{{3.560787969397111*^9, 3.560787975109147*^9}, {
  3.5607880128902063`*^9, 3.56078802474271*^9}, {3.56078810605755*^9, 
  3.560788115994027*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.560788123442669*^9, 3.560788137189842*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.5607881395611258`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.560788143006366*^9, 3.560788158303411*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.560788160730278*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "sol", "]"}]], "Input",
 CellChangeTimes->{{3.5607884360418987`*^9, 3.5607884415123253`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.41629680247115647`", ",", "2.1986290131592794`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.560788443116938*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"exptrig", "[", "x", "]"}], "\[Equal]", "2"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], "/", "4"}], "<", "x", "<", 
       RowBox[{"9", "/", "4"}]}]}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5748787228770247`*^9, 3.574878809813518*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.41629680247115647`", ",", "2.1986290131592794`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.57487877770639*^9, 3.574878818289098*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"exptrig", "[", "x", "]"}], "-", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "3"}], "/", "4"}], ",", 
     RowBox[{"9", "/", "4"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.574878822213861*^9, 3.574878854422813*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
kDPaqThAPj7QyBaJcL5qYyS3hQ2Q/wNFphpg
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-3, 4], 
      Rational[9, 4]}, {-1.9763579602965093`, 2.810477356684559}}, {{-0.75, 
    2.25}, {-1.9763579602965093`, 2.810477356684559}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5748788564630203`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve and Reduce", "Subsection",
 CellChangeTimes->{{3.561006089462438*^9, 3.5610060976852217`*^9}}],

Cell[CellGroupData[{

Cell["General Systems of Inequalities", "Subsubsection",
 CellChangeTimes->{{3.561006126551285*^9, 3.561006145799045*^9}}],

Cell["Suppose we want to solve a general system of inequalities", "Text",
 CellChangeTimes->{{3.561059027637784*^9, 3.56105906002768*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "-", "9"}], ">", "0"}], " ", "&&", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "2"}], ")"}], "-", "5"}], "<", "1"}]}], " ", "||", 
    " ", 
    RowBox[{"1", "<", 
     RowBox[{"x", "-", "27"}], "<", "2"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.561059079988009*^9, 3.561059133780896*^9}, {
  3.56105917728395*^9, 3.561059210637473*^9}, {3.561059250854792*^9, 
  3.5610593210088787`*^9}, {3.561059815066141*^9, 3.56105982838861*^9}, {
  3.561059943165573*^9, 3.561059971857692*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "fulldim"}], "MessageName"], ":", 
  " ", "\<\"The solution set contains a full-dimensional component; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::fulldim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.561059975003207*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.561059975006301*^9}]
}, Open  ]],

Cell["\<\
We get a warning message. A Full dimensional solution in the one variable \
case is a solution that contain an open interval. In the n-variable case it \
is a solution that contains an open n-disk\
\>", "Text",
 CellChangeTimes->{{3.56105933645297*^9, 3.561059502867262*^9}, {
   3.5610599828525476`*^9, 3.561060103424779*^9}, {3.561332256914185*^9, 
   3.561332382479849*^9}, 3.574878965786298*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "-", "9"}], ">", "0"}], " ", "&&", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "2"}], ")"}], "-", "5"}], "<", "1"}]}], " ", "||", 
    " ", 
    RowBox[{"1", "<", 
     RowBox[{"x", "-", "27"}], "<", "2"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.561059079988009*^9, 3.561059133780896*^9}, {
  3.56105917728395*^9, 3.561059210637473*^9}, {3.561059250854792*^9, 
  3.5610593210088787`*^9}, {3.561059552382*^9, 3.561059563335684*^9}, {
  3.5610596162372704`*^9, 3.5610596169235*^9}, {3.561059647403425*^9, 
  3.56105970030931*^9}, {3.561059766425662*^9, 3.5610597672979383`*^9}, {
  3.56105984831733*^9, 3.561059914709902*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "<", 
   RowBox[{"-", "3"}]}], "||", 
  RowBox[{"3", "<", "x", "<", "8"}], "||", 
  RowBox[{"28", "<", "x", "<", "29"}]}]], "Output",
 CellChangeTimes->{
  3.561059565685957*^9, 3.561059620161743*^9, 3.561059774279284*^9, {
   3.561059898198542*^9, 3.561059918080937*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "+", 
       SuperscriptBox["y", "2"]}], "\[Equal]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{
      RowBox[{"x", "-", "y"}], "\[Equal]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.574880393861452*^9, 3.5748804686811237`*^9}, {
  3.574880738671673*^9, 3.574880740443565*^9}, {3.5748808098689623`*^9, 
  3.574880810996757*^9}, {3.574880852079575*^9, 3.574880855502412*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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

   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {Hue[0.67, 0.6, 0.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
        131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
        145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156}]},
      RowBox[{
        RowBox[{"x", "+", 
          SuperscriptBox["y", "2"]}], "\[Equal]", 
        FractionBox["1", "2"]}]],
     Annotation[#, $CellContext`x + $CellContext`y^2 == Rational[1, 2], 
      "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[{157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 
        169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
        183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 
        197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 
        211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
        225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 
        239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 
        253, 254}]},
      RowBox[{
        RowBox[{"x", "-", "y"}], "\[Equal]", 
        FractionBox["1", "3"]}]],
     Annotation[#, $CellContext`x - $CellContext`y == Rational[1, 3], 
      "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0UOUFQAAQNE/2bYn27bNya7JnOyabNu2bdu2bZ/2dVvcxVu/4NCwkJ5B
gUDgD38JiCAiEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJSkJJU
pCYNaUlHMOnJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlK
UZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHiHUpwENaURjmtCUZjSnBS1p
RWva0JZQ2tGeDnSkE53pQle60Z0e/J8YRi9604e+9KM/AxjIIAYzhKEMYzgj
CGckoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWs
YCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zg
JKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAl
r3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zT/QtXd1
        "]]},
      RowBox[{
        RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "3"]}], "\[Equal]", "1"}]],
     Annotation[#, $CellContext`x^2 + $CellContext`y^3 == 1, "Tooltip"]& ]}],
  AspectRatio->1,
  Frame->True,
  Method->{},
  PlotRange->{{-5, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.574880475286821*^9, 3.574880743221478*^9, 
  3.574880818274106*^9, 3.5748808599983807`*^9}]
}, Open  ]],

Cell[TextData[{
 "Query ",
 StyleBox["RegionPlot",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.5748805550363503`*^9, 3.574880596946576*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "+", 
      SuperscriptBox["y", "2"]}], "\[LessEqual]", 
     RowBox[{"1", "/", "2"}]}], "&&", " ", 
    RowBox[{
     RowBox[{"x", "-", "y"}], "\[LessEqual]", 
     RowBox[{"1", "/", "3"}]}], "&&", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "3"]}], "<", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.574880606904222*^9, 3.574880614362536*^9}, {
  3.574880651763349*^9, 3.5748806704313707`*^9}, {3.574880711094408*^9, 
  3.5748807128425007`*^9}, {3.574880801972493*^9, 3.57488080279631*^9}, {
  3.5748808731684093`*^9, 3.574880874135178*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
xjvceQ3/Bex4ycY=
   "], {{
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNl3mw12MUxt+35d7bqtRN3W4lqbRRqKRNexTtKaKENtUtLUqpEOrqSpZI
JZI2hVQqO2NfxozlH8YwhjG2Yca+e545H6M/nnvO9/2973nfc85zzvve5pPL
Rs6ulFJanFOqLDlQOEloJUwXqggFwmChl9BGKBOqC7WEtvxeKHQVugjNbE9Y
JNQQ6jK3tnCacKpQT5gpFGGrWKjD3AeFpcISYS5r/dsGZH1hHrKhUML6BsJd
wnqhVNglNEJfISxn7kWctZNwvTAmhe8r+bb/IzmXzzccHx2LA+xluzcJE4WL
hf3CbqGDcD5rTxDOEyYLLYVpwlShvTBIaE2cZxDrqsIs4lKN+NXCVhtiXICN
Evy9khgdI7Qjfo7zPcTLcZ5DzmoS02LmzSeOx7FPXeJ7gLjWZ24J/g4R+uBj
N3wyd87Ej0rEuJT5d5OPU4Q95KWp8LCwV+gsdGet43+rsDYFp3rgcwG/t8Z+
K/JTmXg7x42Fzcwvwodizt8Te45dubCaOI3Gn5OFx/DJcXiIMX+v4+z2x7zu
yPl3El/z+HJhEr4cEQ7j65PCE8Ih4UbhshTcv0SYgD2vGyucTjz7EdO+2PNe
Q/m23p9YOw5TsNWVNWcwvoCYOj4TiaNjuJBYFOJbH/y9WuidgjPNOFdTYtmL
eHZiH/++Q9guVLBnf/Z1fgagm6+ugRqcZRB589kHovtcg9lnWYqaaEDsh3DG
8SnqpyU2XZOuqdtT1Nxwzn4OObXtYSn40ZHY2ZcRzK2CT2fj1yhsFjE26qjx
C/jN+bmQc/XjTC3J7VjG7xTu4Ls3Z6lNLCdwlo0p+kwV7I1mbVfy2AWfJpIv
18ikFNwYzm8er6o+fX+O/Dk2lwr6TKtScNG8cX+bgm3HdSqx3cQ5ppM/j7dI
0auv5sxr+b2A+e5N5tK9KWpsJuumsXZ2ip5VjTnWzbErWOuetoV1zuF9fJeh
z2Gta9C9yH3n0RQ9zXW8NUWPc+/alqJn1cP2As7mPRey7yL8sS81+Pa+97Nn
Lfa8in238tt/98yi9P895Zp1jbtnuG/WRS4lntegH5uiR7r3NUKuEJrw+zLm
F7Pe+rXMKUFex3xzxHfQ8Sn6z3LGPbaS8RvQzfPt2LKdYfzm8Xac22d+JMWd
6u9bUuS+BXmsYK3nlOOL62kNNjx2M+OO/wPkaQe2zhJu46w+p/njPu68T+fb
elv0AmyXY385a0uRtuWea767zpunqAPXmOvL94nvFfci1/Z69PX8Zn1fCg5t
4LyW9cml+7b54zowvysT843op2CnFDue77vVfcr8L8Qvz3ctz8COx2Yyp4h9
t7GX+X5fCr7NQTcXzdt7WVfGvOp8b2H+fOzMY465WpPvB/DL9WEezwWeUwu5
lfmb2avwqLj4bO7Zvnvct83VB8m15SPo5td2cl2BXoLcwXgpOfBd/LhwMMXd
7Pt0N+O+8/eQt9381oEY7yTOj/NbQ9bswvYh5nvsFvatYM89jHdmj6b4aA7U
Qe7D/ly+rZfjo+tiUoqe25lv+7+Es+3D3l7muCcf4du6e9d+fNnPd0P82I8+
j3Hfue4DB8jdQfRGyIPMn6WmPjNH/jdIfpail8+VXpajx/keKOAumC45LcMv
ya9T3Dtfmgs5eH2F5IwcfPlRGJ7jberY+j47mRgfQndcDxPbJ9FPRx5Bf4Lf
rK+VvX9S3LF7mWMbY5nnOes0p0oOznwizM7Ri1tIfpvirXGd9GtzvK+vkvw0
Ra+9UvqLKfhsP+bhy3zJ98jpNdLfSNEnVzoeOe6B6yUH5rgnD8Izx/k7YUGO
3rBUclmO3jpW8vwc9+sayZ9SvHfqSj82x1tgi+SHKd4+7rnu0e4hKzS+PMe7
zzlcTB4XSb6cou52c4ZdxPMQcT5MPP39jNA2R1+/WLJzjnfVMMmTctz/90j+
nHiPS28lnCu9juRTnNnc+QH+TNL4GcI46a8I78PJCo09neKNdqv0l1K8ZZ4X
GuTo4X8Iz6V4u23S2F8p3pTOybvkZVWOnDlfjSVLc9wn2fHIcZdslPwtxdvw
LnMzx/uppuSrKbjxkfBninujtn3N8c7pqT9fwe2PhUY53m5fCEty3KPjcuTV
OTX3q8P/0ZLd8L2y5Pcp7nn70TCHL+bgN/CwmsZOyHGnlOTgk7nUxNzM0Rub
S76e4u5znJ5NESvXZTNqc7NkYY53/DvCifjSNEcOHP/PU9R5e36vzZzfiZdj
9UKKGnN9TZWckuP9dZl5muPN1UnytRTvSxtwLp3Hp+Cx+eAYr6MGR+bwzX5N
lLwkx9tujOQo4UTpF0lOyPG+/BWumCdvCuNzvJPaeyzHW7uX98zx9v0Fjpqf
HXLM85zWOfhqrjoPA3Lkortkjxzv7xGSxTnu2b6OZY63rWvGNeye+ZZwQY53
gvN2Vo7c9cux3mtPleyf455v531yvKldT2dTU10k307x/8X6HLw0J523QeTu
jhz7ea/bpd+Z441ybo54OVauraFwbHCO+NaAm+Xw0/x1jzaHP0jRR9xDhuSw
ZTt/U2Pm5OocPDPHinLwyef5F/IUmyQ=
         "]], PolygonBox[CompressedData["
1:eJwtlVePllUUhc+mJJRJ6AEjShna0LvSi0gfukgvQ9WJQ5EeylAEGQghtHDF
BVf8CQU0mlACSBELICW0mJAgIDXAs7LOxZO9zvu+3yn7rL2/ZiVLJpRVSikt
gyowJFL6LKy/gKboqjAIPQpGoIdDTfSX0Ab9lFgCY6AW49ZQjCakn2ERooxY
HRqifyL2h+EwnfEW2IGeBX/Dn/A5tIbTsI/3+4gfwR24C+1hI9xKXmgAYR10
QneHyegD8C88gNHQGf6HOjojsZf2jB4b3rv2+wz+UB7gU/gdaod1SzgO8xmX
EqvCDPQ54hxYAC+hPs+GEfvAD1CP8VBibzgDXSPnFlaij8IxPYcTOUfKTV/4
TXMznkIshGnhnClXzaAJ+mNomHxH55XH8N00Vx7R5bAd3Q0moifl+VroN+gL
xIUwE+aG19Rai6Em412wJz/7BT5kPDI555vQZ5WT5DUaMO4A47OfhqJnhnPz
PYwL57Rl9ozWHsmzuXkPU7W3cC40Z5HuEuZlf/0HW8Nz9YBfoXL4bPXkybAH
dZf6zansYXl3EmxGPybOTvbcO/gHRmRPfsL7nuHcTYAP0B1hYv5mI3pD+O62
QQV6Z9ibWzSn9qZv0HWzdx/Kl8keXhX2sLy7HtoyfkT8DsbKw4zv57nKoTHj
SrA7OefN0YXQRXevnGvt8Fq74BJ8xXgpsUB3gL6nc8NAaMX4YnJ+irNX/0qu
NXn2IOMDYW/th7XoNeHcroCl6GWwNrkHlIVrXLW9WudQ7sN7qYDD6EPhWjyY
XCt6Jj0HjqCrh89yGJaEa1q1rDUWML6hvME3cBlKebacWEseRd/Ma+vM3+pd
+Oz6pgR9jbgSvoYrmid8FtWMvF0Qzo08Pi/8G32rGu+Nbgfjkj09Wl4K145q
qBt6fzhX+qZXuGYK83v1khfJta+eUpd3V+Xz5B4k7/eHGck1IC+sD3tLnhgW
9ry8PhieyLvh2lQPVG/5MXtHPaYR4+vyFfRL9vrr5F4izw/k/eBwrctD6rXP
k3uheq5y9Sq5dyln8p7uVHcpD6qXVgvvRT31jfLGeG9eU2cryv10an53MrlX
6hvd5du8N93pwvAd6271H9FZ3g7X6vRk76omyrOHB6D7hXu5cnY7uaZUS6o5
9X7Nod/qP6BvuKZVy9OSa7lPWKuma4Q9KO+pRtWLV4S9pZ78Hu7HuEs=
         
         "]]}]}, {}, {}, {}, {}}, 
    {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwt09VWFGAUgNHB7m5FRQW7OzEBW7FbsRO7FRVMFLvb57C7u7u7W7G2a3Gx
13fO+WeuBkJiYqPHBAUCgedc5zvLHPZobt2r5fStztTZzOKUvZo2pxkdyUtF
KlCP8lRnNWtZwxnf66m9mMdcPrgls5/89oO6XP/qPQqaK1GfBtSmFue89dWa
tCSKaAqRwFjGEcsDnw3oCo4YC2sRUjGfIBYQzEIWMYWHPjtZH+kTNpof6yf6
mQdwwdxf69CG1rSlC53oTF0yk0gWjvvOSk3DU/N0faYzdAmLCeGk2yp9oVk1
E9vISAlK8sbbaxqbm9KE8/ZW2ohwGvLSbYe+Svm9M5i3kp5IPrrFawR96M1Z
tw26jvVUpgZVqMoJ78U1LTtJRzGKcszbFUabRzGNqRx1S63vtYXOIY7T9h7a
nXfmSbqLiVy2j9QRTGA8h90uMdw8jPvm/3/Mh3SoDmEwd+1/2GL+rQX0jv4i
yXxA8+k+HaQDieG2/SebzT80j97U7XpLb/CNTfavmlNzcc1cVrvSjeyUJpQw
LnovpdloR3vK8Nm9g17VHLpbl+qXlP/Nf8rkcoA=
      "]]}}],
  AspectRatio->1,
  Frame->True,
  Method->{"TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-5, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.57488067325902*^9, 3.574880715484613*^9, 
  3.5748808765944633`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "+", 
      SuperscriptBox["y", "2"]}], "\[LessEqual]", 
     RowBox[{"1", "/", "2"}]}], "&&", " ", 
    RowBox[{
     RowBox[{"x", "-", "y"}], "\[LessEqual]", 
     RowBox[{"1", "/", "3"}]}], "&&", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "3"]}], "<", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.57488017854405*^9, 3.5748803012105017`*^9}, {
  3.574880344661703*^9, 3.5748803613569202`*^9}, {3.574880760080413*^9, 
  3.574880792443838*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"7", "+", 
         RowBox[{"6", " ", "#1"}], "-", 
         RowBox[{"28", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "4"]}]}], "&"}], ",", "1"}], "]"}], "<", "x", 
     "\[LessEqual]", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox["15"]}], ")"}]}]}], "&&", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "x"}]}]], 
       SqrtBox["2"]]}], "\[LessEqual]", "y", "<", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox["15"]}], ")"}]}], "<", "x", "\[LessEqual]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"7", "+", 
         RowBox[{"6", " ", "#1"}], "-", 
         RowBox[{"28", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "4"]}]}], "&"}], ",", "2"}], "]"}]}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"3", " ", "x"}]}], ")"}]}], "\[LessEqual]", "y", "<", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"7", "+", 
         RowBox[{"6", " ", "#1"}], "-", 
         RowBox[{"28", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "4"]}]}], "&"}], ",", "2"}], "]"}], "<", "x", 
     "<", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["15"]}], ")"}]}]}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"3", " ", "x"}]}], ")"}]}], "\[LessEqual]", "y", 
     "\[LessEqual]", 
     FractionBox[
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"2", " ", "x"}]}]], 
      SqrtBox["2"]]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["15"]}], ")"}]}]}], "&&", 
    RowBox[{"y", "\[Equal]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["15"]}], ")"}]}]}], ")"}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.574880303456307*^9, 3.5748803659250937`*^9, 
  3.574880763996167*^9, 3.574880893251978*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reduce and Parametrized Solutions", "Subsubsection",
 CellChangeTimes->{{3.561006164655739*^9, 3.5610061819358892`*^9}}],

Cell[TextData[{
 "We have seen that most Transcendental equations cannot be solved by ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 ",",
 StyleBox["NSolve",
  FontWeight->"Bold"],
 " or ",
 StyleBox["Reduce. ",
  FontWeight->"Bold"],
 "Read S. example 10 and problems 6.6 and 6.7. In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8 for transcendental equations with parametrized solutions  that is the \
output from ",
 StyleBox["Reduce ",
  FontWeight->"Bold"],
 "contains ",
 StyleBox["C[1],C[2]",
  FontWeight->"Bold"],
 "...",
 StyleBox["C[n]",
  FontWeight->"Bold"],
 " we can use ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " on an interval to find all solutions in that interval."
}], "Text",
 CellChangeTimes->{{3.5610601316082363`*^9, 3.5610602190359*^9}, {
   3.561060256869247*^9, 3.561060335120413*^9}, {3.561060380010085*^9, 
   3.561060598025341*^9}, 3.5613333850652103`*^9, 3.574881007516107*^9, {
   3.574881131365357*^9, 3.574881174855298*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", "x"}], "]"}], "+", 
      RowBox[{"1", "/", "2"}]}], "\[Equal]", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}]}], ",", "x"}], "]"}],
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.561060606270718*^9, 3.561060687752026*^9}, {
  3.561061003966943*^9, 3.561061008650725*^9}},
 FontWeight->"Plain"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], ":", 
  " ", "\<\"Inverse functions are being used by \[NoBreak]\\!\\(Solve\\)\
\[NoBreak], so some solutions may not be found; use Reduce for complete \
solution information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.561060677838708*^9, 3.56106069062262*^9}, 
   3.561061027410816*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"24", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"80", " ", 
           SuperscriptBox["#1", "4"]}], "+", 
          RowBox[{"64", " ", 
           SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"24", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"80", " ", 
           SuperscriptBox["#1", "4"]}], "+", 
          RowBox[{"64", " ", 
           SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", "#1"}], "+", 
           RowBox[{"24", " ", 
            SuperscriptBox["#1", "2"]}], "-", 
           RowBox[{"80", " ", 
            SuperscriptBox["#1", "4"]}], "+", 
           RowBox[{"64", " ", 
            SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"24", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"80", " ", 
           SuperscriptBox["#1", "4"]}], "+", 
          RowBox[{"64", " ", 
           SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", "#1"}], "+", 
           RowBox[{"24", " ", 
            SuperscriptBox["#1", "2"]}], "-", 
           RowBox[{"80", " ", 
            SuperscriptBox["#1", "4"]}], "+", 
           RowBox[{"64", " ", 
            SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", "#1"}], "+", 
           RowBox[{"24", " ", 
            SuperscriptBox["#1", "2"]}], "-", 
           RowBox[{"80", " ", 
            SuperscriptBox["#1", "4"]}], "+", 
           RowBox[{"64", " ", 
            SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
       "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.561060677932599*^9, 3.561060690632031*^9}, 
   3.561061027418227*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", "x"}], "]"}], "+", 
      RowBox[{"1", "/", "2"}]}], "\[Equal]", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}]}], ",", "x"}], "]"}],
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.561060606270718*^9, 3.5610607210832853`*^9}, {
  3.561060968649701*^9, 3.561060975220086*^9}},
 FontWeight->"Plain"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "ifun"}], "MessageName"], ":", 
  " ", "\<\"Inverse functions are being used by \[NoBreak]\\!\\(NSolve\\)\
\[NoBreak], so some solutions may not be found; use Reduce for complete \
solution information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \\\"NSolve::ifun\\\"]\\)\
\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.561060723324712*^9, 3.561060976925811*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1.997524939325018`"}], "-", 
      RowBox[{"0.28296028964833964`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1.997524939325018`"}], "+", 
      RowBox[{"0.28296028964833964`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.8162797753262396`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.5673884763800271`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.2416687122361831`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.002272465360065`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.5610607233309*^9, 3.561060976932465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", "x"}], "]"}], "+", 
      RowBox[{"1", "/", "2"}]}], "\[Equal]", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}]}], ",", "x"}], "]"}],
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.561060606270718*^9, 3.5610607523548326`*^9}, {
  3.561060947203753*^9, 3.5610609532660627`*^9}},
 FontWeight->"Plain"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], "]"}]}], 
      "+", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"C", "[", "1", "]"}]}]}]}], "||", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], "]"}]}], 
      "+", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"C", "[", "1", "]"}]}]}]}], "||", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], "]"}]}], 
      "+", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"C", "[", "1", "]"}]}]}]}], "||", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "4"}], "]"}], "]"}]}], 
      "+", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"C", "[", "1", "]"}]}]}]}], "||", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "5"}], "]"}], "]"}]}], 
      "+", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"C", "[", "1", "]"}]}]}]}], "||", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "6"}], "]"}], "]"}]}], 
      "+", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"C", "[", "1", "]"}]}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.561060761006679*^9, 3.5610609556873493`*^9}]
}, Open  ]],

Cell[TextData[{
 "But if we use a system that asks for the solutions contained in an interval \
",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " will give complete answers"
}], "Text",
 CellChangeTimes->{{3.5610607882082443`*^9, 3.5610608225069847`*^9}, {
  3.561060852851892*^9, 3.561060912796329*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", "x"}], "]"}], "+", 
      RowBox[{"1", "/", "2"}]}], "\[Equal]", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}]}], "&&", 
    RowBox[{
     RowBox[{"-", "8"}], "<", "x", "<", "15"}]}], ",", "x"}], "]"}]], "Input",\

 CellChangeTimes->{{3.5610609219784813`*^9, 3.561060937391554*^9}, {
  3.5610610664232264`*^9, 3.561061131023004*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"2", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", "#1"}], "+", 
           RowBox[{"27", " ", 
            SuperscriptBox["#1", "2"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["#1", "3"]}], "-", 
           RowBox[{"33", " ", 
            SuperscriptBox["#1", "4"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"2", " ", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"2", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", "#1"}], "+", 
           RowBox[{"27", " ", 
            SuperscriptBox["#1", "2"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["#1", "3"]}], "-", 
           RowBox[{"33", " ", 
            SuperscriptBox["#1", "4"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"2", " ", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"2", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", "#1"}], "+", 
           RowBox[{"27", " ", 
            SuperscriptBox["#1", "2"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["#1", "3"]}], "-", 
           RowBox[{"33", " ", 
            SuperscriptBox["#1", "4"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"2", " ", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"2", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", "#1"}], "+", 
           RowBox[{"27", " ", 
            SuperscriptBox["#1", "2"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["#1", "3"]}], "-", 
           RowBox[{"33", " ", 
            SuperscriptBox["#1", "4"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           SuperscriptBox["#1", "6"]}], "&"}], ",", "4"}], "]"}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "4"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"2", " ", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"4", " ", "#1"}], "+", 
            RowBox[{"27", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "4"}], "]"}], 
        "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.561061133504959*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", "x"}], "]"}], "+", 
      RowBox[{"1", "/", "2"}]}], "\[Equal]", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}]}], "&&", 
    RowBox[{
     RowBox[{"-", "8"}], "<", "x", "<", "15"}]}], ",", "x"}], "]"}]], "Input",\

 CellChangeTimes->{{3.5610609219784813`*^9, 3.561060937391554*^9}, {
  3.5610610664232264`*^9, 3.5610611526892033`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "7.099465082505826`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "5.715796830799559`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "5.0415165949434035`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.2809128418195215`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.8162797753262396`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.5673884763800271`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.2416687122361831`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.002272465360065`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "5.466905531853347`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "6.850573783559613`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "7.52485401941577`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "9.285457772539651`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "11.750090839032934`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "13.1337590907392`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "13.808039326595356`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.561061155204343*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", "x"}], "]"}], "+", 
      RowBox[{"1", "/", "2"}]}], "\[Equal]", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}]}], "&&", 
    RowBox[{
     RowBox[{"-", "8"}], "<", "x", "<", "15"}]}], ",", "x"}], "]"}]], "Input",\

 CellChangeTimes->{{3.561061169400804*^9, 3.561061191771714*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", 
   RowBox[{"2", " ", 
    RowBox[{"ArcTan", "[", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"4", " ", "#1"}], "+", 
         RowBox[{"27", " ", 
          SuperscriptBox["#1", "2"]}], "-", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"33", " ", 
          SuperscriptBox["#1", "4"]}], "-", 
         RowBox[{"12", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], "]"}]}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"33", " ", 
           SuperscriptBox["#1", "4"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], "]"}]}]}]}], 
  "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{
    RowBox[{"2", " ", "\[Pi]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"33", " ", 
           SuperscriptBox["#1", "4"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], "]"}]}]}]}], 
  "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{
    RowBox[{"4", " ", "\[Pi]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"33", " ", 
           SuperscriptBox["#1", "4"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], "]"}]}]}]}], 
  "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"2", " ", 
    RowBox[{"ArcTan", "[", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"4", " ", "#1"}], "+", 
         RowBox[{"27", " ", 
          SuperscriptBox["#1", "2"]}], "-", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"33", " ", 
          SuperscriptBox["#1", "4"]}], "-", 
         RowBox[{"12", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], "]"}]}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"33", " ", 
           SuperscriptBox["#1", "4"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], "]"}]}]}]}], 
  "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{
    RowBox[{"2", " ", "\[Pi]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"33", " ", 
           SuperscriptBox["#1", "4"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], "]"}]}]}]}], 
  "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{
    RowBox[{"4", " ", "\[Pi]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"33", " ", 
           SuperscriptBox["#1", "4"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], "]"}]}]}]}], 
  "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"2", " ", 
    RowBox[{"ArcTan", "[", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"4", " ", "#1"}], "+", 
         RowBox[{"27", " ", 
          SuperscriptBox["#1", "2"]}], "-", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"33", " ", 
          SuperscriptBox["#1", "4"]}], "-", 
         RowBox[{"12", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], "]"}]}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"33", " ", 
           SuperscriptBox["#1", "4"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], "]"}]}]}]}], 
  "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{
    RowBox[{"2", " ", "\[Pi]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"33", " ", 
           SuperscriptBox["#1", "4"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], "]"}]}]}]}], 
  "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{
    RowBox[{"4", " ", "\[Pi]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"33", " ", 
           SuperscriptBox["#1", "4"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], "]"}]}]}]}], 
  "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"2", " ", 
    RowBox[{"ArcTan", "[", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"4", " ", "#1"}], "+", 
         RowBox[{"27", " ", 
          SuperscriptBox["#1", "2"]}], "-", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"33", " ", 
          SuperscriptBox["#1", "4"]}], "-", 
         RowBox[{"12", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         SuperscriptBox["#1", "6"]}], "&"}], ",", "4"}], "]"}], "]"}]}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"33", " ", 
           SuperscriptBox["#1", "4"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          SuperscriptBox["#1", "6"]}], "&"}], ",", "4"}], "]"}], "]"}]}]}]}], 
  "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{
    RowBox[{"2", " ", "\[Pi]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"4", " ", "#1"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["#1", "2"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"33", " ", 
           SuperscriptBox["#1", "4"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          SuperscriptBox["#1", "6"]}], "&"}], ",", "4"}], "]"}], 
      "]"}]}]}]}]}]], "Output",
 CellChangeTimes->{3.561061194233416*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.561061208425825*^9, 3.561061211593657*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "0.8162797753262396`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "7.099465082505826`"}]}], "||", 
  RowBox[{"x", "\[Equal]", "5.466905531853347`"}], "||", 
  RowBox[{"x", "\[Equal]", "11.750090839032932`"}], "||", 
  RowBox[{"x", "\[Equal]", "0.5673884763800271`"}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "5.715796830799559`"}]}], "||", 
  RowBox[{"x", "\[Equal]", "6.850573783559613`"}], "||", 
  RowBox[{"x", "\[Equal]", "13.133759090739199`"}], "||", 
  RowBox[{"x", "\[Equal]", "1.2416687122361834`"}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "5.041516594943403`"}]}], "||", 
  RowBox[{"x", "\[Equal]", "7.52485401941577`"}], "||", 
  RowBox[{"x", "\[Equal]", "13.808039326595356`"}], "||", 
  RowBox[{"x", "\[Equal]", "3.002272465360065`"}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "3.280912841819521`"}]}], "||", 
  RowBox[{"x", "\[Equal]", "9.285457772539651`"}]}]], "Output",
 CellChangeTimes->{3.561061213024803*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Solve",
  FontWeight->"Bold"],
 " has the slight virtue of giving the solutions in order. It also gives the \
solutions as rules so that they can be substituted into other expressions. \
But, query ",
 StyleBox["ToRules",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.561061307281983*^9, 3.561061446463338*^9}},
 FontWeight->"Plain"],

Cell[TextData[{
 StyleBox["Problem4: ",
  FontWeight->"Bold"],
 "Go back and use ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " to do problem 2 of lesson 4. That is: ",
 "Show that there are 11 solutions to the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{
       SuperscriptBox["cos", "2"], "(", 
       RowBox[{"2", "x"}], ")"}]}], "-", 
     RowBox[{"Sin", "(", 
      RowBox[{"x", "/", "2"}], ")"}]}], "=", "1"}], TraditionalForm]]],
 " in the interval [0,3\[Pi]]. This problem is subtler than it looks"
}], "Text",
 CellChangeTimes->{{3.574525518838963*^9, 3.574525616905323*^9}, 
   3.574870570249591*^9, {3.57487067962157*^9, 3.5748707198696003`*^9}, {
   3.574870751951727*^9, 3.574870753898118*^9}, {3.5748715091867027`*^9, 
   3.574871523505608*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"exp1", "=", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", "x"}], "]"}], "2"]}], "-", 
    RowBox[{"Sin", "[", 
     FractionBox["x", "2"], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.57546949691529*^9, 3.575469504484429*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"exp1", "\[Equal]", "1"}], " ", "&&", " ", 
    RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
     RowBox[{"3", "\[Pi]"}]}]}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{
  3.575468797661188*^9, {3.575468829299448*^9, 3.5754688639845657`*^9}, {
   3.575468896387601*^9, 3.5754688982748747`*^9}, {3.575469144379442*^9, 
   3.575469151795199*^9}, {3.57546950987407*^9, 3.57546951075991*^9}, {
   3.5754708157014027`*^9, 3.575470816642017*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"1", "-", 
            RowBox[{"12", " ", "#1"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            RowBox[{"40", " ", 
             SuperscriptBox["#1", "3"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["#1", "4"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"4", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"12", " ", "#1"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["#1", "2"]}], "+", 
           RowBox[{"40", " ", 
            SuperscriptBox["#1", "3"]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["#1", "4"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"4", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"12", " ", "#1"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["#1", "2"]}], "+", 
           RowBox[{"40", " ", 
            SuperscriptBox["#1", "3"]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["#1", "4"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           SuperscriptBox["#1", "6"]}], "&"}], ",", "4"}], "]"}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"4", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"12", " ", "#1"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["#1", "2"]}], "+", 
           RowBox[{"40", " ", 
            SuperscriptBox["#1", "3"]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["#1", "4"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           SuperscriptBox["#1", "6"]}], "&"}], ",", "5"}], "]"}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"4", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"12", " ", "#1"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["#1", "2"]}], "+", 
           RowBox[{"40", " ", 
            SuperscriptBox["#1", "3"]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["#1", "4"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           SuperscriptBox["#1", "6"]}], "&"}], ",", "6"}], "]"}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"8", " ", "#1"}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"48", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["#1", "4"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"8", " ", "#1"}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["#1", "2"]}], "-", 
            RowBox[{"48", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["#1", "4"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], 
        "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"4", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "+", 
           RowBox[{"8", " ", "#1"}], "-", 
           RowBox[{"13", " ", 
            SuperscriptBox["#1", "2"]}], "-", 
           RowBox[{"48", " ", 
            SuperscriptBox["#1", "3"]}], "-", 
           RowBox[{"13", " ", 
            SuperscriptBox["#1", "4"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           SuperscriptBox["#1", "6"]}], "&"}], ",", "5"}], "]"}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"4", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "+", 
           RowBox[{"8", " ", "#1"}], "-", 
           RowBox[{"13", " ", 
            SuperscriptBox["#1", "2"]}], "-", 
           RowBox[{"48", " ", 
            SuperscriptBox["#1", "3"]}], "-", 
           RowBox[{"13", " ", 
            SuperscriptBox["#1", "4"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           SuperscriptBox["#1", "6"]}], "&"}], ",", "6"}], "]"}], "]"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5754688648816233`*^9, 3.575468900589999*^9, 
  3.575469154841751*^9, 3.575469512250495*^9, 3.575470817877589*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.5754688648816233`*^9, 3.575468900589999*^9, 
  3.575469154841751*^9, 3.575469512250495*^9, 3.575470817882*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "I\[CloseCurlyQuote]ve got 12 solutions because ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " counts roots with multiplicity and \[Pi] is a double root. Hence we \
actually have 11 unique solutions to our equation."
}], "Text",
 CellChangeTimes->{{3.5754696989597197`*^9, 3.575469756802957*^9}, {
  3.5754697923837976`*^9, 3.575469819011136*^9}, {3.5754706458809013`*^9, 
  3.575470647060853*^9}, {3.5755840452337418`*^9, 3.575584149329808*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["12 points", "Text",
 CellChangeTimes->{{3.577218425895093*^9, 3.57721843042162*^9}},
 Background->RGBColor[1, 0.9, 0.8]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindRoot", "Subsection",
 CellChangeTimes->{{3.560788739418963*^9, 3.560788743720243*^9}}],

Cell[TextData[{
 "Query ",
 StyleBox["FindRoot",
  FontWeight->"Bold"],
 ". Read S 6.2. You may skip examples 20 and 21 but you should pay particular \
attention to problem 23. ",
 StyleBox["FindRoot ",
  FontWeight->"Bold"],
 " has two purposes: The first is to solve systems of equations that involve \
transcendental functions and the second is to find a numerical solution of a \
system of equations that lie near a given point. When we use ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " we need to guess an interval or region in which the roots lie and this may \
sometimes be difficult."
}], "Text",
 CellChangeTimes->{{3.56106588956606*^9, 3.561065951349077*^9}, {
   3.561066052560816*^9, 3.56106608640729*^9}, {3.561066155691975*^9, 
   3.5610662321272173`*^9}, {3.561066276705027*^9, 3.561066279809149*^9}, {
   3.561066322258651*^9, 3.561066478415749*^9}, {3.561066629703155*^9, 
   3.5610667810904207`*^9}, 3.561066954769658*^9, {3.561332511323564*^9, 
   3.5613326144138327`*^9}, 3.5613326445108957`*^9, {3.574872684508363*^9, 
   3.574872708651726*^9}}],

Cell[TextData[{
 StyleBox["Problem5",
  FontWeight->"Bold"],
 " An horizontal steel rod 1 mile long, at ground level, and pinned at its \
ends is heated, expands by 1 foot, and bows up into a circular arc. How high \
is the center of the circular are above the ground. The following diagram may \
help. As you will see later the diagram is very not to scale."
}], "Text",
 CellChangeTimes->{{3.5610669934896107`*^9, 3.5610669957296753`*^9}, {
  3.5610671416707487`*^9, 3.561067301948104*^9}, {3.561067413627067*^9, 
  3.561067432049165*^9}, {3.561067946643877*^9, 3.561067989557863*^9}, {
  3.56106847495772*^9, 3.5610685076787977`*^9}, {3.5613324185590067`*^9, 
  3.561332419479233*^9}, {3.574872719699986*^9, 3.574872720188208*^9}, {
  3.574873770929347*^9, 3.574873771785074*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{0, 0}, {0.9270509831248424, 
     2.8531695488854605`}, {-0.927050983124842, 2.853169548885461}, {0, 0}}], 
   LineBox[{{0, 0}, {0, 2.8531695488854605`}}], 
   {RGBColor[1, 0, 0], LineBox[{{0, 2.8531695488854605`}, {0, 3}}]}, 
   {GrayLevel[0], 
    CircleBox[{0, 0}, 3, {1.2566370614359172`, 1.8849555921538759`}], 
    InsetBox["\<\"O\"\>", NCache[{0, Rational[-1, 10]}, {0, -0.1}]], 
    InsetBox["\<\"B\"\>", {1.0270509831248424`, 2.8531695488854605`}], 
    InsetBox["\<\"C\"\>", 
     NCache[{Rational[1, 10], 2.746364918334305}, {0.1, 2.746364918334305}]], 
    InsetBox["\<\"D\"\>", NCache[{0, Rational[31, 10]}, {0, 3.1}]], 
    InsetBox["\<\"\[Theta]\"\>", \
{0.07821723252011546, 0.4938441702975689}]}}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.5610645333151197`*^9, 3.561064552686748*^9}, 
   3.561064721017005*^9, 3.5610649281748533`*^9, 3.561064979911503*^9, 
   3.561065583841564*^9, 3.5615011885737667`*^9},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[TextData[{
 "You may wish to approach the problem is the following fashion: In feet what \
are the length of the segment CB and the arc DB. Let the length of the \
segment OB be ",
 StyleBox["r",
  FontSlant->"Italic"],
 ". Now We wish to find out the length of the segment CD. What is the length \
of CB as a function of ",
 StyleBox["r",
  FontSlant->"Italic"],
 " and \[Theta]?. What is the length of the arc as a function of ",
 StyleBox["r",
  FontSlant->"Italic"],
 " and \[Theta]. You get a system of two equations in ",
 StyleBox["r",
  FontSlant->"Italic"],
 " and \[Theta]. Use ",
 StyleBox["FindRoot",
  FontWeight->"Bold"],
 " to solve this system of equations. Now write the length of CD in terms of ",
 StyleBox["r",
  FontSlant->"Italic"],
 " and \[Theta] and substitute your solution for ",
 StyleBox["r ",
  FontSlant->"Italic"],
 "and ",
 StyleBox["\[Theta]. ",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.5610675503863783`*^9, 3.561067920562141*^9}, {
   3.5610680040688353`*^9, 3.561068320931951*^9}, {3.561068734351016*^9, 
   3.561068828234367*^9}, 3.5610692670585623`*^9},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sol", "=", " ", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "r"}], "\[Equal]", 
       "2640"}], "&&", 
      RowBox[{
       RowBox[{"2", " ", "\[Theta]", " ", "r"}], "\[Equal]", "5281"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", " ", "-", " ", 
   RowBox[{"r", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", "/.", " ", 
  "sol"}]}], "Input",
 CellChangeTimes->{{3.575030832729303*^9, 3.5750308501420193`*^9}, {
  3.575030881749283*^9, 3.575030887675289*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", "78335.08050455377`"}], ",", 
   RowBox[{"\[Theta]", "\[Rule]", "0.0337077588098796`"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.5750308932034597`*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["44.49845501910022`"], "Output",
 CellChangeTimes->{3.575030893205633*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["12 points", "Text",
 CellChangeTimes->{{3.577218425895093*^9, 3.57721843042162*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[TextData[{
 StyleBox["Problem6",
  FontWeight->"Bold"],
 " Using a graphics object reproduce the diagram above. Hint chose ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     FractionBox["\[Pi]", "2.5"]}], ",", 
    RowBox[{"r", "=", "3"}]}], TraditionalForm]]],
 ". Hint: The big triangle is a  line primitive with 4 points. OC and OB are \
line primitives. The arc is a  ",
 StyleBox["Circle",
  FontWeight->"Bold"],
 " primitive with all three of its arguments, Then you have a bunch of text \
primitives. You can build the diagram out of several Graphics objects using \
",
 StyleBox["Show",
  FontWeight->"Bold"],
 ". Or you can build it out of one graphics object."
}], "Text",
 CellChangeTimes->{{3.5610694156385727`*^9, 3.561069654471157*^9}, {
   3.56106977885495*^9, 3.5610698591188993`*^9}, {3.5610698984086037`*^9, 
   3.561069996627452*^9}, {3.561070081782261*^9, 3.561070186081613*^9}, {
   3.5613326903604593`*^9, 3.561332713545088*^9}, 3.561333410266972*^9, {
   3.561501871466598*^9, 3.561501892010892*^9}, {3.574873794489916*^9, 
   3.5748738205386047`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", " ", "=", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["\[Pi]", "2"], "-", 
     FractionBox["\[Pi]", "2.5"]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CB", " ", "=", " ", 
   RowBox[{"r", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OC", " ", "=", " ", 
   RowBox[{"r", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OB", " ", "=", " ", "r"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"h", " ", "=", " ", 
  RowBox[{"OB", " ", "-", " ", "OC"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "CB"}], ",", "OB"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"CB", ",", "OB"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "OB"}], "}"}]}], "}"}], "]"}], ",", " ", 
     RowBox[{"Directive", " ", "[", "Red", "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "OB"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"OB", "+", "h"}]}], "}"}]}], "}"}], "]"}], ",", "Black", 
     ",", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "h"}], "}"}], ",", "3", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2.5"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Pi]", "/", "2"}], ")"}], "+", "\[Theta]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<O\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", ".1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<\[Theta]\>\"", ",", 
       RowBox[{"{", 
        RowBox[{".075", ",", ".5"}], "}"}]}], "]"}], ",", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<C\>\"", ",", 
       RowBox[{"{", 
        RowBox[{".075", ",", "2.90"}], "}"}]}], "]"}], ",", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<B\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<D\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "3.25"}], "}"}]}], "]"}]}], "}"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5750310630129538`*^9, 3.575031120424588*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["0.14683045111453952`"], "Output",
 CellChangeTimes->{3.5750311217520247`*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{0, 0}, {-0.9270509831248421, 3}, {0.9270509831248421, 3}, {0, 
     0}, {0, 3}}], 
   {RGBColor[1, 0, 0], LineBox[{{0, 3}, {0, 3.1468304511145395`}}]}, 
   {GrayLevel[0], 
    CircleBox[{0, 0.14683045111453952`}, 3, {1.2566370614359172`, 
     1.8849555921538759`}], InsetBox["\<\"O\"\>", {0, -0.1}], 
    InsetBox["\<\"\[Theta]\"\>", {0.075, 0.5}], 
    InsetBox["\<\"C\"\>", {0.075, 2.9}], InsetBox["\<\"B\"\>", {1, 3}], 
    InsetBox["\<\"D\"\>", {0, 3.25}]}}]], "Output",
 CellChangeTimes->{3.5750311217567387`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "Building a graphic out of parts using ",
 StyleBox["Show",
  FontWeight->"Bold"],
 " is easier."
}], "Text",
 CellChangeTimes->{{3.5610709955819693`*^9, 3.561071032030991*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.561066971688936*^9, 3.561066977153933*^9}},
 FontWeight->"Plain"],

Cell["12 points", "Text",
 CellChangeTimes->{{3.577218425895093*^9, 3.57721843042162*^9}},
 Background->RGBColor[1, 0.9, 0.8]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Domains", "Section",
 CellChangeTimes->{{3.561323806228909*^9, 3.561323814050124*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has 5 ",
 StyleBox["domains",
  FontSlant->"Italic"],
 " ",
 StyleBox["Integers",
  FontWeight->"Bold"],
 ",",
 StyleBox["Rationals",
  FontWeight->"Bold"],
 ",",
 StyleBox["Reals",
  FontWeight->"Bold"],
 ",and ",
 StyleBox["Complexes. ",
  FontWeight->"Bold"],
 "It also has a domain ",
 StyleBox["Algebraics. ",
  FontWeight->"Bold"],
 "A number is algebraic if it is a root of a polynomial with integer \
coefficients. We have a predicate \[Element] which tells us whether a number \
is in the domain"
}], "Text",
 CellChangeTimes->{{3.5613239771917353`*^9, 3.561324229048799*^9}, {
  3.561324477985725*^9, 3.561324527443316*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "\[Element]", "Integers"}]], "Input",
 CellChangeTimes->{{3.56132453459063*^9, 3.5613245457650223`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.5613245502468157`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sols", "=", 
  RowBox[{"x", "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["4", "5"], 
        SuperscriptBox["x", "17"]}], "+", 
       RowBox[{"3", 
        SuperscriptBox["x", "4"]}], "+", "2"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        FractionBox["3", "4"], 
        SuperscriptBox["x", "5"]}], "+", 
       SuperscriptBox["x", "7"]}]}], ",", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5748739351212177`*^9, 3.574874042020701*^9}, {
   3.574874097126895*^9, 3.574874152704414*^9}, 3.574874206026709*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "1"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "2"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "3"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "4"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "5"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "6"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "7"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "8"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "9"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "10"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "11"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "12"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "13"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "14"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "15"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "16"}], "]"}], ",", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"40", "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["#1", "4"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["#1", "5"]}], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["#1", "7"]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["#1", "17"]}]}], "&"}], ",", "17"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.574874209402627*^9}]
}, Open  ]],

Cell["Notice by definition all of these solutions are algebraic.", "Text",
 CellChangeTimes->{{3.574874290779477*^9, 3.574874320844672*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "sols", "]"}]], "Input",
 CellChangeTimes->{{3.5748744455812893`*^9, 3.574874453754826*^9}}],

Cell["\<\
Coordinates of solutions of systems of algebraic equations in several \
variables are also algebraic:\
\>", "Text",
 CellChangeTimes->{{3.5748743576460648`*^9, 3.574874402399551*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sols", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "5"], " ", "+", 
         RowBox[{"3", 
          SuperscriptBox["x", "2"], 
          SuperscriptBox["y", "2"]}], "+", "x", "+", "y"}], "\[Equal]", 
        "27"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "8"], "y"}], "+", 
         SuperscriptBox["y", "17"], "+", "x", "-", "2"}], "\[Equal]", "0"}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5748744726864967`*^9, 3.5748746078648043`*^9}, {
  3.5748746431068897`*^9, 3.574874653322398*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{413., {3., 12.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
              RowBox[{"9668531601446180663810682", 
               RowBox[{"\[LeftSkeleton]", "299", "\[RightSkeleton]"}], 
               "5846538946758321590978620"}]], ",", 
             RowBox[{"Root", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"-", "7"}], "+", 
                 RowBox[{"12699", " ", "#1"}], "+", 
                 RowBox[{"\[LeftSkeleton]", "88", "\[RightSkeleton]"}], "+", 
                 RowBox[{"24", " ", 
                  SuperscriptBox["#1", "72"]}], "+", 
                 SuperscriptBox["#1", "85"]}], "&"}], ",", "1"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"\[LeftSkeleton]", "83", "\[RightSkeleton]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
              RowBox[{
               RowBox[{"\[LeftSkeleton]", "348", "\[RightSkeleton]"}], "0"}]],
              ",", 
             RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], "}"}]}], 
          "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{69., {0., 11.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 22, 29745200497139187869, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{77., {0., 11.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 22, 29745200497139187869, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{57., {0., 11.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 22, 29745200497139187869, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{101., {0., 12.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[22]]], "Output",
 CellChangeTimes->{3.5748746286595917`*^9, 3.574874672815022*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{413., {3., 12.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
            RowBox[{"966853160144618066381068236", 
             RowBox[{"\[LeftSkeleton]", "295", "\[RightSkeleton]"}], 
             "395846538946758321590978620"}]], ",", 
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"-", "7"}], "+", 
               RowBox[{"12699", " ", "#1"}], "+", 
               RowBox[{"109605", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"\[LeftSkeleton]", "87", "\[RightSkeleton]"}], "+", 
               RowBox[{"24", " ", 
                SuperscriptBox["#1", "72"]}], "+", 
               SuperscriptBox["#1", "85"]}], "&"}], ",", "2"}], "]"}]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{69., {0., 11.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 23, 29745200497139187869, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{77., {0., 11.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 23, 29745200497139187869, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{57., {0., 11.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 23, 29745200497139187869, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{101., {0., 12.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[23]]], "Output",
 CellChangeTimes->{3.574874701477839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "sols", "]"}]], "Input",
 CellChangeTimes->{{3.574874833492753*^9, 3.574874847521708*^9}}],

Cell[BoxData["85"], "Output",
 CellChangeTimes->{3.574874849612747*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sols", "[", 
   RowBox[{"[", 
    RowBox[{"78", ",", "1"}], "]"}], "]"}], "\[Element]", 
  "Algebraics"}]], "Input",
 CellChangeTimes->{{3.574874809432394*^9, 3.574874819887495*^9}, {
  3.574874859602147*^9, 3.574874899386656*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.574874888725829*^9, 3.574874904427493*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sols", "[", 
   RowBox[{"[", 
    RowBox[{"78", ",", "2"}], "]"}], "]"}], "\[Element]", 
  "Algebraics"}]], "Input",
 CellChangeTimes->{{3.5748749072494507`*^9, 3.574874942820808*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.5748749456431313`*^9}]
}, Open  ]],

Cell[TextData[{
 "A non-algebraic number is called ",
 StyleBox["transcendental",
  FontSlant->"Italic"],
 ". See ",
 ButtonBox["transcendental numbers",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathworld.wolfram.com/TranscendentalNumber.html"], None},
  ButtonNote->"http://mathworld.wolfram.com/TranscendentalNumber.html"],
 "."
}], "Text",
 CellChangeTimes->{{3.574875227630198*^9, 3.574875301575302*^9}, {
  3.5748754808097754`*^9, 3.574875480813776*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Pi]", "\[Element]", "Algebraics"}]], "Input",
 CellChangeTimes->{{3.561324552404814*^9, 3.561324570397676*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.561324586113245*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ExponentialE]", "\[Element]", " ", "Algebraics"}]], "Input",
 CellChangeTimes->{{3.561325454154292*^9, 3.561325471709832*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.56132547438871*^9}]
}, Open  ]],

Cell["Both of these are profound facts.", "Text",
 CellChangeTimes->{{3.561325490820986*^9, 3.561325504973875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"\[ExponentialE]", "+", "\[Pi]"}], ")"}], "\[Element]", " ", 
  "Algebraics"}]], "Input",
 CellChangeTimes->{{3.5613252056785793`*^9, 3.561325232421266*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ExponentialE]", "+", "\[Pi]"}], "\[Element]", 
  "Algebraics"}]], "Output",
 CellChangeTimes->{3.561325234842202*^9}]
}, Open  ]],

Cell[TextData[{
 "Mathematica does not know whether ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ExponentialE]", "+", "\[Pi]"}], TraditionalForm]]],
 " is algebraic and for that matter no mathematician knows either. But it is \
a theorem that at least one of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ExponentialE]", "+", "\[Pi]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ExponentialE]", " ", "\[Pi]"}], TraditionalForm]]],
 " is transcendental but this fact is not known to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.5613252515486937`*^9, 3.561325274885605*^9}, {
   3.561325358672449*^9, 3.5613254428753233`*^9}, {3.561325521425486*^9, 
   3.56132562882717*^9}, 3.561325985254636*^9, {3.561333420941464*^9, 
   3.561333424958609*^9}, {3.574875166117087*^9, 3.574875193803714*^9}, 
   3.574875521440318*^9, 3.5748769378878202`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[ExponentialE]", "+", "\[Pi]"}], ")"}], "\[Element]", 
   "Algebraics"}], "||", 
  RowBox[{
   RowBox[{"\[ExponentialE]", " ", "\[Pi]"}], "\[Element]", 
   "Algebraics"}]}]], "Input",
 CellChangeTimes->{{3.561325026779895*^9, 3.5613251231539288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[ExponentialE]", "+", "\[Pi]"}], "\[Element]", "Algebraics"}], "||", 
  RowBox[{
   RowBox[{"\[ExponentialE]", " ", "\[Pi]"}], "\[Element]", 
   "Algebraics"}]}]], "Output",
 CellChangeTimes->{3.561325127242345*^9}]
}, Open  ]],

Cell[TextData[{
 "It would be surprising if either of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "+", "\[Pi]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ExponentialE]", " ", "\[Pi]"}], TraditionalForm]]],
 " was transcendental."
}], "Text",
 CellChangeTimes->{{3.5613251784579897`*^9, 3.561325194666799*^9}, {
  3.561325834337577*^9, 3.561325842283752*^9}, {3.5613259042915363`*^9, 
  3.561326016664206*^9}, {3.574875535839114*^9, 3.574875619114716*^9}}],

Cell[CellGroupData[{

Cell["Reduce and Domains", "Subsection",
 CellChangeTimes->{{3.561326052009335*^9, 3.56132607224972*^9}}],

Cell[BoxData[
 RowBox[{"?", "Reduce"}]], "Input",
 CellChangeTimes->{{3.561326101576082*^9, 3.5613261095800457`*^9}}],

Cell[TextData[{
 "Query ",
 StyleBox["Reduce",
  FontWeight->"Bold"],
 " and read ",
 ButtonBox["Equations and Inequalities Over Domains",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EquationsAndInequalitiesOverDomains"],
 ". In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8 we can also use ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " with domains."
}], "Text",
 CellChangeTimes->{{3.561326245625299*^9, 3.561326271264738*^9}, {
  3.5613263748694677`*^9, 3.561326401021297*^9}, {3.561326450757635*^9, 
  3.561326494888494*^9}}],

Cell[TextData[{
 StyleBox["Problem7: ",
  FontWeight->"Bold"],
 "Consider the function"
}], "Text",
 CellChangeTimes->{{3.561326526689665*^9, 3.561326561250948*^9}, 
   3.561332769788303*^9, {3.574881745462468*^9, 3.574881747379621*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "c_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "2"], "-", 
     RowBox[{"2", 
      SuperscriptBox["x", "2"], 
      RowBox[{"(", 
       RowBox[{"x", "+", "3"}], ")"}]}]}], "\[Equal]", 
    RowBox[{"c", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "+", "1"}], ")"}], "2"], 
        RowBox[{"(", 
         RowBox[{"y", "+", "9"}], ")"}]}], "-", 
       SuperscriptBox["x", "2"]}], ")"}]}]}]}], "\[LineSeparator]"}]], "Input",\

 CellChangeTimes->{{3.5587279211428337`*^9, 3.558727960573229*^9}, {
   3.558727991245722*^9, 3.558728141029248*^9}, 3.558728221916334*^9, {
   3.558728310120697*^9, 3.5587283145456963`*^9}, {3.5587288604300528`*^9, 
   3.558728864695278*^9}, {3.558728914895866*^9, 3.558728943939712*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell["Which we saw in problem 3 lesson 4.", "Text",
 CellChangeTimes->{{3.5613287100859756`*^9, 3.5613287156544867`*^9}, {
  3.561328872363915*^9, 3.561328874276244*^9}, {3.5613327936206007`*^9, 
  3.5613328017077837`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[TextData[{
 StyleBox["a:",
  FontWeight->"Bold"],
 " Let ",
 StyleBox["c1",
  FontWeight->"Bold"],
 " and ",
 StyleBox["c2",
  FontWeight->"Bold"],
 " be two distinct exact numbers.Use -\[ExponentialE]",
 StyleBox[" ",
  FontWeight->"Bold"],
 "and \[Pi]. Are all the solutions to the system {f[c1],f[c2]} real? Hint: \
Use ",
 StyleBox["Length",
  FontWeight->"Bold"],
 " to count the number of real solutions and ",
 StyleBox["Length",
  FontWeight->"Bold"],
 " to count the number of complex solutions. Are these two integers the same. \
Are all the solutions algebraic?"
}], "Text",
 CellChangeTimes->{{3.5613266924206343`*^9, 3.561326730953024*^9}, {
   3.561326762394068*^9, 3.56132697288955*^9}, {3.5613270178838997`*^9, 
   3.56132705243622*^9}, {3.5613285560008593`*^9, 3.561328561225017*^9}, 
   3.561328601235126*^9, {3.561328731726739*^9, 3.5613287498641768`*^9}, {
   3.5613303790108633`*^9, 3.561330409106266*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "c_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["y", 
     RowBox[{"2", " "}]], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "3"}], ")"}]}]}], " ", "\[Equal]", 
   RowBox[{"c", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "+", "1"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"y", "+", "9"}], ")"}]}], "-", 
      SuperscriptBox["x", "2"]}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"-", "\[ExponentialE]"}], "]"}], ",", 
      RowBox[{"f", "[", "\[Pi]", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.57503121157199*^9, 3.575031212213306*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.5750312234668007`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"-", "\[ExponentialE]"}], "]"}], ",", 
      RowBox[{"f", "[", "\[Pi]", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", "Complexes"}], "]"}], 
  "]"}]], "Input",
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.575031226980444*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "No, all the solutions to the system {f[c1],f[c2]} where c1 = -\
\[ExponentialE] and c2 = \[Pi] are not real.  Since we know that every Real \
number is also a Complex number and above we can see that the lengths of the \
two lists above are not equal, we can say that all the solutions to the \
system are not real.  There are two solutions that aren\[CloseCurlyQuote]t \
real.  However, from our analysis below we see that all solutions are \
algebraic.  That turns out just as expected since all Algebraics are known to \
comprise all Complex numbers as well. ",
 StyleBox["vice versa ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["Algebraics\[Subset]Complexes",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{
  3.575031241678029*^9, {3.575584872521543*^9, 3.5755848886634912`*^9}, {
   3.5772186473105927`*^9, 3.577218719623993*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Length", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"-", "\[ExponentialE]"}], "]"}], ",", 
        RowBox[{"f", "[", "\[Pi]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", "Algebraics"}], "]"}], "]"}],
   FontWeight->"Bold"], " "}]], "Input",
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.575031273336979*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"Length", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"-", "\[ExponentialE]"}], "]"}], ",", 
       RowBox[{"f", "[", "\[Pi]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "Complexes"}], "]"}], "]"}],
  FontWeight->"Bold"]], "Input",
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.575031283775783*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["12 points", "Text",
 CellChangeTimes->{{3.577218425895093*^9, 3.57721843042162*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell["Pythagorean Triples", "Subsubsection",
 CellChangeTimes->{{3.561330495773168*^9, 3.5613305082774887`*^9}}],

Cell[TextData[{
 "A Pythagorean triple is a triple of positive integers {x,y,z} with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "=", 
    SuperscriptBox["z", "2"]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.5613305302633467`*^9, 3.561330568567512*^9}, {
   3.561330742989543*^9, 3.561330772870737*^9}, 3.561333434340169*^9}],

Cell[TextData[StyleBox["Problem8",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.561332870837514*^9, 3.561332874694337*^9}, {
  3.5748759612945747`*^9, 3.5748759623298483`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[TextData[{
 StyleBox["a:",
  FontWeight->"Bold"],
 " Give all the Pythagorean triples with 0<x<y <z<100. Give your result as a \
Column of triples"
}], "Text",
 CellChangeTimes->{{3.561330798095598*^9, 3.561330903659173*^9}, {
  3.5613309721255493`*^9, 3.561330990606295*^9}, {3.561331117386763*^9, 
  3.561331123219194*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FormBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "==", 
       SuperscriptBox["z", "2"]}],
      TraditionalForm], ",", 
     RowBox[{"0", "<", "x", "<", "y", "<", "z", "<", "100"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "Integers"}], 
  "]"}]], "Input",
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "3"}], ",", 
     RowBox[{"y", "\[Rule]", "4"}], ",", 
     RowBox[{"z", "\[Rule]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "5"}], ",", 
     RowBox[{"y", "\[Rule]", "12"}], ",", 
     RowBox[{"z", "\[Rule]", "13"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "7"}], ",", 
     RowBox[{"y", "\[Rule]", "24"}], ",", 
     RowBox[{"z", "\[Rule]", "25"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "8"}], ",", 
     RowBox[{"y", "\[Rule]", "15"}], ",", 
     RowBox[{"z", "\[Rule]", "17"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "9"}], ",", 
     RowBox[{"y", "\[Rule]", "12"}], ",", 
     RowBox[{"z", "\[Rule]", "15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "9"}], ",", 
     RowBox[{"y", "\[Rule]", "40"}], ",", 
     RowBox[{"z", "\[Rule]", "41"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "11"}], ",", 
     RowBox[{"y", "\[Rule]", "60"}], ",", 
     RowBox[{"z", "\[Rule]", "61"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "12"}], ",", 
     RowBox[{"y", "\[Rule]", "35"}], ",", 
     RowBox[{"z", "\[Rule]", "37"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "13"}], ",", 
     RowBox[{"y", "\[Rule]", "84"}], ",", 
     RowBox[{"z", "\[Rule]", "85"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "15"}], ",", 
     RowBox[{"y", "\[Rule]", "20"}], ",", 
     RowBox[{"z", "\[Rule]", "25"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "15"}], ",", 
     RowBox[{"y", "\[Rule]", "36"}], ",", 
     RowBox[{"z", "\[Rule]", "39"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "16"}], ",", 
     RowBox[{"y", "\[Rule]", "63"}], ",", 
     RowBox[{"z", "\[Rule]", "65"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "20"}], ",", 
     RowBox[{"y", "\[Rule]", "21"}], ",", 
     RowBox[{"z", "\[Rule]", "29"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "21"}], ",", 
     RowBox[{"y", "\[Rule]", "28"}], ",", 
     RowBox[{"z", "\[Rule]", "35"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "21"}], ",", 
     RowBox[{"y", "\[Rule]", "72"}], ",", 
     RowBox[{"z", "\[Rule]", "75"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "24"}], ",", 
     RowBox[{"y", "\[Rule]", "45"}], ",", 
     RowBox[{"z", "\[Rule]", "51"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "25"}], ",", 
     RowBox[{"y", "\[Rule]", "60"}], ",", 
     RowBox[{"z", "\[Rule]", "65"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "27"}], ",", 
     RowBox[{"y", "\[Rule]", "36"}], ",", 
     RowBox[{"z", "\[Rule]", "45"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "28"}], ",", 
     RowBox[{"y", "\[Rule]", "45"}], ",", 
     RowBox[{"z", "\[Rule]", "53"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "33"}], ",", 
     RowBox[{"y", "\[Rule]", "44"}], ",", 
     RowBox[{"z", "\[Rule]", "55"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "33"}], ",", 
     RowBox[{"y", "\[Rule]", "56"}], ",", 
     RowBox[{"z", "\[Rule]", "65"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "35"}], ",", 
     RowBox[{"y", "\[Rule]", "84"}], ",", 
     RowBox[{"z", "\[Rule]", "91"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "36"}], ",", 
     RowBox[{"y", "\[Rule]", "77"}], ",", 
     RowBox[{"z", "\[Rule]", "85"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "39"}], ",", 
     RowBox[{"y", "\[Rule]", "52"}], ",", 
     RowBox[{"z", "\[Rule]", "65"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "39"}], ",", 
     RowBox[{"y", "\[Rule]", "80"}], ",", 
     RowBox[{"z", "\[Rule]", "89"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "40"}], ",", 
     RowBox[{"y", "\[Rule]", "75"}], ",", 
     RowBox[{"z", "\[Rule]", "85"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "45"}], ",", 
     RowBox[{"y", "\[Rule]", "60"}], ",", 
     RowBox[{"z", "\[Rule]", "75"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "48"}], ",", 
     RowBox[{"y", "\[Rule]", "55"}], ",", 
     RowBox[{"z", "\[Rule]", "73"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "51"}], ",", 
     RowBox[{"y", "\[Rule]", "68"}], ",", 
     RowBox[{"z", "\[Rule]", "85"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "57"}], ",", 
     RowBox[{"y", "\[Rule]", "76"}], ",", 
     RowBox[{"z", "\[Rule]", "95"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "60"}], ",", 
     RowBox[{"y", "\[Rule]", "63"}], ",", 
     RowBox[{"z", "\[Rule]", "87"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "65"}], ",", 
     RowBox[{"y", "\[Rule]", "72"}], ",", 
     RowBox[{"z", "\[Rule]", "97"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "6"}], ",", 
     RowBox[{"y", "\[Rule]", "8"}], ",", 
     RowBox[{"z", "\[Rule]", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "10"}], ",", 
     RowBox[{"y", "\[Rule]", "24"}], ",", 
     RowBox[{"z", "\[Rule]", "26"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "12"}], ",", 
     RowBox[{"y", "\[Rule]", "16"}], ",", 
     RowBox[{"z", "\[Rule]", "20"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "14"}], ",", 
     RowBox[{"y", "\[Rule]", "48"}], ",", 
     RowBox[{"z", "\[Rule]", "50"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "16"}], ",", 
     RowBox[{"y", "\[Rule]", "30"}], ",", 
     RowBox[{"z", "\[Rule]", "34"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "18"}], ",", 
     RowBox[{"y", "\[Rule]", "24"}], ",", 
     RowBox[{"z", "\[Rule]", "30"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "18"}], ",", 
     RowBox[{"y", "\[Rule]", "80"}], ",", 
     RowBox[{"z", "\[Rule]", "82"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "20"}], ",", 
     RowBox[{"y", "\[Rule]", "48"}], ",", 
     RowBox[{"z", "\[Rule]", "52"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "24"}], ",", 
     RowBox[{"y", "\[Rule]", "32"}], ",", 
     RowBox[{"z", "\[Rule]", "40"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "24"}], ",", 
     RowBox[{"y", "\[Rule]", "70"}], ",", 
     RowBox[{"z", "\[Rule]", "74"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "30"}], ",", 
     RowBox[{"y", "\[Rule]", "40"}], ",", 
     RowBox[{"z", "\[Rule]", "50"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "30"}], ",", 
     RowBox[{"y", "\[Rule]", "72"}], ",", 
     RowBox[{"z", "\[Rule]", "78"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "32"}], ",", 
     RowBox[{"y", "\[Rule]", "60"}], ",", 
     RowBox[{"z", "\[Rule]", "68"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "36"}], ",", 
     RowBox[{"y", "\[Rule]", "48"}], ",", 
     RowBox[{"z", "\[Rule]", "60"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "40"}], ",", 
     RowBox[{"y", "\[Rule]", "42"}], ",", 
     RowBox[{"z", "\[Rule]", "58"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "42"}], ",", 
     RowBox[{"y", "\[Rule]", "56"}], ",", 
     RowBox[{"z", "\[Rule]", "70"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "48"}], ",", 
     RowBox[{"y", "\[Rule]", "64"}], ",", 
     RowBox[{"z", "\[Rule]", "80"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "54"}], ",", 
     RowBox[{"y", "\[Rule]", "72"}], ",", 
     RowBox[{"z", "\[Rule]", "90"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.575031646359488*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 StyleBox["b: ",
  FontWeight->"Bold"],
 "Some of the triples are redundant in that we get them by simply multiplying \
each element in the triple by a common integer. Get the column of triples \
that have no common integer divisors. Hint use ",
 StyleBox["GCD",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.561331168828641*^9, 3.561331199525298*^9}, {
   3.561331241447237*^9, 3.561331321202239*^9}, 3.56133344350847*^9},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FormBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "==", 
       SuperscriptBox["z", "2"]}],
      TraditionalForm], ",", 
     StyleBox[
      RowBox[{
       RowBox[{"GCD", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], "==", "1"}],
      FontWeight->"Bold"], 
     StyleBox[",",
      FontWeight->"Bold"], 
     RowBox[{"0", "<", "x", "<", "y", "<", "z", "<", "100"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "Integers"}], 
  "]"}]], "Input",
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "3"}], ",", 
     RowBox[{"y", "\[Rule]", "4"}], ",", 
     RowBox[{"z", "\[Rule]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "5"}], ",", 
     RowBox[{"y", "\[Rule]", "12"}], ",", 
     RowBox[{"z", "\[Rule]", "13"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "7"}], ",", 
     RowBox[{"y", "\[Rule]", "24"}], ",", 
     RowBox[{"z", "\[Rule]", "25"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "8"}], ",", 
     RowBox[{"y", "\[Rule]", "15"}], ",", 
     RowBox[{"z", "\[Rule]", "17"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "9"}], ",", 
     RowBox[{"y", "\[Rule]", "40"}], ",", 
     RowBox[{"z", "\[Rule]", "41"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "11"}], ",", 
     RowBox[{"y", "\[Rule]", "60"}], ",", 
     RowBox[{"z", "\[Rule]", "61"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "12"}], ",", 
     RowBox[{"y", "\[Rule]", "35"}], ",", 
     RowBox[{"z", "\[Rule]", "37"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "13"}], ",", 
     RowBox[{"y", "\[Rule]", "84"}], ",", 
     RowBox[{"z", "\[Rule]", "85"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "16"}], ",", 
     RowBox[{"y", "\[Rule]", "63"}], ",", 
     RowBox[{"z", "\[Rule]", "65"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "20"}], ",", 
     RowBox[{"y", "\[Rule]", "21"}], ",", 
     RowBox[{"z", "\[Rule]", "29"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "28"}], ",", 
     RowBox[{"y", "\[Rule]", "45"}], ",", 
     RowBox[{"z", "\[Rule]", "53"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "33"}], ",", 
     RowBox[{"y", "\[Rule]", "56"}], ",", 
     RowBox[{"z", "\[Rule]", "65"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "36"}], ",", 
     RowBox[{"y", "\[Rule]", "77"}], ",", 
     RowBox[{"z", "\[Rule]", "85"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "39"}], ",", 
     RowBox[{"y", "\[Rule]", "80"}], ",", 
     RowBox[{"z", "\[Rule]", "89"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "48"}], ",", 
     RowBox[{"y", "\[Rule]", "55"}], ",", 
     RowBox[{"z", "\[Rule]", "73"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "65"}], ",", 
     RowBox[{"y", "\[Rule]", "72"}], ",", 
     RowBox[{"z", "\[Rule]", "97"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5750316731752768`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[TextData[{
 "d: We see a few such triples with z=y+1. Find all such triples with z<1000. \
Surprisingly although it is redundant the ",
 StyleBox["GCD",
  FontWeight->"Bold"],
 " condition must be left in."
}], "Text",
 CellChangeTimes->{{3.56133141610877*^9, 3.5613314467504597`*^9}, {
   3.5613314793674393`*^9, 3.561331567266621*^9}, {3.561331857700473*^9, 
   3.5613319399028378`*^9}, 3.561333455793827*^9},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "\[Equal]", 
      SuperscriptBox["z", "2"]}], ",", 
     RowBox[{"z", "\[Equal]", 
      RowBox[{"1", "+", "y"}]}], ",", 
     StyleBox[
      RowBox[{
       RowBox[{"GCD", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], "==", "1"}],
      FontWeight->"Bold"], 
     StyleBox[",",
      FontWeight->"Bold"], 
     RowBox[{"z", "<", "1000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "Integers"}], 
  "]"}]], "Input",
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "43"}]}], ",", 
     RowBox[{"y", "\[Rule]", "924"}], ",", 
     RowBox[{"z", "\[Rule]", "925"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "41"}]}], ",", 
     RowBox[{"y", "\[Rule]", "840"}], ",", 
     RowBox[{"z", "\[Rule]", "841"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "39"}]}], ",", 
     RowBox[{"y", "\[Rule]", "760"}], ",", 
     RowBox[{"z", "\[Rule]", "761"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "37"}]}], ",", 
     RowBox[{"y", "\[Rule]", "684"}], ",", 
     RowBox[{"z", "\[Rule]", "685"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "35"}]}], ",", 
     RowBox[{"y", "\[Rule]", "612"}], ",", 
     RowBox[{"z", "\[Rule]", "613"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "33"}]}], ",", 
     RowBox[{"y", "\[Rule]", "544"}], ",", 
     RowBox[{"z", "\[Rule]", "545"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "31"}]}], ",", 
     RowBox[{"y", "\[Rule]", "480"}], ",", 
     RowBox[{"z", "\[Rule]", "481"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "29"}]}], ",", 
     RowBox[{"y", "\[Rule]", "420"}], ",", 
     RowBox[{"z", "\[Rule]", "421"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "27"}]}], ",", 
     RowBox[{"y", "\[Rule]", "364"}], ",", 
     RowBox[{"z", "\[Rule]", "365"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "25"}]}], ",", 
     RowBox[{"y", "\[Rule]", "312"}], ",", 
     RowBox[{"z", "\[Rule]", "313"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "23"}]}], ",", 
     RowBox[{"y", "\[Rule]", "264"}], ",", 
     RowBox[{"z", "\[Rule]", "265"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "21"}]}], ",", 
     RowBox[{"y", "\[Rule]", "220"}], ",", 
     RowBox[{"z", "\[Rule]", "221"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "19"}]}], ",", 
     RowBox[{"y", "\[Rule]", "180"}], ",", 
     RowBox[{"z", "\[Rule]", "181"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "17"}]}], ",", 
     RowBox[{"y", "\[Rule]", "144"}], ",", 
     RowBox[{"z", "\[Rule]", "145"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "15"}]}], ",", 
     RowBox[{"y", "\[Rule]", "112"}], ",", 
     RowBox[{"z", "\[Rule]", "113"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "13"}]}], ",", 
     RowBox[{"y", "\[Rule]", "84"}], ",", 
     RowBox[{"z", "\[Rule]", "85"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "11"}]}], ",", 
     RowBox[{"y", "\[Rule]", "60"}], ",", 
     RowBox[{"z", "\[Rule]", "61"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "9"}]}], ",", 
     RowBox[{"y", "\[Rule]", "40"}], ",", 
     RowBox[{"z", "\[Rule]", "41"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "7"}]}], ",", 
     RowBox[{"y", "\[Rule]", "24"}], ",", 
     RowBox[{"z", "\[Rule]", "25"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "5"}]}], ",", 
     RowBox[{"y", "\[Rule]", "12"}], ",", 
     RowBox[{"z", "\[Rule]", "13"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{"y", "\[Rule]", "4"}], ",", 
     RowBox[{"z", "\[Rule]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"y", "\[Rule]", "0"}], ",", 
     RowBox[{"z", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "1"}], ",", 
     RowBox[{"y", "\[Rule]", "0"}], ",", 
     RowBox[{"z", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "3"}], ",", 
     RowBox[{"y", "\[Rule]", "4"}], ",", 
     RowBox[{"z", "\[Rule]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "5"}], ",", 
     RowBox[{"y", "\[Rule]", "12"}], ",", 
     RowBox[{"z", "\[Rule]", "13"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "7"}], ",", 
     RowBox[{"y", "\[Rule]", "24"}], ",", 
     RowBox[{"z", "\[Rule]", "25"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "9"}], ",", 
     RowBox[{"y", "\[Rule]", "40"}], ",", 
     RowBox[{"z", "\[Rule]", "41"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "11"}], ",", 
     RowBox[{"y", "\[Rule]", "60"}], ",", 
     RowBox[{"z", "\[Rule]", "61"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "13"}], ",", 
     RowBox[{"y", "\[Rule]", "84"}], ",", 
     RowBox[{"z", "\[Rule]", "85"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "15"}], ",", 
     RowBox[{"y", "\[Rule]", "112"}], ",", 
     RowBox[{"z", "\[Rule]", "113"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "17"}], ",", 
     RowBox[{"y", "\[Rule]", "144"}], ",", 
     RowBox[{"z", "\[Rule]", "145"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "19"}], ",", 
     RowBox[{"y", "\[Rule]", "180"}], ",", 
     RowBox[{"z", "\[Rule]", "181"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "21"}], ",", 
     RowBox[{"y", "\[Rule]", "220"}], ",", 
     RowBox[{"z", "\[Rule]", "221"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "23"}], ",", 
     RowBox[{"y", "\[Rule]", "264"}], ",", 
     RowBox[{"z", "\[Rule]", "265"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "25"}], ",", 
     RowBox[{"y", "\[Rule]", "312"}], ",", 
     RowBox[{"z", "\[Rule]", "313"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "27"}], ",", 
     RowBox[{"y", "\[Rule]", "364"}], ",", 
     RowBox[{"z", "\[Rule]", "365"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "29"}], ",", 
     RowBox[{"y", "\[Rule]", "420"}], ",", 
     RowBox[{"z", "\[Rule]", "421"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "31"}], ",", 
     RowBox[{"y", "\[Rule]", "480"}], ",", 
     RowBox[{"z", "\[Rule]", "481"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "33"}], ",", 
     RowBox[{"y", "\[Rule]", "544"}], ",", 
     RowBox[{"z", "\[Rule]", "545"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "35"}], ",", 
     RowBox[{"y", "\[Rule]", "612"}], ",", 
     RowBox[{"z", "\[Rule]", "613"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "37"}], ",", 
     RowBox[{"y", "\[Rule]", "684"}], ",", 
     RowBox[{"z", "\[Rule]", "685"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "39"}], ",", 
     RowBox[{"y", "\[Rule]", "760"}], ",", 
     RowBox[{"z", "\[Rule]", "761"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "41"}], ",", 
     RowBox[{"y", "\[Rule]", "840"}], ",", 
     RowBox[{"z", "\[Rule]", "841"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "43"}], ",", 
     RowBox[{"y", "\[Rule]", "924"}], ",", 
     RowBox[{"z", "\[Rule]", "925"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5750317768344173`*^9},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell["12 points", "Text",
 CellChangeTimes->{{3.577218425895093*^9, 3.57721843042162*^9}},
 Background->RGBColor[1, 0.9, 0.8]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{819, 711},
WindowMargins->{{531, Automatic}, {Automatic, 71}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 92, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[674, 25, 216, 3, 137, "Title"],
Cell[893, 30, 185, 3, 76, "Subtitle"],
Cell[1081, 35, 192, 4, 70, "Text"],
Cell[CellGroupData[{
Cell[1298, 43, 131, 1, 76, "Subtitle"],
Cell[1432, 46, 632, 10, 194, "Text"],
Cell[2067, 58, 318, 11, 76, "Text"],
Cell[2388, 71, 841, 19, 76, "Text"],
Cell[3232, 92, 823, 17, 135, "Text"],
Cell[4058, 111, 141, 2, 43, "Input"],
Cell[CellGroupData[{
Cell[4224, 117, 121, 1, 178, "Section"],
Cell[CellGroupData[{
Cell[4370, 122, 193, 2, 97, "Subsection"],
Cell[4566, 126, 139, 1, 69, "Text"],
Cell[CellGroupData[{
Cell[4730, 131, 399, 8, 64, "Input"],
Cell[5132, 141, 372, 8, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5541, 154, 349, 7, 64, "Input"],
Cell[5893, 163, 319, 6, 64, "Output"]
}, Open  ]],
Cell[6227, 172, 420, 13, 114, "Text"],
Cell[CellGroupData[{
Cell[6672, 189, 282, 7, 64, "Input"],
Cell[6957, 198, 769, 13, 126, "Message"],
Cell[7729, 213, 1071, 32, 111, "Output"]
}, Open  ]],
Cell[8815, 248, 225, 4, 114, "Text"],
Cell[CellGroupData[{
Cell[9065, 256, 568, 17, 111, "Input"],
Cell[9636, 275, 500, 16, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10173, 296, 496, 15, 67, "Input"],
Cell[10672, 313, 430, 14, 67, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11151, 333, 168, 2, 97, "Subsection"],
Cell[11322, 337, 430, 12, 114, "Text"],
Cell[CellGroupData[{
Cell[11777, 353, 226, 4, 64, "Input"],
Cell[12006, 359, 465, 9, 88, "Message"],
Cell[12474, 370, 577, 18, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13088, 393, 171, 3, 64, "Input"],
Cell[13262, 398, 462, 9, 88, "Message"],
Cell[13727, 409, 595, 19, 121, "Output"]
}, Open  ]],
Cell[14337, 431, 640, 19, 202, "Text"],
Cell[CellGroupData[{
Cell[15002, 454, 367, 6, 64, "Input"],
Cell[15372, 462, 1043, 31, 292, "Output"]
}, Open  ]],
Cell[16430, 496, 779, 20, 207, "Text"],
Cell[CellGroupData[{
Cell[17234, 520, 169, 3, 64, "Input"],
Cell[17406, 525, 903, 29, 292, "Output"]
}, Open  ]],
Cell[18324, 557, 285, 9, 114, "Text"],
Cell[18612, 568, 524, 14, 157, "Text"],
Cell[CellGroupData[{
Cell[19161, 586, 1666, 49, 375, "Input"],
Cell[20830, 637, 9866, 180, 1005, "Output"]
}, Open  ]],
Cell[30711, 820, 391, 11, 157, "Text"],
Cell[31105, 833, 593, 12, 157, "Text"],
Cell[31701, 847, 290, 9, 73, "DisplayFormula"],
Cell[31994, 858, 306, 5, 69, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32337, 868, 127, 1, 97, "Subsection"],
Cell[CellGroupData[{
Cell[32489, 873, 95, 1, 78, "Subsubsection"],
Cell[32587, 876, 571, 14, 157, "Text"],
Cell[CellGroupData[{
Cell[33183, 894, 609, 17, 103, "Input"],
Cell[33795, 913, 237, 5, 97, "Output"]
}, Open  ]],
Cell[34047, 921, 522, 14, 174, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34606, 940, 103, 1, 78, "Subsubsection"],
Cell[34712, 943, 455, 18, 115, "Text"],
Cell[35170, 963, 398, 11, 99, "DisplayFormula"],
Cell[CellGroupData[{
Cell[35593, 978, 455, 13, 96, "Input"],
Cell[36051, 993, 493, 17, 124, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36581, 1015, 276, 8, 97, "Input"],
Cell[36860, 1025, 119, 2, 64, "Output"]
}, Open  ]],
Cell[36994, 1030, 213, 4, 114, "Text"],
Cell[37210, 1036, 83, 1, 69, "Text"],
Cell[37296, 1039, 139, 2, 64, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37496, 1048, 121, 1, 178, "Section"],
Cell[37620, 1051, 1291, 23, 291, "Text"],
Cell[CellGroupData[{
Cell[38936, 1078, 264, 8, 75, "Input"],
Cell[39203, 1088, 523, 19, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39763, 1112, 296, 9, 75, "Input"],
Cell[40062, 1123, 389, 15, 97, "Output"]
}, Open  ]],
Cell[40466, 1141, 237, 6, 114, "Text"],
Cell[CellGroupData[{
Cell[40728, 1151, 229, 7, 64, "Input"],
Cell[40960, 1160, 168, 5, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41165, 1170, 258, 8, 64, "Input"],
Cell[41426, 1180, 113, 3, 99, "Output"]
}, Open  ]],
Cell[41554, 1186, 163, 3, 114, "Text"],
Cell[CellGroupData[{
Cell[41742, 1193, 366, 11, 64, "Input"],
Cell[42111, 1206, 90, 2, 99, "Output"]
}, Open  ]],
Cell[42216, 1211, 134, 2, 69, "Text"],
Cell[CellGroupData[{
Cell[42375, 1217, 295, 9, 64, "Input"],
Cell[42673, 1228, 90, 2, 99, "Output"]
}, Open  ]],
Cell[42778, 1233, 191, 4, 114, "Text"],
Cell[CellGroupData[{
Cell[42994, 1241, 384, 11, 75, "Input"],
Cell[43381, 1254, 136, 3, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43554, 1262, 386, 11, 75, "Input"],
Cell[43943, 1275, 86, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44066, 1282, 174, 2, 78, "Subsubsection"],
Cell[44243, 1286, 1525, 48, 388, "Text"],
Cell[45771, 1336, 478, 14, 105, "Text"],
Cell[46252, 1352, 499, 15, 93, "DisplayFormula"],
Cell[46754, 1369, 559, 14, 238, "Text"],
Cell[CellGroupData[{
Cell[47338, 1387, 959, 28, 177, "Input"],
Cell[48300, 1417, 867, 27, 142, "Output"]
}, Open  ]],
Cell[49182, 1447, 282, 7, 100, "Input"],
Cell[49467, 1456, 704, 19, 196, "Text"],
Cell[CellGroupData[{
Cell[50196, 1479, 1061, 33, 307, "Input"],
Cell[51260, 1514, 926, 30, 160, "Output"]
}, Open  ]],
Cell[52201, 1547, 260, 8, 105, "Text"],
Cell[CellGroupData[{
Cell[52486, 1559, 1071, 33, 331, "Input"],
Cell[53560, 1594, 380, 12, 159, "Output"]
}, Open  ]],
Cell[53955, 1609, 126, 2, 105, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54118, 1616, 102, 1, 97, "Subsection"],
Cell[54223, 1619, 2490, 64, 294, "Text"],
Cell[CellGroupData[{
Cell[56738, 1687, 520, 13, 75, "Input"],
Cell[57261, 1702, 1788, 55, 363, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59086, 1762, 173, 3, 64, "Input"],
Cell[59262, 1767, 909, 19, 141, "Output"]
}, Open  ]],
Cell[60186, 1789, 509, 13, 202, "Text"],
Cell[CellGroupData[{
Cell[60720, 1806, 124, 1, 78, "Subsubsection"],
Cell[60847, 1809, 1202, 36, 117, "Text"],
Cell[62052, 1847, 716, 22, 49, "DisplayFormula"],
Cell[62771, 1871, 669, 25, 117, "Text"],
Cell[63443, 1898, 831, 26, 49, "DisplayFormula"],
Cell[64277, 1926, 223, 7, 69, "Text"],
Cell[CellGroupData[{
Cell[64525, 1937, 899, 27, 66, "Input"],
Cell[65427, 1966, 621, 21, 66, "Output"]
}, Open  ]],
Cell[66063, 1990, 178, 3, 69, "Text"],
Cell[66244, 1995, 2576, 67, 426, "Text"],
Cell[CellGroupData[{
Cell[68845, 2066, 748, 24, 148, "Input"],
Cell[69596, 2092, 10655, 290, 741, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80288, 2387, 2042, 64, 253, "Input"],
Cell[82333, 2453, 691, 23, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83061, 2481, 1976, 63, 253, "Input"],
Cell[85040, 2546, 669, 23, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85746, 2574, 5859, 161, 519, "Input"],
Cell[91608, 2737, 711, 24, 105, "Output"]
}, Open  ]],
Cell[92334, 2764, 583, 11, 282, "Text"],
Cell[92920, 2777, 126, 2, 105, "Text"],
Cell[93049, 2781, 141, 2, 64, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93239, 2789, 121, 1, 97, "Subsection"],
Cell[93363, 2792, 316, 11, 69, "Text"],
Cell[93682, 2805, 1830, 61, 249, "Text"],
Cell[95515, 2868, 167, 2, 69, "Text"],
Cell[CellGroupData[{
Cell[95707, 2874, 460, 12, 67, "Input"],
Cell[96170, 2888, 442, 14, 67, "Output"]
}, Open  ]],
Cell[96627, 2905, 450, 19, 114, "Text"],
Cell[97080, 2926, 510, 15, 117, "Text"],
Cell[CellGroupData[{
Cell[97615, 2945, 364, 10, 66, "Input"],
Cell[97982, 2957, 539, 16, 69, "Output"]
}, Open  ]],
Cell[98536, 2976, 16, 0, 69, "Text"],
Cell[98555, 2978, 2052, 68, 265, "Text"],
Cell[CellGroupData[{
Cell[100632, 3050, 913, 24, 103, "Input"],
Cell[101548, 3076, 717, 18, 66, "Output"]
}, Open  ]],
Cell[102280, 3097, 2917, 99, 375, "Text"],
Cell[CellGroupData[{
Cell[105222, 3200, 1357, 36, 141, "Input"],
Cell[106582, 3238, 605, 14, 69, "Output"]
}, Open  ]],
Cell[107202, 3255, 319, 13, 69, "Text"],
Cell[CellGroupData[{
Cell[107546, 3272, 355, 9, 64, "Input"],
Cell[107904, 3283, 946, 27, 115, "Output"]
}, Open  ]],
Cell[108865, 3313, 589, 15, 160, "Text"],
Cell[CellGroupData[{
Cell[109479, 3332, 382, 9, 111, "Input"],
Cell[109864, 3343, 710, 22, 154, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110611, 3370, 127, 2, 64, "Input"],
Cell[110741, 3374, 184, 5, 99, "Output"]
}, Open  ]],
Cell[110940, 3382, 478, 15, 84, "Text"],
Cell[111421, 3399, 355, 10, 154, "DisplayFormula"],
Cell[111779, 3411, 2360, 75, 370, "Text"],
Cell[114142, 3488, 270, 8, 67, "Item"],
Cell[114415, 3498, 96, 1, 69, "Text"],
Cell[114514, 3501, 168, 2, 64, "Item"],
Cell[CellGroupData[{
Cell[114707, 3507, 547, 10, 78, "Subsubsection"],
Cell[115257, 3519, 1073, 33, 115, "Text"],
Cell[116333, 3554, 124, 2, 64, "Input"],
Cell[116460, 3558, 726, 20, 114, "Input"],
Cell[117189, 3580, 810, 19, 114, "Input"],
Cell[118002, 3601, 600, 16, 129, "Input"],
Cell[118605, 3619, 375, 11, 70, "Text"],
Cell[118983, 3632, 317, 8, 117, "Input"],
Cell[119303, 3642, 886, 22, 205, "Text"],
Cell[120192, 3666, 940, 27, 127, "Text"],
Cell[121135, 3695, 632, 14, 153, "Input"],
Cell[121770, 3711, 255, 4, 69, "Text"],
Cell[CellGroupData[{
Cell[122050, 3719, 798, 20, 103, "Input"],
Cell[122851, 3741, 446, 9, 85, "Message"],
Cell[123300, 3752, 437, 9, 87, "Message"],
Cell[123740, 3763, 474, 9, 88, "Message"],
Cell[124217, 3774, 434, 9, 84, "Message"],
Cell[124654, 3785, 515, 10, 88, "Message"],
Cell[125172, 3797, 15298, 258, 1005, "Output"]
}, Open  ]],
Cell[140485, 4058, 202, 4, 114, "Text"],
Cell[140690, 4064, 244, 5, 69, "Text"],
Cell[140937, 4071, 377, 12, 153, "Input"],
Cell[CellGroupData[{
Cell[141339, 4087, 698, 19, 103, "Input"],
Cell[142040, 4108, 563, 11, 85, "Message"],
Cell[142606, 4121, 556, 11, 87, "Message"],
Cell[143165, 4134, 593, 11, 88, "Message"],
Cell[143761, 4147, 553, 11, 84, "Message"],
Cell[144317, 4160, 632, 12, 88, "Message"],
Cell[144952, 4174, 15256, 257, 1005, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160245, 4436, 539, 11, 103, "Input"],
Cell[160787, 4449, 30054, 504, 1005, "Output"]
}, Open  ]],
Cell[190856, 4956, 351, 10, 72, "Text"],
Cell[191210, 4968, 317, 6, 69, "Input"],
Cell[CellGroupData[{
Cell[191552, 4978, 685, 18, 103, "Input"],
Cell[192240, 4998, 11997, 204, 753, "Output"]
}, Open  ]],
Cell[204252, 5205, 365, 7, 69, "Input"],
Cell[CellGroupData[{
Cell[204642, 5216, 660, 18, 103, "Input"],
Cell[205305, 5236, 19696, 330, 1005, "Output"]
}, Open  ]],
Cell[225016, 5569, 126, 2, 64, "Input"],
Cell[225145, 5573, 422, 9, 159, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225604, 5587, 123, 1, 78, "Subsubsection"],
Cell[225730, 5590, 788, 24, 115, "Text"],
Cell[226521, 5616, 660, 22, 120, "DisplayFormula"],
Cell[227184, 5640, 2729, 71, 330, "DisplayFormula"],
Cell[229916, 5713, 361, 10, 109, "Input"],
Cell[230280, 5725, 623, 20, 114, "Input"],
Cell[230906, 5747, 719, 17, 114, "Input"],
Cell[231628, 5766, 569, 14, 114, "Input"],
Cell[232200, 5782, 461, 14, 168, "Input"],
Cell[232664, 5798, 108, 1, 69, "Text"],
Cell[232775, 5801, 93, 1, 64, "Input"],
Cell[232871, 5804, 590, 16, 168, "Input"],
Cell[233464, 5822, 234, 5, 114, "Text"],
Cell[233701, 5829, 345, 10, 96, "DisplayFormula"],
Cell[234049, 5841, 112, 1, 69, "Text"],
Cell[234164, 5844, 201, 5, 66, "Input"],
Cell[234368, 5851, 201, 5, 66, "Input"],
Cell[234572, 5858, 205, 6, 69, "Text"],
Cell[CellGroupData[{
Cell[234802, 5868, 699, 19, 103, "Input"],
Cell[235504, 5889, 514, 9, 88, "Message"],
Cell[236021, 5900, 502, 9, 88, "Message"],
Cell[236526, 5911, 37393, 621, 1005, "Output"]
}, Open  ]],
Cell[273934, 6535, 544, 11, 238, "Text"],
Cell[274481, 6548, 1537, 49, 558, "Input"],
Cell[276021, 6599, 402, 9, 193, "Text"],
Cell[CellGroupData[{
Cell[276448, 6612, 1452, 46, 340, "Input"],
Cell[277903, 6660, 44326, 736, 1003, "Output"]
}, Open  ]],
Cell[322244, 7399, 328, 10, 150, "Text"],
Cell[CellGroupData[{
Cell[322597, 7413, 2832, 92, 763, "Input"],
Cell[325432, 7507, 64637, 1069, 1003, "Output"]
}, Open  ]],
Cell[390084, 8579, 154, 2, 105, "Text"],
Cell[390241, 8583, 358, 9, 105, "Text"],
Cell[CellGroupData[{
Cell[390624, 8596, 2288, 72, 670, "Input"],
Cell[392915, 8670, 43714, 726, 255, "Output"]
}, Open  ]],
Cell[436644, 9399, 126, 2, 105, "Text"],
Cell[436773, 9403, 536, 8, 202, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[437370, 9418, 130, 1, 256, "Section"],
Cell[437503, 9421, 299, 7, 69, "Text"],
Cell[437805, 9430, 1263, 38, 334, "Text"],
Cell[CellGroupData[{
Cell[439093, 9472, 139, 1, 78, "Subsubsection"],
Cell[439235, 9475, 16, 0, 69, "Text"],
Cell[439254, 9477, 405, 11, 66, "Input"],
Cell[CellGroupData[{
Cell[439684, 9492, 316, 8, 64, "Input"],
Cell[440003, 9502, 461, 9, 88, "Message"],
Cell[440467, 9513, 387, 12, 64, "Output"]
}, Open  ]],
Cell[440869, 9528, 271, 7, 69, "Text"],
Cell[441143, 9537, 329, 10, 114, "Text"],
Cell[CellGroupData[{
Cell[441497, 9551, 566, 14, 64, "Input"],
Cell[442066, 9567, 1170, 33, 219, "Output"]
}, Open  ]],
Cell[443251, 9603, 238, 3, 69, "Text"],
Cell[CellGroupData[{
Cell[443514, 9610, 182, 4, 64, "Input"],
Cell[443699, 9616, 82, 1, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443818, 9622, 182, 4, 64, "Input"],
Cell[444003, 9628, 80, 1, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444120, 9634, 126, 2, 64, "Input"],
Cell[444249, 9638, 155, 4, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444441, 9647, 416, 12, 64, "Input"],
Cell[444860, 9661, 176, 4, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445073, 9670, 339, 10, 64, "Input"],
Cell[445415, 9682, 6149, 109, 538, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[451613, 9797, 106, 1, 97, "Subsection"],
Cell[CellGroupData[{
Cell[451744, 9802, 122, 1, 78, "Subsubsection"],
Cell[451869, 9805, 138, 1, 69, "Text"],
Cell[CellGroupData[{
Cell[452032, 9810, 665, 18, 123, "Input"],
Cell[452700, 9830, 457, 9, 126, "Message"],
Cell[453160, 9841, 110, 3, 64, "Output"]
}, Open  ]],
Cell[453285, 9847, 409, 7, 157, "Text"],
Cell[CellGroupData[{
Cell[453719, 9858, 808, 20, 123, "Input"],
Cell[454530, 9880, 311, 8, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454878, 9893, 851, 24, 123, "Input"],
Cell[455732, 9919, 9453, 170, 838, "Output"]
}, Open  ]],
Cell[465200, 10092, 152, 5, 69, "Text"],
Cell[CellGroupData[{
Cell[465377, 10101, 872, 24, 123, "Input"],
Cell[466252, 10127, 10796, 186, 838, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477085, 10318, 650, 19, 123, "Input"],
Cell[477738, 10339, 3713, 127, 729, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[481500, 10472, 126, 1, 78, "Subsubsection"],
Cell[481629, 10475, 972, 31, 291, "Text"],
Cell[CellGroupData[{
Cell[482626, 10510, 495, 15, 64, "Input"],
Cell[483124, 10527, 567, 11, 126, "Message"],
Cell[483694, 10540, 3310, 103, 457, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487041, 10648, 498, 15, 64, "Input"],
Cell[487542, 10665, 531, 10, 126, "Message"],
Cell[488076, 10677, 853, 25, 141, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488966, 10707, 500, 15, 64, "Input"],
Cell[489469, 10724, 4807, 138, 639, "Output"]
}, Open  ]],
Cell[494291, 10865, 302, 8, 114, "Text"],
Cell[CellGroupData[{
Cell[494618, 10877, 525, 16, 103, "Input"],
Cell[495146, 10895, 11080, 329, 1467, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506263, 11229, 528, 16, 103, "Input"],
Cell[506794, 11247, 1437, 39, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508268, 11291, 473, 15, 103, "Input"],
Cell[508744, 11308, 10052, 309, 1465, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518833, 11622, 120, 2, 64, "Input"],
Cell[518956, 11626, 1041, 22, 216, "Output"]
}, Open  ]],
Cell[520012, 11651, 376, 11, 157, "Text"],
Cell[520391, 11664, 850, 24, 240, "Text"],
Cell[521244, 11690, 362, 11, 133, "Input"],
Cell[CellGroupData[{
Cell[521631, 11705, 624, 13, 139, "Input"],
Cell[522258, 11720, 6493, 190, 1012, "Output"],
Cell[528754, 11912, 199, 3, 100, "Output"]
}, Open  ]],
Cell[528968, 11918, 509, 10, 193, "Text"],
Cell[529480, 11930, 126, 2, 105, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[529655, 11938, 96, 1, 97, "Subsection"],
Cell[529754, 11941, 1068, 22, 334, "Text"],
Cell[530825, 11965, 821, 14, 282, "Text"],
Cell[531649, 11981, 1046, 20, 1041, "Output"],
Cell[532698, 12003, 1151, 32, 415, "Text"],
Cell[CellGroupData[{
Cell[533874, 12039, 813, 25, 177, "Input"],
Cell[534690, 12066, 259, 7, 100, "Output"],
Cell[534952, 12075, 125, 2, 100, "Output"]
}, Open  ]],
Cell[535092, 12080, 126, 2, 105, "Text"],
Cell[535221, 12084, 1143, 27, 342, "Text"],
Cell[CellGroupData[{
Cell[536389, 12115, 2811, 83, 669, "Input"],
Cell[539203, 12200, 129, 2, 100, "Output"],
Cell[539335, 12204, 599, 12, 1041, "Output"]
}, Open  ]],
Cell[539949, 12219, 194, 6, 69, "Text"],
Cell[540146, 12227, 114, 2, 64, "Input"],
Cell[540263, 12231, 126, 2, 105, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[540438, 12239, 92, 1, 178, "Section"],
Cell[540533, 12242, 702, 26, 202, "Text"],
Cell[CellGroupData[{
Cell[541260, 12272, 132, 2, 64, "Input"],
Cell[541395, 12276, 75, 1, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541507, 12282, 614, 18, 105, "Input"],
Cell[542124, 12302, 6685, 208, 843, "Output"]
}, Open  ]],
Cell[548824, 12513, 140, 1, 69, "Text"],
Cell[548967, 12516, 129, 2, 64, "Input"],
Cell[549099, 12520, 193, 4, 114, "Text"],
Cell[CellGroupData[{
Cell[549317, 12528, 814, 25, 196, "Input"],
Cell[550134, 12555, 5378, 149, 358, "Output"],
Cell[555515, 12706, 4922, 138, 354, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560474, 12849, 128, 2, 64, "Input"],
Cell[560605, 12853, 71, 1, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560713, 12859, 266, 7, 64, "Input"],
Cell[560982, 12868, 97, 1, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561116, 12874, 219, 6, 64, "Input"],
Cell[561338, 12882, 75, 1, 64, "Output"]
}, Open  ]],
Cell[561428, 12886, 476, 13, 114, "Text"],
Cell[CellGroupData[{
Cell[561929, 12903, 137, 2, 64, "Input"],
Cell[562069, 12907, 74, 1, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562180, 12913, 152, 2, 64, "Input"],
Cell[562335, 12917, 73, 1, 64, "Output"]
}, Open  ]],
Cell[562423, 12921, 115, 1, 69, "Text"],
Cell[CellGroupData[{
Cell[562563, 12926, 208, 5, 64, "Input"],
Cell[562774, 12933, 154, 4, 64, "Output"]
}, Open  ]],
Cell[562943, 12940, 909, 23, 205, "Text"],
Cell[CellGroupData[{
Cell[563877, 12967, 317, 9, 64, "Input"],
Cell[564197, 12978, 263, 7, 64, "Output"]
}, Open  ]],
Cell[564475, 12988, 485, 13, 70, "Text"],
Cell[CellGroupData[{
Cell[564985, 13005, 105, 1, 97, "Subsection"],
Cell[565093, 13008, 117, 2, 64, "Input"],
Cell[565213, 13012, 550, 18, 114, "Text"],
Cell[565766, 13032, 275, 7, 105, "Text"],
Cell[566044, 13041, 910, 26, 148, "Input"],
Cell[566957, 13069, 261, 4, 105, "Text"],
Cell[567221, 13075, 970, 27, 282, "Text"],
Cell[CellGroupData[{
Cell[568216, 13106, 1012, 32, 148, "Input"],
Cell[569231, 13140, 110, 2, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569378, 13147, 381, 12, 100, "Input"],
Cell[569762, 13161, 108, 2, 100, "Output"]
}, Open  ]],
Cell[569885, 13166, 899, 17, 459, "Text"],
Cell[CellGroupData[{
Cell[570809, 13187, 452, 14, 100, "Input"],
Cell[571264, 13203, 108, 2, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571409, 13210, 422, 13, 100, "Input"],
Cell[571834, 13225, 108, 2, 100, "Output"]
}, Open  ]],
Cell[571957, 13230, 126, 2, 105, "Text"],
Cell[CellGroupData[{
Cell[572108, 13236, 112, 1, 78, "Subsubsection"],
Cell[572223, 13239, 417, 11, 109, "Text"],
Cell[572643, 13252, 222, 4, 105, "Text"],
Cell[572868, 13258, 368, 9, 150, "Text"],
Cell[CellGroupData[{
Cell[573261, 13271, 488, 16, 159, "Input"],
Cell[573752, 13289, 8523, 254, 1002, "Output"]
}, Open  ]],
Cell[582290, 13546, 487, 11, 238, "Text"],
Cell[CellGroupData[{
Cell[582802, 13561, 684, 23, 159, "Input"],
Cell[583489, 13586, 2816, 84, 364, "Output"]
}, Open  ]],
Cell[586320, 13673, 454, 10, 193, "Text"],
Cell[CellGroupData[{
Cell[586799, 13687, 688, 23, 159, "Input"],
Cell[587490, 13712, 8053, 246, 889, "Output"]
}, Open  ]],
Cell[595558, 13961, 126, 2, 105, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
